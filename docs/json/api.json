{
	"id": 0,
	"name": "pc-ex",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "CameraComponent_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.CameraComponent"
					}
				}
			],
			"children": [
				{
					"id": 6,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 7,
							"name": "new CameraComponent_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new CameraComponent instance."
							},
							"parameters": [
								{
									"id": 8,
									"name": "system",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ComponentSystem that created this Component."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CameraComponentSystem",
										"package": "playcanvas",
										"name": "CameraComponentSystem"
									}
								},
								{
									"id": 9,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The Entity that this Component is attached to.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Entity",
										"package": "playcanvas",
										"name": "Entity"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "CameraComponent_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.constructor"
					}
				},
				{
					"id": 75,
					"name": "_camera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28281,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Camera",
						"package": "playcanvas",
						"name": "Camera"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._camera"
					}
				},
				{
					"id": 77,
					"name": "_disablePostEffectsLayer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28283,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._disablePostEffectsLayer"
					}
				},
				{
					"id": 78,
					"name": "_postEffects",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28284,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "PostEffectQueue",
						"package": "playcanvas",
						"name": "PostEffectQueue"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._postEffects"
					}
				},
				{
					"id": 76,
					"name": "_priority",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28282,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._priority"
					}
				},
				{
					"id": 156,
					"name": "aspectRatio",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28434,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.aspectRatio"
					}
				},
				{
					"id": 74,
					"name": "onPostRender",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Custom function that is called after the camera renders the scene."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28280,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Function",
						"package": "typescript",
						"name": "Function"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onPostRender"
					}
				},
				{
					"id": 73,
					"name": "onPreRender",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Custom function that is called before the camera renders the scene."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28274,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Function",
						"package": "typescript",
						"name": "Function"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onPreRender"
					}
				},
				{
					"id": 157,
					"name": "vrDisplay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28501,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.vrDisplay"
					}
				},
				{
					"id": 17,
					"name": "aspectRatioMode",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28220,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 18,
							"name": "aspectRatioMode",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.aspectRatioMode"
							}
						}
					],
					"setSignature": [
						{
							"id": 19,
							"name": "aspectRatioMode",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 20,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.aspectRatioMode"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.aspectRatioMode"
					}
				},
				{
					"id": 21,
					"name": "calculateProjection",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28223,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 22,
							"name": "calculateProjection",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "CalculateMatrixCallback",
								"package": "playcanvas",
								"name": "CalculateMatrixCallback"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateProjection"
							}
						}
					],
					"setSignature": [
						{
							"id": 23,
							"name": "calculateProjection",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 24,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CalculateMatrixCallback",
										"package": "playcanvas",
										"name": "CalculateMatrixCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateProjection"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.calculateProjection"
					}
				},
				{
					"id": 25,
					"name": "calculateTransform",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28226,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 26,
							"name": "calculateTransform",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "CalculateMatrixCallback",
								"package": "playcanvas",
								"name": "CalculateMatrixCallback"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateTransform"
							}
						}
					],
					"setSignature": [
						{
							"id": 27,
							"name": "calculateTransform",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 28,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CalculateMatrixCallback",
										"package": "playcanvas",
										"name": "CalculateMatrixCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateTransform"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.calculateTransform"
					}
				},
				{
					"id": 79,
					"name": "camera",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPrivate": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28291,
							"character": 16
						}
					],
					"getSignature": [
						{
							"id": 80,
							"name": "camera",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isPrivate": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Queries the camera component's underlying Camera instance."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.camera"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.camera"
					}
				},
				{
					"id": 29,
					"name": "clearColor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28229,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 30,
							"name": "clearColor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearColor"
							}
						}
					],
					"setSignature": [
						{
							"id": 31,
							"name": "clearColor",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 32,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearColor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearColor"
					}
				},
				{
					"id": 81,
					"name": "clearColorBuffer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28297,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 82,
							"name": "clearColorBuffer",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the color buffer to the color set in clearColor. Defaults to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearColorBuffer"
							}
						}
					],
					"setSignature": [
						{
							"id": 83,
							"name": "clearColorBuffer",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the color buffer to the color set in clearColor. Defaults to true."
							},
							"parameters": [
								{
									"id": 84,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearColorBuffer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearColorBuffer"
					}
				},
				{
					"id": 85,
					"name": "clearDepthBuffer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28304,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 86,
							"name": "clearDepthBuffer",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the depth buffer. Defaults to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearDepthBuffer"
							}
						}
					],
					"setSignature": [
						{
							"id": 87,
							"name": "clearDepthBuffer",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the depth buffer. Defaults to true."
							},
							"parameters": [
								{
									"id": 88,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearDepthBuffer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearDepthBuffer"
					}
				},
				{
					"id": 89,
					"name": "clearStencilBuffer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28311,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 90,
							"name": "clearStencilBuffer",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the stencil buffer. Defaults to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearStencilBuffer"
							}
						}
					],
					"setSignature": [
						{
							"id": 91,
							"name": "clearStencilBuffer",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the stencil buffer. Defaults to true."
							},
							"parameters": [
								{
									"id": 92,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearStencilBuffer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearStencilBuffer"
					}
				},
				{
					"id": 33,
					"name": "cullFaces",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28232,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 34,
							"name": "cullFaces",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.cullFaces"
							}
						}
					],
					"setSignature": [
						{
							"id": 35,
							"name": "cullFaces",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 36,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.cullFaces"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.cullFaces"
					}
				},
				{
					"id": 93,
					"name": "disablePostEffectsLayer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28321,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 94,
							"name": "disablePostEffectsLayer",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Layer ID of a layer on which the postprocessing of the camera stops being applied to.\nDefaults to LAYERID_UI, which causes post processing to not be applied to UI layer and any\nfollowing layers for the camera. Set to undefined for post-processing to be applied to all\nlayers of the camera."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.disablePostEffectsLayer"
							}
						}
					],
					"setSignature": [
						{
							"id": 95,
							"name": "disablePostEffectsLayer",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Layer ID of a layer on which the postprocessing of the camera stops being applied to.\nDefaults to LAYERID_UI, which causes post processing to not be applied to UI layer and any\nfollowing layers for the camera. Set to undefined for post-processing to be applied to all\nlayers of the camera."
							},
							"parameters": [
								{
									"id": 96,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.disablePostEffectsLayer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.disablePostEffectsLayer"
					}
				},
				{
					"id": 178,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9610,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 179,
							"name": "enabled",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.enabled"
							}
						}
					],
					"setSignature": [
						{
							"id": 180,
							"name": "enabled",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 181,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.enabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.enabled"
					}
				},
				{
					"id": 37,
					"name": "farClip",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28235,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 38,
							"name": "farClip",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.farClip"
							}
						}
					],
					"setSignature": [
						{
							"id": 39,
							"name": "farClip",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 40,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.farClip"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.farClip"
					}
				},
				{
					"id": 41,
					"name": "flipFaces",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28238,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 42,
							"name": "flipFaces",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.flipFaces"
							}
						}
					],
					"setSignature": [
						{
							"id": 43,
							"name": "flipFaces",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 44,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.flipFaces"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.flipFaces"
					}
				},
				{
					"id": 45,
					"name": "fov",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28241,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 46,
							"name": "fov",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.fov"
							}
						}
					],
					"setSignature": [
						{
							"id": 47,
							"name": "fov",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 48,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.fov"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.fov"
					}
				},
				{
					"id": 97,
					"name": "frustum",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28328,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 98,
							"name": "frustum",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Queries the camera's frustum shape."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Frustum",
								"package": "playcanvas",
								"name": "Frustum"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.frustum"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.frustum"
					}
				},
				{
					"id": 49,
					"name": "frustumCulling",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28244,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 50,
							"name": "frustumCulling",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.frustumCulling"
							}
						}
					],
					"setSignature": [
						{
							"id": 51,
							"name": "frustumCulling",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 52,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.frustumCulling"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.frustumCulling"
					}
				},
				{
					"id": 53,
					"name": "horizontalFov",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28247,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 54,
							"name": "horizontalFov",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.horizontalFov"
							}
						}
					],
					"setSignature": [
						{
							"id": 55,
							"name": "horizontalFov",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 56,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.horizontalFov"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.horizontalFov"
					}
				},
				{
					"id": 99,
					"name": "layers",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28336,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 100,
							"name": "layers",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "An array of layer IDs ({@link Layer#id}) to which this camera should belong. Don't push,\npop, splice or modify this array, if you want to change it, set a new one instead. Defaults\nto [LAYERID_WORLD, LAYERID_DEPTH, LAYERID_SKYBOX, LAYERID_UI, LAYERID_IMMEDIATE]."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.layers"
							}
						}
					],
					"setSignature": [
						{
							"id": 101,
							"name": "layers",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "An array of layer IDs ({@link Layer#id}) to which this camera should belong. Don't push,\npop, splice or modify this array, if you want to change it, set a new one instead. Defaults\nto [LAYERID_WORLD, LAYERID_DEPTH, LAYERID_SKYBOX, LAYERID_UI, LAYERID_IMMEDIATE]."
							},
							"parameters": [
								{
									"id": 102,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.layers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.layers"
					}
				},
				{
					"id": 57,
					"name": "nearClip",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28250,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 58,
							"name": "nearClip",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.nearClip"
							}
						}
					],
					"setSignature": [
						{
							"id": 59,
							"name": "nearClip",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 60,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.nearClip"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.nearClip"
					}
				},
				{
					"id": 61,
					"name": "orthoHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28253,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 62,
							"name": "orthoHeight",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.orthoHeight"
							}
						}
					],
					"setSignature": [
						{
							"id": 63,
							"name": "orthoHeight",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 64,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.orthoHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.orthoHeight"
					}
				},
				{
					"id": 105,
					"name": "postEffects",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28344,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 106,
							"name": "postEffects",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "PostEffectQueue",
								"package": "playcanvas",
								"name": "PostEffectQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.postEffects"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.postEffects"
					}
				},
				{
					"id": 103,
					"name": "postEffectsEnabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28343,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 104,
							"name": "postEffectsEnabled",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The post effects queue for this camera. Use this to add or remove post effects from the camera."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "PostEffectQueue",
								"package": "playcanvas",
								"name": "PostEffectQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.postEffectsEnabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.postEffectsEnabled"
					}
				},
				{
					"id": 107,
					"name": "priority",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28351,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 108,
							"name": "priority",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Controls the order in which cameras are rendered. Cameras with smaller values for priority\nare rendered first. Defaults to 0."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.priority"
							}
						}
					],
					"setSignature": [
						{
							"id": 109,
							"name": "priority",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Controls the order in which cameras are rendered. Cameras with smaller values for priority\nare rendered first. Defaults to 0."
							},
							"parameters": [
								{
									"id": 110,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.priority"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.priority"
					}
				},
				{
					"id": 65,
					"name": "projection",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28256,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 66,
							"name": "projection",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.projection"
							}
						}
					],
					"setSignature": [
						{
							"id": 67,
							"name": "projection",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 68,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.projection"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.projection"
					}
				},
				{
					"id": 111,
					"name": "projectionMatrix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28358,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 112,
							"name": "projectionMatrix",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Queries the camera's projection matrix."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Mat4",
								"package": "playcanvas",
								"name": "Mat4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.projectionMatrix"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.projectionMatrix"
					}
				},
				{
					"id": 113,
					"name": "rect",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28365,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 114,
							"name": "rect",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Controls where on the screen the camera will be rendered in normalized screen coordinates.\nDefaults to [0, 0, 1, 1]."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.rect"
							}
						}
					],
					"setSignature": [
						{
							"id": 115,
							"name": "rect",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Controls where on the screen the camera will be rendered in normalized screen coordinates.\nDefaults to [0, 0, 1, 1]."
							},
							"parameters": [
								{
									"id": 116,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.rect"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.rect"
					}
				},
				{
					"id": 117,
					"name": "renderTarget",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28373,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 118,
							"name": "renderTarget",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Render target to which rendering of the cameras is performed. If not set, it will render\nsimply to the screen."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.renderTarget"
							}
						}
					],
					"setSignature": [
						{
							"id": 119,
							"name": "renderTarget",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Render target to which rendering of the cameras is performed. If not set, it will render\nsimply to the screen."
							},
							"parameters": [
								{
									"id": 120,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.renderTarget"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.renderTarget"
					}
				},
				{
					"id": 69,
					"name": "scissorRect",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28259,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 70,
							"name": "scissorRect",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.scissorRect"
							}
						}
					],
					"setSignature": [
						{
							"id": 71,
							"name": "scissorRect",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 72,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.scissorRect"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.scissorRect"
					}
				},
				{
					"id": 121,
					"name": "viewMatrix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28380,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 122,
							"name": "viewMatrix",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Queries the camera's view matrix."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Mat4",
								"package": "playcanvas",
								"name": "Mat4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.viewMatrix"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.viewMatrix"
					}
				},
				{
					"id": 137,
					"name": "addCameraToLayers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28413,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 138,
							"name": "addCameraToLayers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.addCameraToLayers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.addCameraToLayers"
					}
				},
				{
					"id": 184,
					"name": "buildAccessors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9627,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 185,
							"name": "buildAccessors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 186,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.buildAccessors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.buildAccessors"
					}
				},
				{
					"id": 153,
					"name": "calculateAspectRatio",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28425,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 154,
							"name": "calculateAspectRatio",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Calculates aspect ratio value for a given render target.",
								"returns": "The aspect ratio of the render target (or backbuffer).\n"
							},
							"parameters": [
								{
									"id": 155,
									"name": "rt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas",
										"name": "RenderTarget"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateAspectRatio"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.calculateAspectRatio"
					}
				},
				{
					"id": 175,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28582,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 177,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.copy"
					}
				},
				{
					"id": 123,
					"name": "dirtyLayerCompositionCameras",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28381,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "dirtyLayerCompositionCameras",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.dirtyLayerCompositionCameras"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.dirtyLayerCompositionCameras"
					}
				},
				{
					"id": 172,
					"name": "endXr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28581,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 173,
							"name": "endXr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attempt to end XR session of this camera.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// On an entity with a camera component\nthis.entity.camera.endXr(function (err) {\n    // not anymore in XR\n});\n"
									}
								]
							},
							"parameters": [
								{
									"id": 174,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "XrErrorCallback",
										"package": "playcanvas",
										"name": "XrErrorCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.endXr"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.endXr"
					}
				},
				{
					"id": 210,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 211,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Fire an event, all additional arguments are passed on to the event listener.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.fire('test', 'This is the message');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 212,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of event to fire."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 213,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 214,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 215,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 216,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 217,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 218,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 219,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 220,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.fire"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.fire"
					}
				},
				{
					"id": 226,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 130,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 227,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Test if there are any handlers bound to an event name.",
								"returns": "True if the object has handlers bound to the specified event name.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.on('test', function () { }); // bind an event to 'test'\nobj.hasEvent('test'); // returns true\nobj.hasEvent('hello'); // returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 228,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the event to test."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.hasEvent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.hasEvent"
					}
				},
				{
					"id": 205,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 206,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Detach an event handler from an event. If callback is not provided then all callbacks are\nunbound from the event, if scope is not provided then all events with the callback will be\nunbound.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar handler = function () {\n};\nobj.on('test', handler);\n\nobj.off(); // Removes all events\nobj.off('test'); // Removes all events called 'test'\nobj.off('test', handler); // Removes all handler functions, called 'test'\nobj.off('test', handler, this); // Removes all handler functions, called 'test' with scope this\n"
									}
								]
							},
							"parameters": [
								{
									"id": 207,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 208,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 209,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.off"
					}
				},
				{
					"id": 200,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 201,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attach an event handler to an event.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.on('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\n"
									}
								]
							},
							"parameters": [
								{
									"id": 202,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 203,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 204,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.on"
					}
				},
				{
					"id": 135,
					"name": "onAppPrerender",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28412,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 136,
							"name": "onAppPrerender",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onAppPrerender"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onAppPrerender"
					}
				},
				{
					"id": 194,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9630,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 195,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onDisable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onDisable"
					}
				},
				{
					"id": 192,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9629,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 193,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onEnable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onEnable"
					}
				},
				{
					"id": 145,
					"name": "onLayerAdded",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28416,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 146,
							"name": "onLayerAdded",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 147,
									"name": "layer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onLayerAdded"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onLayerAdded"
					}
				},
				{
					"id": 148,
					"name": "onLayerRemoved",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28417,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 149,
							"name": "onLayerRemoved",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 150,
									"name": "layer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onLayerRemoved"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onLayerRemoved"
					}
				},
				{
					"id": 141,
					"name": "onLayersChanged",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28415,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 142,
							"name": "onLayersChanged",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 143,
									"name": "oldComp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 144,
									"name": "newComp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onLayersChanged"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onLayersChanged"
					}
				},
				{
					"id": 196,
					"name": "onPostStateChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9631,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "onPostStateChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onPostStateChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onPostStateChange"
					}
				},
				{
					"id": 151,
					"name": "onRemove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28418,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 152,
							"name": "onRemove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onRemove"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onRemove"
					}
				},
				{
					"id": 187,
					"name": "onSetEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9628,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 188,
							"name": "onSetEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 189,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 190,
									"name": "oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 191,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onSetEnabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onSetEnabled"
					}
				},
				{
					"id": 221,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 119,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attach an event handler to an event. This handler will be removed after being fired once.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.once('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\nobj.fire('test', 1, 2); // not going to get handled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 223,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 224,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 225,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.once"
					}
				},
				{
					"id": 13,
					"name": "raycastMeshInstances",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/cameraComponent.ts",
							"line": 46,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 14,
							"name": "raycastMeshInstances",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "从此相机发射射线，检测一系列mesh的交点",
								"returns": "交点集合\n"
							},
							"parameters": [
								{
									"id": 15,
									"name": "ray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "要检测的射线"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Ray",
										"package": "playcanvas",
										"name": "Ray"
									}
								},
								{
									"id": 16,
									"name": "meshInstances",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "要检测的meshInstance集合"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "MeshInstance",
											"package": "playcanvas",
											"name": "MeshInstance"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1022,
									"name": "intersect"
								}
							}
						}
					]
				},
				{
					"id": 139,
					"name": "removeCameraFromLayers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28414,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 140,
							"name": "removeCameraFromLayers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.removeCameraFromLayers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.removeCameraFromLayers"
					}
				},
				{
					"id": 125,
					"name": "screenToWorld",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28403,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 126,
							"name": "screenToWorld",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Convert a point from 2D screen space to 3D world space.",
								"returns": "The world space coordinate.\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Get the start and end points of a 3D ray fired from a screen click position\nvar start = entity.camera.screenToWorld(clickX, clickY, entity.camera.nearClip);\nvar end = entity.camera.screenToWorld(clickX, clickY, entity.camera.farClip);\n\n// Use the ray coordinates to perform a raycast\napp.systems.rigidbody.raycastFirst(start, end, function (result) {\n    console.log(\"Entity \" + result.entity.name + \" was selected\");\n});"
									}
								]
							},
							"parameters": [
								{
									"id": 127,
									"name": "screenx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "X coordinate on PlayCanvas' canvas element. Should be in the range\n0 to `canvas.offsetWidth` of the application's canvas element."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 128,
									"name": "screeny",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Y coordinate on PlayCanvas' canvas element. Should be in the range\n0 to `canvas.offsetHeight` of the application's canvas element."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 129,
									"name": "cameraz",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The distance from the camera in world space to create the new\npoint."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 130,
									"name": "worldCoord",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.screenToWorld"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.screenToWorld"
					}
				},
				{
					"id": 158,
					"name": "startXr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28560,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 159,
							"name": "startXr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attempt to start XR session with this camera.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// On an entity with a camera component\nthis.entity.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n    callback: function (err) {\n        if (err) {\n            // failed to start XR session\n        } else {\n            // in XR\n        }\n    }\n});\n"
									}
								]
							},
							"parameters": [
								{
									"id": 160,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The type of session. Can be one of the following:\n\n- {@link XRTYPE_INLINE}: Inline - always available type of session. It has limited feature\navailability and is rendered into HTML element.\n- {@link XRTYPE_VR}: Immersive VR - session that provides exclusive access to the VR device\nwith the best available tracking features.\n- {@link XRTYPE_AR}: Immersive AR - session that provides exclusive access to the VR/AR\ndevice that is intended to be blended with the real-world environment.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 161,
									"name": "spaceType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Reference space type. Can be one of the following:\n\n- {@link XRSPACE_VIEWER}: Viewer - always supported space with some basic tracking\ncapabilities.\n- {@link XRSPACE_LOCAL}: Local - represents a tracking space with a native origin near the\nviewer at the time of creation. It is meant for seated or basic local XR sessions.\n- {@link XRSPACE_LOCALFLOOR}: Local Floor - represents a tracking space with a native origin\nat the floor in a safe position for the user to stand. The y-axis equals 0 at floor level.\nFloor level value might be estimated by the underlying platform. It is meant for seated or\nbasic local XR sessions.\n- {@link XRSPACE_BOUNDEDFLOOR}: Bounded Floor - represents a tracking space with its native\norigin at the floor, where the user is expected to move within a pre-established boundary.\n- {@link XRSPACE_UNBOUNDED}: Unbounded - represents a tracking space where the user is\nexpected to move freely around their environment, potentially long distances from their\nstarting point.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 162,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 163,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 167,
													"name": "callback",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 28564,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"qualifiedName": "XrErrorCallback",
														"package": "playcanvas",
														"name": "XrErrorCallback"
													}
												},
												{
													"id": 168,
													"name": "depthSensing",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 28565,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 169,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 171,
																	"name": "dataFormatPreference",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
																			"line": 28567,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 170,
																	"name": "usagePreference",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
																			"line": 28566,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		171,
																		170
																	]
																}
															]
														}
													}
												},
												{
													"id": 165,
													"name": "imageTracking",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 28562,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 164,
													"name": "optionalFeatures",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 28561,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 166,
													"name": "planeDetection",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 28563,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														167,
														168,
														165,
														164,
														166
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.startXr"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.startXr"
					}
				},
				{
					"id": 10,
					"name": "syncCamera",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/cameraComponent.ts",
							"line": 22,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 11,
							"name": "syncCamera",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "让两个相机同步"
							},
							"parameters": [
								{
									"id": 12,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "要同步的相机\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CameraComponent",
										"package": "playcanvas",
										"name": "CameraComponent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 131,
					"name": "worldToScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28411,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 132,
							"name": "worldToScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Convert a point from 3D world space to 2D screen space.",
								"returns": "The screen space coordinate.\n"
							},
							"parameters": [
								{
									"id": 133,
									"name": "worldCoord",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The world space coordinate."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 134,
									"name": "screenCoord",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.worldToScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.worldToScreen"
					}
				},
				{
					"id": 2,
					"name": "_buildAccessors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9601,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "_buildAccessors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 4,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 5,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent._buildAccessors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._buildAccessors"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						6
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						75,
						77,
						78,
						76,
						156,
						74,
						73,
						157
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						17,
						21,
						25,
						79,
						29,
						81,
						85,
						89,
						33,
						93,
						178,
						37,
						41,
						45,
						97,
						49,
						53,
						99,
						57,
						61,
						105,
						103,
						107,
						65,
						111,
						113,
						117,
						69,
						121
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						137,
						184,
						153,
						175,
						123,
						172,
						210,
						226,
						205,
						200,
						135,
						194,
						192,
						145,
						148,
						141,
						196,
						151,
						187,
						221,
						13,
						139,
						125,
						158,
						10,
						131,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/cameraComponent.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "CameraComponent",
					"package": "playcanvas",
					"name": "CameraComponent"
				}
			]
		},
		{
			"id": 229,
			"name": "Color_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.Color"
					}
				}
			],
			"children": [
				{
					"id": 239,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 240,
							"name": "new Color_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Color object."
							},
							"parameters": [
								{
									"id": 241,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 242,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 243,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 244,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 229,
								"name": "Color_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.constructor"
					}
				},
				{
					"id": 245,
					"name": "_shaderData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/color.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Float32Array",
						"package": "typescript",
						"name": "Float32Array"
					}
				},
				{
					"id": 251,
					"name": "a",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The alpha component of the color."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10694,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.a"
					}
				},
				{
					"id": 250,
					"name": "b",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The blue component of the color."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10688,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.b"
					}
				},
				{
					"id": 249,
					"name": "g",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The green component of the color."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10682,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.g"
					}
				},
				{
					"id": 248,
					"name": "r",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The red component of the color."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10676,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.r"
					}
				},
				{
					"id": 230,
					"name": "BLACK",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to black [0, 0, 0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10604,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.BLACK"
					}
				},
				{
					"id": 231,
					"name": "BLUE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to blue [0, 0, 1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10611,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.BLUE"
					}
				},
				{
					"id": 232,
					"name": "CYAN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to cyan [0, 1, 1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10618,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.CYAN"
					}
				},
				{
					"id": 233,
					"name": "GRAY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to gray [0.5, 0.5, 0.5, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10625,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.GRAY"
					}
				},
				{
					"id": 234,
					"name": "GREEN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to green [0, 1, 0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10632,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.GREEN"
					}
				},
				{
					"id": 235,
					"name": "MAGENTA",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to magenta [1, 0, 1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10639,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.MAGENTA"
					}
				},
				{
					"id": 236,
					"name": "RED",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to red [1, 0, 0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10646,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.RED"
					}
				},
				{
					"id": 237,
					"name": "WHITE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to white [1, 1, 1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10653,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.WHITE"
					}
				},
				{
					"id": 238,
					"name": "YELLOW",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to yellow [1, 1, 0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10660,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.YELLOW"
					}
				},
				{
					"id": 246,
					"name": "shaderData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/color.ts",
							"line": 21,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 247,
							"name": "shaderData",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "用于传入shader的数据"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Float32Array",
								"package": "typescript",
								"name": "Float32Array"
							}
						}
					]
				},
				{
					"id": 252,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10700,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 253,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a clone of the specified color.",
								"returns": "A duplicate color object.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.clone"
					}
				},
				{
					"id": 254,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10714,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Copies the contents of a source color to a destination color.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar src = new pc.Color(1, 0, 0, 1);\nvar dst = new pc.Color();\n\ndst.copy(src);\n\nconsole.log(\"The two colors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 256,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A color to copy to the specified color."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.copy"
					}
				},
				{
					"id": 257,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10725,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 258,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Reports whether two colors are equal.",
								"returns": "True if the colors are equal and false otherwise.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Color(1, 0, 0, 1);\nvar b = new pc.Color(1, 1, 0, 1);\nconsole.log(\"The two colors are \" + (a.equals(b) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 259,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The color to compare to the specified color."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.equals"
					}
				},
				{
					"id": 271,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10763,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 272,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Set the values of the color from a string representation '#11223344' or '#112233'.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 273,
									"name": "hex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A string representation in the format '#RRGGBBAA' or '#RRGGBB'. Where\nRR, GG, BB, AA are red, green, blue and alpha values. This is the same format used in\nHTML/CSS."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.fromString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.fromString"
					}
				},
				{
					"id": 266,
					"name": "lerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10754,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 267,
							"name": "lerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a linear interpolation between two specified colors.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Color(0, 0, 0);\nvar b = new pc.Color(1, 1, 0.5);\nvar r = new pc.Color();\n\nr.lerp(a, b, 0);   // r is equal to a\nr.lerp(a, b, 0.5); // r is 0.5, 0.5, 0.25\nr.lerp(a, b, 1);   // r is equal to b\n"
									}
								]
							},
							"parameters": [
								{
									"id": 268,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The color to interpolate from."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								},
								{
									"id": 269,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The color to interpolate to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								},
								{
									"id": 270,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value controlling the point of interpolation. Between 0 and 1,\nthe linear interpolant will occur on a straight line between lhs and rhs. Outside of this\nrange, the linear interpolant will occur on a ray extrapolated from this line."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.lerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.lerp"
					}
				},
				{
					"id": 260,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10735,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 261,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Assign values to the color components, including alpha.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 262,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value for red (0-1)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 263,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value for blue (0-1)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 264,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value for green (0-1)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 265,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.set"
					}
				},
				{
					"id": 274,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10776,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 275,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Converts the color to string form. The format is '#RRGGBBAA', where RR, GG, BB, AA are the\nred, green, blue and alpha values. When the alpha value is not included (the default), this\nis the same format as used in HTML/CSS.",
								"returns": "The color in string form.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar c = new pc.Color(1, 1, 1);\n// Outputs #ffffffff\nconsole.log(c.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 276,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "If true, the output string will include the alpha value."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						239
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						245,
						251,
						250,
						249,
						248,
						230,
						231,
						232,
						233,
						234,
						235,
						236,
						237,
						238
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						246
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						252,
						254,
						257,
						271,
						266,
						260,
						274
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/color.ts",
					"line": 14,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Color",
					"package": "playcanvas",
					"name": "Color"
				}
			]
		},
		{
			"id": 277,
			"name": "Curve_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.Curve"
					}
				}
			],
			"children": [
				{
					"id": 278,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 279,
							"name": "new Curve_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new Curve instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar curve = new pc.Curve([\n    0, 0,        // At 0 time, value of 0\n    0.33, 2,     // At 0.33 time, value of 2\n    0.66, 2.6,   // At 0.66 time, value of 2.6\n    1, 3         // At 1 time, value of 3\n]);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 280,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 277,
								"name": "Curve_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.constructor"
					}
				},
				{
					"id": 287,
					"name": "keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17254,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.keys"
					}
				},
				{
					"id": 289,
					"name": "tension",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Controls how {@link CURVE_SPLINE} tangents are calculated. Valid range is between 0 and\n1 where 0 results in a non-smooth curve (equivalent to linear interpolation) and 1\nresults in a very smooth curve. Use 0.5 for a Catmull-rom spline."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17275,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.tension"
					}
				},
				{
					"id": 288,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The curve interpolation scheme. Can be:",
						"text": "- {@link CURVE_LINEAR}\n- {@link CURVE_SMOOTHSTEP}\n- {@link CURVE_SPLINE}\n- {@link CURVE_STEP}\n\nDefaults to {@link CURVE_SMOOTHSTEP}.\n"
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17267,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.type"
					}
				},
				{
					"id": 290,
					"name": "length",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17286,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 291,
							"name": "length",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the number of keys in the curve."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.length"
					}
				},
				{
					"id": 292,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17294,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 293,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Add a new key to the curve.",
								"returns": "[time, value] pair.\n"
							},
							"parameters": [
								{
									"id": 294,
									"name": "time",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Time to add new key."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 295,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Value of new key."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.add"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.add"
					}
				},
				{
					"id": 307,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17319,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 308,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a clone of the specified curve object.",
								"returns": "A clone of the specified curve.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Curve",
								"package": "playcanvas",
								"name": "Curve"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.clone"
					}
				},
				{
					"id": 304,
					"name": "closest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17313,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 305,
							"name": "closest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 306,
									"name": "time",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.closest"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.closest"
					}
				},
				{
					"id": 296,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17301,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 297,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Return a specific key.",
								"returns": "The key at the specified index.\n"
							},
							"parameters": [
								{
									"id": 298,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The index of the key to return."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.get"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.get"
					}
				},
				{
					"id": 284,
					"name": "getNormal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/curve.ts",
							"line": 36,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 285,
							"name": "getNormal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "获得曲线在此处的法线斜率",
								"returns": "法线斜率\n"
							},
							"parameters": [
								{
									"id": 286,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "在曲线上的百分比位置"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 281,
					"name": "getTangent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/curve.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 282,
							"name": "getTangent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "获得曲线在此处的切线斜率",
								"returns": "切线斜率\n"
							},
							"parameters": [
								{
									"id": 283,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "在曲线上的百分比位置"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 299,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17305,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 300,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sort keys by time."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.sort"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.sort"
					}
				},
				{
					"id": 301,
					"name": "value",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17312,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 302,
							"name": "value",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the interpolated value of the curve at specified time.",
								"returns": "The interpolated value.\n"
							},
							"parameters": [
								{
									"id": 303,
									"name": "time",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The time at which to calculate the value."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.value"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.value"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						278
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						287,
						289,
						288
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						290
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						292,
						307,
						304,
						296,
						284,
						281,
						299,
						301
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/curve.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Curve",
					"package": "playcanvas",
					"name": "Curve"
				}
			]
		},
		{
			"id": 1828,
			"name": "DebugLine",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "newUtil",
					"type": {
						"type": "reference",
						"id": 1927,
						"name": "newUtil"
					}
				}
			],
			"children": [
				{
					"id": 1836,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1837,
							"name": "new DebugLine",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1828,
								"name": "DebugLine"
							}
						}
					]
				},
				{
					"id": 1834,
					"name": "clearLines",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newUtils/debugLine.ts",
							"line": 38,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1835,
							"name": "clearLines",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "清除所有直线"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1829,
					"name": "drawLine",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newUtils/debugLine.ts",
							"line": 24,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1830,
							"name": "drawLine",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "绘制直线"
							},
							"parameters": [
								{
									"id": 1831,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "起点"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1832,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "终点"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1833,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "颜色\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1836
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1834,
						1829
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/newUtils/debugLine.ts",
					"line": 16,
					"character": 13
				}
			]
		},
		{
			"id": 317,
			"name": "ElementComponent_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.ElementComponent"
					}
				}
			],
			"children": [
				{
					"id": 322,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 323,
							"name": "new ElementComponent_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new ElementComponent instance."
							},
							"parameters": [
								{
									"id": 324,
									"name": "system",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ComponentSystem that created this Component."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "ElementComponentSystem",
										"package": "playcanvas",
										"name": "ElementComponentSystem"
									}
								},
								{
									"id": 325,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The Entity that this Component is attached to.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Entity",
										"package": "playcanvas",
										"name": "Entity"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 317,
								"name": "ElementComponent_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.constructor"
					}
				},
				{
					"id": 518,
					"name": "_addedModels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14901,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._addedModels"
					}
				},
				{
					"id": 490,
					"name": "_anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14867,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec4",
						"package": "playcanvas",
						"name": "Vec4"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._anchor"
					}
				},
				{
					"id": 501,
					"name": "_anchorDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14878,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._anchorDirty"
					}
				},
				{
					"id": 500,
					"name": "_anchorTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14877,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Mat4",
						"package": "playcanvas",
						"name": "Mat4"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._anchorTransform"
					}
				},
				{
					"id": 520,
					"name": "_batchGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14903,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._batchGroup"
					}
				},
				{
					"id": 519,
					"name": "_batchGroupId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14902,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._batchGroupId"
					}
				},
				{
					"id": 489,
					"name": "_beingInitialized",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14866,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._beingInitialized"
					}
				},
				{
					"id": 326,
					"name": "_calculatedCorners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/elementComponent.ts",
							"line": 72,
							"character": 12
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							{
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							{
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							{
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						]
					}
				},
				{
					"id": 496,
					"name": "_calculatedHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14873,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._calculatedHeight"
					}
				},
				{
					"id": 494,
					"name": "_calculatedWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14871,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._calculatedWidth"
					}
				},
				{
					"id": 505,
					"name": "_canvasCorners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14882,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "Vec2",
							"package": "playcanvas",
							"name": "Vec2"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._canvasCorners"
					}
				},
				{
					"id": 508,
					"name": "_canvasCornersDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14885,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._canvasCornersDirty"
					}
				},
				{
					"id": 507,
					"name": "_cornersDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14884,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._cornersDirty"
					}
				},
				{
					"id": 630,
					"name": "_dirtyLocal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15105,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._dirtyLocal"
					}
				},
				{
					"id": 631,
					"name": "_dirtyWorld",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15106,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._dirtyWorld"
					}
				},
				{
					"id": 515,
					"name": "_drawOrder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14898,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._drawOrder"
					}
				},
				{
					"id": 514,
					"name": "_group",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14897,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._group"
					}
				},
				{
					"id": 495,
					"name": "_height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14872,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._height"
					}
				},
				{
					"id": 512,
					"name": "_image",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14895,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ImageElement",
						"package": "playcanvas",
						"name": "ImageElement"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._image"
					}
				},
				{
					"id": 517,
					"name": "_layers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14900,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._layers"
					}
				},
				{
					"id": 491,
					"name": "_localAnchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14868,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec4",
						"package": "playcanvas",
						"name": "Vec4"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._localAnchor"
					}
				},
				{
					"id": 497,
					"name": "_margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14874,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec4",
						"package": "playcanvas",
						"name": "Vec4"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._margin"
					}
				},
				{
					"id": 522,
					"name": "_maskOffset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14905,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._maskOffset"
					}
				},
				{
					"id": 523,
					"name": "_maskedBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14906,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._maskedBy"
					}
				},
				{
					"id": 498,
					"name": "_modelTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14875,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Mat4",
						"package": "playcanvas",
						"name": "Mat4"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._modelTransform"
					}
				},
				{
					"id": 521,
					"name": "_offsetReadAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14904,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._offsetReadAt"
					}
				},
				{
					"id": 502,
					"name": "_parentWorldTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14879,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Mat4",
						"package": "playcanvas",
						"name": "Mat4"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._parentWorldTransform"
					}
				},
				{
					"id": 492,
					"name": "_pivot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14869,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._pivot"
					}
				},
				{
					"id": 504,
					"name": "_screenCorners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14881,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "Vec3",
							"package": "playcanvas",
							"name": "Vec3"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._screenCorners"
					}
				},
				{
					"id": 499,
					"name": "_screenToWorld",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14876,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Mat4",
						"package": "playcanvas",
						"name": "Mat4"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._screenToWorld"
					}
				},
				{
					"id": 503,
					"name": "_screenTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14880,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Mat4",
						"package": "playcanvas",
						"name": "Mat4"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._screenTransform"
					}
				},
				{
					"id": 692,
					"name": "_sizeDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15130,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._sizeDirty"
					}
				},
				{
					"id": 513,
					"name": "_text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14896,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "TextElement",
						"package": "playcanvas",
						"name": "TextElement"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._text"
					}
				},
				{
					"id": 511,
					"name": "_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14894,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._type"
					}
				},
				{
					"id": 516,
					"name": "_useInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14899,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._useInput"
					}
				},
				{
					"id": 493,
					"name": "_width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14870,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._width"
					}
				},
				{
					"id": 506,
					"name": "_worldCorners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14883,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "Vec3",
							"package": "playcanvas",
							"name": "Vec3"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._worldCorners"
					}
				},
				{
					"id": 509,
					"name": "_worldCornersDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14886,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._worldCornersDirty"
					}
				},
				{
					"id": 510,
					"name": "screen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The Entity with a {@link ScreenComponent} that this component belongs to. This is\nautomatically set when the component is a child of a ScreenComponent."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14893,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Entity",
						"package": "playcanvas",
						"name": "Entity"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.screen"
					}
				},
				{
					"id": 530,
					"name": "_absBottom",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14910,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 531,
							"name": "_absBottom",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._absBottom"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._absBottom"
					}
				},
				{
					"id": 524,
					"name": "_absLeft",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14907,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 525,
							"name": "_absLeft",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._absLeft"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._absLeft"
					}
				},
				{
					"id": 526,
					"name": "_absRight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14908,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 527,
							"name": "_absRight",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._absRight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._absRight"
					}
				},
				{
					"id": 528,
					"name": "_absTop",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14909,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 529,
							"name": "_absTop",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._absTop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._absTop"
					}
				},
				{
					"id": 532,
					"name": "_hasSplitAnchorsX",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14911,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 533,
							"name": "_hasSplitAnchorsX",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._hasSplitAnchorsX"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._hasSplitAnchorsX"
					}
				},
				{
					"id": 534,
					"name": "_hasSplitAnchorsY",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14912,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 535,
							"name": "_hasSplitAnchorsY",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._hasSplitAnchorsY"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._hasSplitAnchorsY"
					}
				},
				{
					"id": 536,
					"name": "aabb",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14913,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 537,
							"name": "aabb",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.aabb"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.aabb"
					}
				},
				{
					"id": 341,
					"name": "alignment",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14755,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 342,
							"name": "alignment",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.alignment"
							}
						}
					],
					"setSignature": [
						{
							"id": 343,
							"name": "alignment",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 344,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.alignment"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.alignment"
					}
				},
				{
					"id": 538,
					"name": "anchor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14924,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 539,
							"name": "anchor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Specifies where the left, bottom, right and top edges of the component are anchored relative\nto its parent. Each value ranges from 0 to 1. e.g. a value of [0, 0, 0, 0] means that the\nelement will be anchored to the bottom left of its parent. A value of [1, 1, 1, 1] means it\nwill be anchored to the top right. A split anchor is when the left-right or top-bottom pairs\nof the anchor are not equal. In that case the component will be resized to cover that entire\narea. e.g. a value of [0, 0, 1, 1] will make the component resize exactly as its parent."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.anchor"
							}
						}
					],
					"setSignature": [
						{
							"id": 540,
							"name": "anchor",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Specifies where the left, bottom, right and top edges of the component are anchored relative\nto its parent. Each value ranges from 0 to 1. e.g. a value of [0, 0, 0, 0] means that the\nelement will be anchored to the bottom left of its parent. A value of [1, 1, 1, 1] means it\nwill be anchored to the top right. A split anchor is when the left-right or top-bottom pairs\nof the anchor are not equal. In that case the component will be resized to cover that entire\narea. e.g. a value of [0, 0, 1, 1] will make the component resize exactly as its parent."
							},
							"parameters": [
								{
									"id": 541,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.anchor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.anchor"
					}
				},
				{
					"id": 345,
					"name": "autoFitHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14758,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 346,
							"name": "autoFitHeight",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.autoFitHeight"
							}
						}
					],
					"setSignature": [
						{
							"id": 347,
							"name": "autoFitHeight",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 348,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.autoFitHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.autoFitHeight"
					}
				},
				{
					"id": 349,
					"name": "autoFitWidth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14761,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 350,
							"name": "autoFitWidth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.autoFitWidth"
							}
						}
					],
					"setSignature": [
						{
							"id": 351,
							"name": "autoFitWidth",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 352,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.autoFitWidth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.autoFitWidth"
					}
				},
				{
					"id": 353,
					"name": "autoHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14764,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 354,
							"name": "autoHeight",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.autoHeight"
							}
						}
					],
					"setSignature": [
						{
							"id": 355,
							"name": "autoHeight",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 356,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.autoHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.autoHeight"
					}
				},
				{
					"id": 357,
					"name": "autoWidth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14767,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 358,
							"name": "autoWidth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.autoWidth"
							}
						}
					],
					"setSignature": [
						{
							"id": 359,
							"name": "autoWidth",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 360,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.autoWidth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.autoWidth"
					}
				},
				{
					"id": 542,
					"name": "batchGroupId",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14931,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 543,
							"name": "batchGroupId",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Assign element to a specific batch group (see {@link BatchGroup}). Default is -1 (no group)."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.batchGroupId"
							}
						}
					],
					"setSignature": [
						{
							"id": 544,
							"name": "batchGroupId",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Assign element to a specific batch group (see {@link BatchGroup}). Default is -1 (no group)."
							},
							"parameters": [
								{
									"id": 545,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.batchGroupId"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.batchGroupId"
					}
				},
				{
					"id": 546,
					"name": "bottom",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14939,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 547,
							"name": "bottom",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The distance from the bottom edge of the anchor. Can be used in combination with a split\nanchor to make the component's top edge always be 'top' units away from the top."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.bottom"
							}
						}
					],
					"setSignature": [
						{
							"id": 548,
							"name": "bottom",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The distance from the bottom edge of the anchor. Can be used in combination with a split\nanchor to make the component's top edge always be 'top' units away from the top."
							},
							"parameters": [
								{
									"id": 549,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.bottom"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.bottom"
					}
				},
				{
					"id": 327,
					"name": "calculatedCorners",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/elementComponent.ts",
							"line": 76,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 328,
							"name": "calculatedCorners",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "获得element4个角的世界坐标"
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									},
									{
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									},
									{
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									},
									{
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								]
							}
						}
					]
				},
				{
					"id": 554,
					"name": "calculatedHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14961,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 555,
							"name": "calculatedHeight",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The height at which the element will be rendered. In most cases this will be the same as\n`height`. However, in some cases the engine may calculate a different height for the element,\nsuch as when the element is under the control of a {@link LayoutGroupComponent}. In these\nscenarios, `calculatedHeight` may be smaller or larger than the height that was set in the\neditor."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.calculatedHeight"
							}
						}
					],
					"setSignature": [
						{
							"id": 556,
							"name": "calculatedHeight",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The height at which the element will be rendered. In most cases this will be the same as\n`height`. However, in some cases the engine may calculate a different height for the element,\nsuch as when the element is under the control of a {@link LayoutGroupComponent}. In these\nscenarios, `calculatedHeight` may be smaller or larger than the height that was set in the\neditor."
							},
							"parameters": [
								{
									"id": 557,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.calculatedHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.calculatedHeight"
					}
				},
				{
					"id": 550,
					"name": "calculatedWidth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14950,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 551,
							"name": "calculatedWidth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The width at which the element will be rendered. In most cases this will be the same as\n`width`. However, in some cases the engine may calculate a different width for the element,\nsuch as when the element is under the control of a {@link LayoutGroupComponent}. In these\nscenarios, `calculatedWidth` may be smaller or larger than the width that was set in the\neditor."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.calculatedWidth"
							}
						}
					],
					"setSignature": [
						{
							"id": 552,
							"name": "calculatedWidth",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The width at which the element will be rendered. In most cases this will be the same as\n`width`. However, in some cases the engine may calculate a different width for the element,\nsuch as when the element is under the control of a {@link LayoutGroupComponent}. In these\nscenarios, `calculatedWidth` may be smaller or larger than the width that was set in the\neditor."
							},
							"parameters": [
								{
									"id": 553,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.calculatedWidth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.calculatedWidth"
					}
				},
				{
					"id": 558,
					"name": "canvasCorners",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14970,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 559,
							"name": "canvasCorners",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "An array of 4 {@link Vec2}s that represent the bottom left, bottom right, top right and top\nleft corners of the component in canvas pixels. Only works for screen space element\ncomponents."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Vec2",
									"package": "playcanvas",
									"name": "Vec2"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.canvasCorners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.canvasCorners"
					}
				},
				{
					"id": 361,
					"name": "color",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14770,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 362,
							"name": "color",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.color"
							}
						}
					],
					"setSignature": [
						{
							"id": 363,
							"name": "color",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 364,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.color"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.color"
					}
				},
				{
					"id": 560,
					"name": "drawOrder",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14977,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 561,
							"name": "drawOrder",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The draw order of the component. A higher value means that the component will be rendered on\ntop of other components."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.drawOrder"
							}
						}
					],
					"setSignature": [
						{
							"id": 562,
							"name": "drawOrder",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The draw order of the component. A higher value means that the component will be rendered on\ntop of other components."
							},
							"parameters": [
								{
									"id": 563,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.drawOrder"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.drawOrder"
					}
				},
				{
					"id": 365,
					"name": "enableMarkup",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14773,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 366,
							"name": "enableMarkup",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.enableMarkup"
							}
						}
					],
					"setSignature": [
						{
							"id": 367,
							"name": "enableMarkup",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 368,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.enableMarkup"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.enableMarkup"
					}
				},
				{
					"id": 724,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9610,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 725,
							"name": "enabled",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.enabled"
							}
						}
					],
					"setSignature": [
						{
							"id": 726,
							"name": "enabled",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 727,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.enabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.enabled"
					}
				},
				{
					"id": 369,
					"name": "font",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14776,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 370,
							"name": "font",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "Font",
										"package": "playcanvas",
										"name": "Font"
									},
									{
										"type": "reference",
										"qualifiedName": "CanvasFont",
										"package": "playcanvas",
										"name": "CanvasFont"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.font"
							}
						}
					],
					"setSignature": [
						{
							"id": 371,
							"name": "font",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 372,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"qualifiedName": "Font",
												"package": "playcanvas",
												"name": "Font"
											},
											{
												"type": "reference",
												"qualifiedName": "CanvasFont",
												"package": "playcanvas",
												"name": "CanvasFont"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.font"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.font"
					}
				},
				{
					"id": 373,
					"name": "fontAsset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14779,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 374,
							"name": "fontAsset",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.fontAsset"
							}
						}
					],
					"setSignature": [
						{
							"id": 375,
							"name": "fontAsset",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 376,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.fontAsset"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.fontAsset"
					}
				},
				{
					"id": 377,
					"name": "fontSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14782,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 378,
							"name": "fontSize",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.fontSize"
							}
						}
					],
					"setSignature": [
						{
							"id": 379,
							"name": "fontSize",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 380,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.fontSize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.fontSize"
					}
				},
				{
					"id": 564,
					"name": "height",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14987,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 565,
							"name": "height",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The height of the element as set in the editor. Note that in some cases this may not reflect\nthe true height at which the element is rendered, such as when the element is under the\ncontrol of a {@link LayoutGroupComponent}. See `calculatedHeight` in order to ensure you are\nreading the true height at which the element will be rendered."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.height"
							}
						}
					],
					"setSignature": [
						{
							"id": 566,
							"name": "height",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The height of the element as set in the editor. Note that in some cases this may not reflect\nthe true height at which the element is rendered, such as when the element is under the\ncontrol of a {@link LayoutGroupComponent}. See `calculatedHeight` in order to ensure you are\nreading the true height at which the element will be rendered."
							},
							"parameters": [
								{
									"id": 567,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.height"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.height"
					}
				},
				{
					"id": 381,
					"name": "key",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14785,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 382,
							"name": "key",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.key"
							}
						}
					],
					"setSignature": [
						{
							"id": 383,
							"name": "key",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 384,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.key"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.key"
					}
				},
				{
					"id": 568,
					"name": "layers",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14995,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 569,
							"name": "layers",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "An array of layer IDs ({@link Layer#id}) to which this element should belong. Don't push,\npop, splice or modify this array, if you want to change it - set a new one instead."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.layers"
							}
						}
					],
					"setSignature": [
						{
							"id": 570,
							"name": "layers",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "An array of layer IDs ({@link Layer#id}) to which this element should belong. Don't push,\npop, splice or modify this array, if you want to change it - set a new one instead."
							},
							"parameters": [
								{
									"id": 571,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.layers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.layers"
					}
				},
				{
					"id": 572,
					"name": "left",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15003,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 573,
							"name": "left",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The distance from the left edge of the anchor. Can be used in combination with a split\nanchor to make the component's left edge always be 'left' units away from the left."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.left"
							}
						}
					],
					"setSignature": [
						{
							"id": 574,
							"name": "left",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The distance from the left edge of the anchor. Can be used in combination with a split\nanchor to make the component's left edge always be 'left' units away from the left."
							},
							"parameters": [
								{
									"id": 575,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.left"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.left"
					}
				},
				{
					"id": 385,
					"name": "lineHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14788,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 386,
							"name": "lineHeight",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.lineHeight"
							}
						}
					],
					"setSignature": [
						{
							"id": 387,
							"name": "lineHeight",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 388,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.lineHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.lineHeight"
					}
				},
				{
					"id": 576,
					"name": "margin",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15012,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 577,
							"name": "margin",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The distance from the left, bottom, right and top edges of the anchor. For example if we are\nusing a split anchor like [0,0,1,1] and the margin is [0,0,0,0] then the component will be\nthe same width and height as its parent."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.margin"
							}
						}
					],
					"setSignature": [
						{
							"id": 578,
							"name": "margin",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The distance from the left, bottom, right and top edges of the anchor. For example if we are\nusing a split anchor like [0,0,1,1] and the margin is [0,0,0,0] then the component will be\nthe same width and height as its parent."
							},
							"parameters": [
								{
									"id": 579,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.margin"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.margin"
					}
				},
				{
					"id": 389,
					"name": "mask",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14791,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 390,
							"name": "mask",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.mask"
							}
						}
					],
					"setSignature": [
						{
							"id": 391,
							"name": "mask",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 392,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.mask"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.mask"
					}
				},
				{
					"id": 580,
					"name": "maskedBy",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPrivate": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15020,
							"character": 16
						}
					],
					"getSignature": [
						{
							"id": 581,
							"name": "maskedBy",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isPrivate": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the entity that is currently masking this element."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.maskedBy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.maskedBy"
					}
				},
				{
					"id": 393,
					"name": "material",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14794,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 394,
							"name": "material",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Material",
								"package": "playcanvas",
								"name": "Material"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.material"
							}
						}
					],
					"setSignature": [
						{
							"id": 395,
							"name": "material",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 396,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Material",
										"package": "playcanvas",
										"name": "Material"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.material"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.material"
					}
				},
				{
					"id": 397,
					"name": "materialAsset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14797,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 398,
							"name": "materialAsset",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.materialAsset"
							}
						}
					],
					"setSignature": [
						{
							"id": 399,
							"name": "materialAsset",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 400,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.materialAsset"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.materialAsset"
					}
				},
				{
					"id": 401,
					"name": "maxFontSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14800,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 402,
							"name": "maxFontSize",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.maxFontSize"
							}
						}
					],
					"setSignature": [
						{
							"id": 403,
							"name": "maxFontSize",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 404,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.maxFontSize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.maxFontSize"
					}
				},
				{
					"id": 405,
					"name": "maxLines",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14803,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 406,
							"name": "maxLines",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.maxLines"
							}
						}
					],
					"setSignature": [
						{
							"id": 407,
							"name": "maxLines",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 408,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.maxLines"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.maxLines"
					}
				},
				{
					"id": 409,
					"name": "minFontSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14806,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 410,
							"name": "minFontSize",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.minFontSize"
							}
						}
					],
					"setSignature": [
						{
							"id": 411,
							"name": "minFontSize",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 412,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.minFontSize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.minFontSize"
					}
				},
				{
					"id": 413,
					"name": "opacity",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14809,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 414,
							"name": "opacity",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.opacity"
							}
						}
					],
					"setSignature": [
						{
							"id": 415,
							"name": "opacity",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 416,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.opacity"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.opacity"
					}
				},
				{
					"id": 417,
					"name": "outlineColor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14812,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 418,
							"name": "outlineColor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.outlineColor"
							}
						}
					],
					"setSignature": [
						{
							"id": 419,
							"name": "outlineColor",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 420,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.outlineColor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.outlineColor"
					}
				},
				{
					"id": 421,
					"name": "outlineThickness",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14815,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 422,
							"name": "outlineThickness",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.outlineThickness"
							}
						}
					],
					"setSignature": [
						{
							"id": 423,
							"name": "outlineThickness",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 424,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.outlineThickness"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.outlineThickness"
					}
				},
				{
					"id": 582,
					"name": "pivot",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15027,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 583,
							"name": "pivot",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The position of the pivot of the component relative to its anchor. Each value ranges from 0\nto 1 where [0,0] is the bottom left and [1,1] is the top right."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.pivot"
							}
						}
					],
					"setSignature": [
						{
							"id": 584,
							"name": "pivot",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The position of the pivot of the component relative to its anchor. Each value ranges from 0\nto 1 where [0,0] is the bottom left and [1,1] is the top right."
							},
							"parameters": [
								{
									"id": 585,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.pivot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.pivot"
					}
				},
				{
					"id": 425,
					"name": "pixelsPerUnit",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14818,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 426,
							"name": "pixelsPerUnit",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.pixelsPerUnit"
							}
						}
					],
					"setSignature": [
						{
							"id": 427,
							"name": "pixelsPerUnit",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 428,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.pixelsPerUnit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.pixelsPerUnit"
					}
				},
				{
					"id": 429,
					"name": "rangeEnd",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14821,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 430,
							"name": "rangeEnd",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.rangeEnd"
							}
						}
					],
					"setSignature": [
						{
							"id": 431,
							"name": "rangeEnd",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 432,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.rangeEnd"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.rangeEnd"
					}
				},
				{
					"id": 433,
					"name": "rangeStart",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14824,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 434,
							"name": "rangeStart",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.rangeStart"
							}
						}
					],
					"setSignature": [
						{
							"id": 435,
							"name": "rangeStart",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 436,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.rangeStart"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.rangeStart"
					}
				},
				{
					"id": 437,
					"name": "rect",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14827,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 438,
							"name": "rect",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.rect"
							}
						}
					],
					"setSignature": [
						{
							"id": 439,
							"name": "rect",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 440,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.rect"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.rect"
					}
				},
				{
					"id": 586,
					"name": "right",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15035,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 587,
							"name": "right",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The distance from the right edge of the anchor. Can be used in combination with a split\nanchor to make the component's right edge always be 'right' units away from the right."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.right"
							}
						}
					],
					"setSignature": [
						{
							"id": 588,
							"name": "right",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The distance from the right edge of the anchor. Can be used in combination with a split\nanchor to make the component's right edge always be 'right' units away from the right."
							},
							"parameters": [
								{
									"id": 589,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.right"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.right"
					}
				},
				{
					"id": 441,
					"name": "rtlReorder",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14830,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 442,
							"name": "rtlReorder",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.rtlReorder"
							}
						}
					],
					"setSignature": [
						{
							"id": 443,
							"name": "rtlReorder",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 444,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.rtlReorder"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.rtlReorder"
					}
				},
				{
					"id": 590,
					"name": "screenCorners",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15043,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 591,
							"name": "screenCorners",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "An array of 4 {@link Vec3}s that represent the bottom left, bottom right, top right and top\nleft corners of the component relative to its parent {@link ScreenComponent}."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Vec3",
									"package": "playcanvas",
									"name": "Vec3"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.screenCorners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.screenCorners"
					}
				},
				{
					"id": 445,
					"name": "shadowColor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14833,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 446,
							"name": "shadowColor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.shadowColor"
							}
						}
					],
					"setSignature": [
						{
							"id": 447,
							"name": "shadowColor",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 448,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.shadowColor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.shadowColor"
					}
				},
				{
					"id": 449,
					"name": "shadowOffset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14836,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 450,
							"name": "shadowOffset",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.shadowOffset"
							}
						}
					],
					"setSignature": [
						{
							"id": 451,
							"name": "shadowOffset",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 452,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.shadowOffset"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.shadowOffset"
					}
				},
				{
					"id": 453,
					"name": "spacing",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14839,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 454,
							"name": "spacing",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.spacing"
							}
						}
					],
					"setSignature": [
						{
							"id": 455,
							"name": "spacing",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 456,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.spacing"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.spacing"
					}
				},
				{
					"id": 457,
					"name": "sprite",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14842,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 458,
							"name": "sprite",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Sprite",
								"package": "playcanvas",
								"name": "Sprite"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.sprite"
							}
						}
					],
					"setSignature": [
						{
							"id": 459,
							"name": "sprite",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 460,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Sprite",
										"package": "playcanvas",
										"name": "Sprite"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.sprite"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.sprite"
					}
				},
				{
					"id": 461,
					"name": "spriteAsset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14845,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 462,
							"name": "spriteAsset",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.spriteAsset"
							}
						}
					],
					"setSignature": [
						{
							"id": 463,
							"name": "spriteAsset",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 464,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.spriteAsset"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.spriteAsset"
					}
				},
				{
					"id": 465,
					"name": "spriteFrame",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14848,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 466,
							"name": "spriteFrame",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.spriteFrame"
							}
						}
					],
					"setSignature": [
						{
							"id": 467,
							"name": "spriteFrame",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 468,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.spriteFrame"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.spriteFrame"
					}
				},
				{
					"id": 469,
					"name": "text",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14851,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 470,
							"name": "text",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.text"
							}
						}
					],
					"setSignature": [
						{
							"id": 471,
							"name": "text",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 472,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.text"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.text"
					}
				},
				{
					"id": 594,
					"name": "textHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15055,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 595,
							"name": "textHeight",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The height of the text rendered by the component. Only works for {@link ELEMENTTYPE_TEXT} types."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.textHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.textHeight"
					}
				},
				{
					"id": 592,
					"name": "textWidth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15049,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 593,
							"name": "textWidth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The width of the text rendered by the component. Only works for {@link ELEMENTTYPE_TEXT} types."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.textWidth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.textWidth"
					}
				},
				{
					"id": 473,
					"name": "texture",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14854,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 474,
							"name": "texture",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Texture",
								"package": "playcanvas",
								"name": "Texture"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.texture"
							}
						}
					],
					"setSignature": [
						{
							"id": 475,
							"name": "texture",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 476,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Texture",
										"package": "playcanvas",
										"name": "Texture"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.texture"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.texture"
					}
				},
				{
					"id": 477,
					"name": "textureAsset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14857,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 478,
							"name": "textureAsset",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.textureAsset"
							}
						}
					],
					"setSignature": [
						{
							"id": 479,
							"name": "textureAsset",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 480,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.textureAsset"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.textureAsset"
					}
				},
				{
					"id": 596,
					"name": "top",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15062,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 597,
							"name": "top",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The distance from the top edge of the anchor. Can be used in combination with a split anchor\nto make the component's bottom edge always be 'bottom' units away from the bottom."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.top"
							}
						}
					],
					"setSignature": [
						{
							"id": 598,
							"name": "top",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The distance from the top edge of the anchor. Can be used in combination with a split anchor\nto make the component's bottom edge always be 'bottom' units away from the bottom."
							},
							"parameters": [
								{
									"id": 599,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.top"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.top"
					}
				},
				{
					"id": 600,
					"name": "type",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15074,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 601,
							"name": "type",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The type of the ElementComponent. Can be:",
								"text": "- {@link ELEMENTTYPE_GROUP}: The component can be used as a layout mechanism to create groups of\nElementComponents e.g. panels.\n- {@link ELEMENTTYPE_IMAGE}: The component will render an image\n- {@link ELEMENTTYPE_TEXT}: The component will render text\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.type"
							}
						}
					],
					"setSignature": [
						{
							"id": 602,
							"name": "type",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The type of the ElementComponent. Can be:",
								"text": "- {@link ELEMENTTYPE_GROUP}: The component can be used as a layout mechanism to create groups of\nElementComponents e.g. panels.\n- {@link ELEMENTTYPE_IMAGE}: The component will render an image\n- {@link ELEMENTTYPE_TEXT}: The component will render text\n"
							},
							"parameters": [
								{
									"id": 603,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.type"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.type"
					}
				},
				{
					"id": 481,
					"name": "unicodeConverter",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14860,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 482,
							"name": "unicodeConverter",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.unicodeConverter"
							}
						}
					],
					"setSignature": [
						{
							"id": 483,
							"name": "unicodeConverter",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 484,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.unicodeConverter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.unicodeConverter"
					}
				},
				{
					"id": 604,
					"name": "useInput",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15081,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 605,
							"name": "useInput",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true then the component will receive Mouse or Touch input events."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.useInput"
							}
						}
					],
					"setSignature": [
						{
							"id": 606,
							"name": "useInput",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true then the component will receive Mouse or Touch input events."
							},
							"parameters": [
								{
									"id": 607,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.useInput"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.useInput"
					}
				},
				{
					"id": 608,
					"name": "width",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15091,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 609,
							"name": "width",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The width of the element as set in the editor. Note that in some cases this may not reflect\nthe true width at which the element is rendered, such as when the element is under the\ncontrol of a {@link LayoutGroupComponent}. See `calculatedWidth` in order to ensure you are\nreading the true width at which the element will be rendered."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.width"
							}
						}
					],
					"setSignature": [
						{
							"id": 610,
							"name": "width",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The width of the element as set in the editor. Note that in some cases this may not reflect\nthe true width at which the element is rendered, such as when the element is under the\ncontrol of a {@link LayoutGroupComponent}. See `calculatedWidth` in order to ensure you are\nreading the true width at which the element will be rendered."
							},
							"parameters": [
								{
									"id": 611,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.width"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.width"
					}
				},
				{
					"id": 612,
					"name": "worldCorners",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15099,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 613,
							"name": "worldCorners",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "An array of 4 {@link Vec3}s that represent the bottom left, bottom right, top right and top\nleft corners of the component in world space. Only works for 3D element components."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Vec3",
									"package": "playcanvas",
									"name": "Vec3"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.worldCorners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.worldCorners"
					}
				},
				{
					"id": 485,
					"name": "wrapLines",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14863,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 486,
							"name": "wrapLines",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.wrapLines"
							}
						}
					],
					"setSignature": [
						{
							"id": 487,
							"name": "wrapLines",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 488,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.wrapLines"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.wrapLines"
					}
				},
				{
					"id": 639,
					"name": "_bindScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15110,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 640,
							"name": "_bindScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 641,
									"name": "screen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._bindScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._bindScreen"
					}
				},
				{
					"id": 670,
					"name": "_calculateLocalAnchors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15123,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 671,
							"name": "_calculateLocalAnchors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._calculateLocalAnchors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._calculateLocalAnchors"
					}
				},
				{
					"id": 688,
					"name": "_calculateSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15129,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 689,
							"name": "_calculateSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 690,
									"name": "propagateCalculatedWidth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 691,
									"name": "propagateCalculatedHeight",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._calculateSize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._calculateSize"
					}
				},
				{
					"id": 635,
					"name": "_dirtifyMask",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15108,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 636,
							"name": "_dirtifyMask",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._dirtifyMask"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._dirtifyMask"
					}
				},
				{
					"id": 707,
					"name": "_flagChildrenAsDirty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15135,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 708,
							"name": "_flagChildrenAsDirty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._flagChildrenAsDirty"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._flagChildrenAsDirty"
					}
				},
				{
					"id": 722,
					"name": "_isScreenCulled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15141,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 723,
							"name": "_isScreenCulled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._isScreenCulled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._isScreenCulled"
					}
				},
				{
					"id": 720,
					"name": "_isScreenSpace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15140,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 721,
							"name": "_isScreenSpace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._isScreenSpace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._isScreenSpace"
					}
				},
				{
					"id": 632,
					"name": "_onInsert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15107,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 633,
							"name": "_onInsert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 634,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._onInsert"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._onInsert"
					}
				},
				{
					"id": 637,
					"name": "_onPrerender",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15109,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 638,
							"name": "_onPrerender",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._onPrerender"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._onPrerender"
					}
				},
				{
					"id": 668,
					"name": "_onScreenRemove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15122,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 669,
							"name": "_onScreenRemove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._onScreenRemove"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._onScreenRemove"
					}
				},
				{
					"id": 663,
					"name": "_onScreenResize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15120,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 664,
							"name": "_onScreenResize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 665,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._onScreenResize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._onScreenResize"
					}
				},
				{
					"id": 666,
					"name": "_onScreenSpaceChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15121,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 667,
							"name": "_onScreenSpaceChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._onScreenSpaceChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._onScreenSpaceChange"
					}
				},
				{
					"id": 658,
					"name": "_parseUpToScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15116,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 659,
							"name": "_parseUpToScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 660,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 662,
											"name": "mask",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
													"line": 15118,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 661,
											"name": "screen",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
													"line": 15117,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												662,
												661
											]
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._parseUpToScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._parseUpToScreen"
					}
				},
				{
					"id": 614,
					"name": "_patch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15100,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 615,
							"name": "_patch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._patch"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._patch"
					}
				},
				{
					"id": 703,
					"name": "_setCalculatedHeight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15134,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 704,
							"name": "_setCalculatedHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 705,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 706,
									"name": "updateMargins",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setCalculatedHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setCalculatedHeight"
					}
				},
				{
					"id": 699,
					"name": "_setCalculatedWidth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15133,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 700,
							"name": "_setCalculatedWidth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 701,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 702,
									"name": "updateMargins",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setCalculatedWidth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setCalculatedWidth"
					}
				},
				{
					"id": 696,
					"name": "_setHeight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15132,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 697,
							"name": "_setHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 698,
									"name": "h",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setHeight"
					}
				},
				{
					"id": 623,
					"name": "_setLocalPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15103,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 624,
							"name": "_setLocalPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 625,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 626,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 627,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setLocalPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setLocalPosition"
					}
				},
				{
					"id": 651,
					"name": "_setMaskedBy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15114,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 652,
							"name": "_setMaskedBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 653,
									"name": "mask",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setMaskedBy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setMaskedBy"
					}
				},
				{
					"id": 618,
					"name": "_setPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 619,
							"name": "_setPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 620,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 621,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 622,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setPosition"
					}
				},
				{
					"id": 693,
					"name": "_setWidth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15131,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 694,
							"name": "_setWidth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 695,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setWidth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setWidth"
					}
				},
				{
					"id": 628,
					"name": "_sync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15104,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 629,
							"name": "_sync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._sync"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._sync"
					}
				},
				{
					"id": 642,
					"name": "_unbindScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15111,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 643,
							"name": "_unbindScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 644,
									"name": "screen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._unbindScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._unbindScreen"
					}
				},
				{
					"id": 616,
					"name": "_unpatch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15101,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 617,
							"name": "_unpatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._unpatch"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._unpatch"
					}
				},
				{
					"id": 654,
					"name": "_updateMask",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15115,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 655,
							"name": "_updateMask",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 656,
									"name": "currentMask",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 657,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._updateMask"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._updateMask"
					}
				},
				{
					"id": 645,
					"name": "_updateScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15112,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 646,
							"name": "_updateScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 647,
									"name": "screen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._updateScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._updateScreen"
					}
				},
				{
					"id": 709,
					"name": "addModelToLayers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15136,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 710,
							"name": "addModelToLayers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 711,
									"name": "model",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.addModelToLayers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.addModelToLayers"
					}
				},
				{
					"id": 730,
					"name": "buildAccessors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9627,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 731,
							"name": "buildAccessors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 732,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.buildAccessors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.buildAccessors"
					}
				},
				{
					"id": 756,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 757,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Fire an event, all additional arguments are passed on to the event listener.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.fire('test', 'This is the message');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 758,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of event to fire."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 759,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 760,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 761,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 762,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 763,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 764,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 765,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 766,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.fire"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.fire"
					}
				},
				{
					"id": 715,
					"name": "getMaskOffset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15138,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 716,
							"name": "getMaskOffset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.getMaskOffset"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.getMaskOffset"
					}
				},
				{
					"id": 672,
					"name": "getOffsetPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15124,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 673,
							"name": "getOffsetPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 674,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 675,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.getOffsetPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.getOffsetPosition"
					}
				},
				{
					"id": 329,
					"name": "getPixelAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/elementComponent.ts",
							"line": 126,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 330,
							"name": "getPixelAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "根据屏幕位置获得element的像素值",
								"returns": "element在此屏幕坐标的像素值\n"
							},
							"parameters": [
								{
									"id": 331,
									"name": "screenPoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "屏幕坐标"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 332,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 333,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/extension/extendClasses/elementComponent.ts",
															"line": 126,
															"character": 30
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 334,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/extension/extendClasses/elementComponent.ts",
															"line": 126,
															"character": 41
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														333,
														334
													]
												}
											]
										}
									}
								},
								{
									"id": 335,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CameraComponent",
										"package": "playcanvas",
										"name": "CameraComponent"
									}
								},
								{
									"id": 336,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "颜色值（不传则创建新的颜色）"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							}
						}
					]
				},
				{
					"id": 772,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 130,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 773,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Test if there are any handlers bound to an event name.",
								"returns": "True if the object has handlers bound to the specified event name.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.on('test', function () { }); // bind an event to 'test'\nobj.hasEvent('test'); // returns true\nobj.hasEvent('hello'); // returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 774,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the event to test."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.hasEvent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.hasEvent"
					}
				},
				{
					"id": 717,
					"name": "isVisibleForCamera",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15139,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 718,
							"name": "isVisibleForCamera",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 719,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.isVisibleForCamera"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.isVisibleForCamera"
					}
				},
				{
					"id": 751,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 752,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Detach an event handler from an event. If callback is not provided then all callbacks are\nunbound from the event, if scope is not provided then all events with the callback will be\nunbound.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar handler = function () {\n};\nobj.on('test', handler);\n\nobj.off(); // Removes all events\nobj.off('test'); // Removes all events called 'test'\nobj.off('test', handler); // Removes all handler functions, called 'test'\nobj.off('test', handler, this); // Removes all handler functions, called 'test' with scope this\n"
									}
								]
							},
							"parameters": [
								{
									"id": 753,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 754,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 755,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.off"
					}
				},
				{
					"id": 746,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 747,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attach an event handler to an event.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.on('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\n"
									}
								]
							},
							"parameters": [
								{
									"id": 748,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 749,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 750,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.on"
					}
				},
				{
					"id": 740,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9630,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 741,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onDisable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onDisable"
					}
				},
				{
					"id": 738,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9629,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 739,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onEnable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onEnable"
					}
				},
				{
					"id": 680,
					"name": "onLayerAdded",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15126,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 681,
							"name": "onLayerAdded",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 682,
									"name": "layer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onLayerAdded"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onLayerAdded"
					}
				},
				{
					"id": 683,
					"name": "onLayerRemoved",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15127,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 684,
							"name": "onLayerRemoved",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 685,
									"name": "layer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onLayerRemoved"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onLayerRemoved"
					}
				},
				{
					"id": 676,
					"name": "onLayersChanged",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15125,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 677,
							"name": "onLayersChanged",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 678,
									"name": "oldComp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 679,
									"name": "newComp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onLayersChanged"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onLayersChanged"
					}
				},
				{
					"id": 742,
					"name": "onPostStateChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9631,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 743,
							"name": "onPostStateChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onPostStateChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onPostStateChange"
					}
				},
				{
					"id": 686,
					"name": "onRemove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15128,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 687,
							"name": "onRemove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onRemove"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onRemove"
					}
				},
				{
					"id": 733,
					"name": "onSetEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9628,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 734,
							"name": "onSetEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 735,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 736,
									"name": "oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 737,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onSetEnabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onSetEnabled"
					}
				},
				{
					"id": 767,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 119,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 768,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attach an event handler to an event. This handler will be removed after being fired once.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.once('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\nobj.fire('test', 1, 2); // not going to get handled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 769,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 770,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 771,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.once"
					}
				},
				{
					"id": 712,
					"name": "removeModelFromLayers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15137,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 713,
							"name": "removeModelFromLayers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 714,
									"name": "model",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.removeModelFromLayers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.removeModelFromLayers"
					}
				},
				{
					"id": 337,
					"name": "setPosFromWorld",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/elementComponent.ts",
							"line": 145,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 338,
							"name": "setPosFromWorld",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "根据世界坐标设置element的屏幕坐标（element的anchor必需为[0,0,0,0]才能保证位置正确）"
							},
							"parameters": [
								{
									"id": 339,
									"name": "pos",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "世界坐标"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 340,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "当前相机，默认为第一个场景相机\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CameraComponent",
										"package": "playcanvas",
										"name": "CameraComponent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 648,
					"name": "syncMask",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 15113,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 649,
							"name": "syncMask",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 650,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.syncMask"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.syncMask"
					}
				},
				{
					"id": 318,
					"name": "_buildAccessors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9601,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 319,
							"name": "_buildAccessors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 320,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 321,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._buildAccessors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._buildAccessors"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						322
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						518,
						490,
						501,
						500,
						520,
						519,
						489,
						326,
						496,
						494,
						505,
						508,
						507,
						630,
						631,
						515,
						514,
						495,
						512,
						517,
						491,
						497,
						522,
						523,
						498,
						521,
						502,
						492,
						504,
						499,
						503,
						692,
						513,
						511,
						516,
						493,
						506,
						509,
						510
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						530,
						524,
						526,
						528,
						532,
						534,
						536,
						341,
						538,
						345,
						349,
						353,
						357,
						542,
						546,
						327,
						554,
						550,
						558,
						361,
						560,
						365,
						724,
						369,
						373,
						377,
						564,
						381,
						568,
						572,
						385,
						576,
						389,
						580,
						393,
						397,
						401,
						405,
						409,
						413,
						417,
						421,
						582,
						425,
						429,
						433,
						437,
						586,
						441,
						590,
						445,
						449,
						453,
						457,
						461,
						465,
						469,
						594,
						592,
						473,
						477,
						596,
						600,
						481,
						604,
						608,
						612,
						485
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						639,
						670,
						688,
						635,
						707,
						722,
						720,
						632,
						637,
						668,
						663,
						666,
						658,
						614,
						703,
						699,
						696,
						623,
						651,
						618,
						693,
						628,
						642,
						616,
						654,
						645,
						709,
						730,
						756,
						715,
						672,
						329,
						772,
						717,
						751,
						746,
						740,
						738,
						680,
						683,
						676,
						742,
						686,
						733,
						767,
						712,
						337,
						648,
						318
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/elementComponent.ts",
					"line": 70,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "ElementComponent",
					"package": "playcanvas",
					"name": "ElementComponent"
				}
			]
		},
		{
			"id": 775,
			"name": "Entity_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.Entity"
					}
				}
			],
			"children": [
				{
					"id": 776,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 777,
							"name": "new Entity_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Entity.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar entity = new pc.Entity();\n\n// Add a Component to the Entity\nentity.addComponent(\"camera\", {\n    fov: 45,\n    nearClip: 1,\n    farClip: 10000\n});\n\n// Add the Entity into the scene graph\napp.root.addChild(entity);\n\n// Move the entity\nentity.translate(10, 0, 0);\n\n// Or translate it by setting its position directly\nvar p = entity.getPosition();\nentity.setPosition(p.x + 10, p.y, p.z);\n\n// Change the entity's rotation in local space\nvar e = entity.getLocalEulerAngles();\nentity.setLocalEulerAngles(e.x, e.y + 90, e.z);\n\n// Or use rotateLocal\nentity.rotateLocal(0, 90, 0);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 778,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 779,
									"name": "app",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Application",
										"package": "playcanvas",
										"name": "Application"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 775,
								"name": "Entity_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.constructor"
					}
				},
				{
					"id": 783,
					"name": "anim",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link AnimComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21170,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AnimComponent",
						"package": "playcanvas",
						"name": "AnimComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.anim"
					}
				},
				{
					"id": 784,
					"name": "animation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link AnimationComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21177,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AnimationComponent",
						"package": "playcanvas",
						"name": "AnimationComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.animation"
					}
				},
				{
					"id": 785,
					"name": "audiolistener",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link AudioListenerComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21184,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AudioListenerComponent",
						"package": "playcanvas",
						"name": "AudioListenerComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.audiolistener"
					}
				},
				{
					"id": 786,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ButtonComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21191,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ButtonComponent",
						"package": "playcanvas",
						"name": "ButtonComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.button"
					}
				},
				{
					"id": 787,
					"name": "camera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link CameraComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21198,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "CameraComponent",
						"package": "playcanvas",
						"name": "CameraComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.camera"
					}
				},
				{
					"id": 788,
					"name": "collision",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link CollisionComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21205,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "CollisionComponent",
						"package": "playcanvas",
						"name": "CollisionComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.collision"
					}
				},
				{
					"id": 789,
					"name": "element",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ElementComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21212,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ElementComponent",
						"package": "playcanvas",
						"name": "ElementComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.element"
					}
				},
				{
					"id": 790,
					"name": "layoutchild",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link LayoutChildComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21219,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "LayoutChildComponent",
						"package": "playcanvas",
						"name": "LayoutChildComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.layoutchild"
					}
				},
				{
					"id": 791,
					"name": "layoutgroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link LayoutGroupComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21226,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "LayoutGroupComponent",
						"package": "playcanvas",
						"name": "LayoutGroupComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.layoutgroup"
					}
				},
				{
					"id": 792,
					"name": "light",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link LightComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21233,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "LightComponent",
						"package": "playcanvas",
						"name": "LightComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.light"
					}
				},
				{
					"id": 793,
					"name": "model",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ModelComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21240,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ModelComponent",
						"package": "playcanvas",
						"name": "ModelComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.model"
					}
				},
				{
					"id": 832,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The non-unique name of a graph node. Defaults to 'Untitled'."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7274,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.name"
					}
				},
				{
					"id": 794,
					"name": "particlesystem",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ParticleSystemComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21247,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ParticleSystemComponent",
						"package": "playcanvas",
						"name": "ParticleSystemComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.particlesystem"
					}
				},
				{
					"id": 795,
					"name": "render",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link RenderComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21254,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "RenderComponent",
						"package": "playcanvas",
						"name": "RenderComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.render"
					}
				},
				{
					"id": 796,
					"name": "rigidbody",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link RigidBodyComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21261,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "RigidBodyComponent",
						"package": "playcanvas",
						"name": "RigidBodyComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.rigidbody"
					}
				},
				{
					"id": 797,
					"name": "screen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ScreenComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21268,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ScreenComponent",
						"package": "playcanvas",
						"name": "ScreenComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.screen"
					}
				},
				{
					"id": 798,
					"name": "script",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ScriptComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21275,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ScriptComponent",
						"package": "playcanvas",
						"name": "ScriptComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.script"
					}
				},
				{
					"id": 799,
					"name": "scrollbar",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ScrollbarComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21282,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ScrollbarComponent",
						"package": "playcanvas",
						"name": "ScrollbarComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.scrollbar"
					}
				},
				{
					"id": 800,
					"name": "scrollview",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ScrollViewComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21289,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ScrollViewComponent",
						"package": "playcanvas",
						"name": "ScrollViewComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.scrollview"
					}
				},
				{
					"id": 801,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link SoundComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21296,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "SoundComponent",
						"package": "playcanvas",
						"name": "SoundComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.sound"
					}
				},
				{
					"id": 802,
					"name": "sprite",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link SpriteComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21303,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "SpriteComponent",
						"package": "playcanvas",
						"name": "SpriteComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.sprite"
					}
				},
				{
					"id": 833,
					"name": "tags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Interface for tagging graph nodes. Tag based searches can be performed using the\n{@link GraphNode#findByTag} function."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7281,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Tags",
						"package": "playcanvas",
						"name": "Tags"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.tags"
					}
				},
				{
					"id": 851,
					"name": "children",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7469,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 852,
							"name": "children",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A read-only property to get the children of this graph node."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "GraphNode",
									"package": "playcanvas",
									"name": "GraphNode"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.children"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.children"
					}
				},
				{
					"id": 841,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7444,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 842,
							"name": "enabled",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Enable or disable a GraphNode. If one of the GraphNode's parents is disabled there will be\nno other side effects. If all the parents are enabled then the new value will activate or\ndeactivate all the enabled children of the GraphNode."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.enabled"
							}
						}
					],
					"setSignature": [
						{
							"id": 843,
							"name": "enabled",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Enable or disable a GraphNode. If one of the GraphNode's parents is disabled there will be\nno other side effects. If all the parents are enabled then the new value will activate or\ndeactivate all the enabled children of the GraphNode."
							},
							"parameters": [
								{
									"id": 844,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.enabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.enabled"
					}
				},
				{
					"id": 839,
					"name": "forward",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7436,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 840,
							"name": "forward",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The normalized local space negative Z-axis vector of the graph node in world space."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.forward"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.forward"
					}
				},
				{
					"id": 853,
					"name": "graphDepth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7477,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 854,
							"name": "graphDepth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A read-only property to get the depth of this child within the graph. Note that for\nperformance reasons this is only recalculated when a node is added to a new parent, i.e. It\nis not recalculated when a node is simply removed from the graph."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.graphDepth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.graphDepth"
					}
				},
				{
					"id": 845,
					"name": "parent",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7451,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 846,
							"name": "parent",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A read-only property to get a parent graph node."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.parent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.parent"
					}
				},
				{
					"id": 847,
					"name": "path",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7457,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 848,
							"name": "path",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A read-only property to get the path of the graph node relative to the root of the hierarchy."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.path"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.path"
					}
				},
				{
					"id": 835,
					"name": "right",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7424,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 836,
							"name": "right",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The normalized local space X-axis vector of the graph node in world space."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.right"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.right"
					}
				},
				{
					"id": 849,
					"name": "root",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7463,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 850,
							"name": "root",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A read-only property to get highest graph node from current node."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.root"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.root"
					}
				},
				{
					"id": 837,
					"name": "up",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7430,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 838,
							"name": "up",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The normalized local space Y-axis vector of the graph node in world space."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.up"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.up"
					}
				},
				{
					"id": 961,
					"name": "_sync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7964,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 962,
							"name": "_sync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity._sync"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity._sync"
					}
				},
				{
					"id": 948,
					"name": "addChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7904,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 949,
							"name": "addChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Add a new child to the child list and update the parent value of the child node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar e = new pc.Entity(app);\nthis.entity.addChild(e);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 950,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The new child to add."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.addChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.addChild"
					}
				},
				{
					"id": 809,
					"name": "addComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21381,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 810,
							"name": "addComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Create a new component and add it to the entity. Use this to add functionality to the entity\nlike rendering a model, playing sounds and so on.",
								"returns": "The new Component that was attached to the entity or null if there\nwas an error.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar entity = new pc.Entity();\n\n// Add a light component with default properties\nentity.addComponent(\"light\");\n\n// Add a camera component with some specified properties\nentity.addComponent(\"camera\", {\n    fov: 45,\n    clearColor: new pc.Color(1, 0, 0)\n});\n"
									}
								]
							},
							"parameters": [
								{
									"id": 811,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the component to add. Valid strings are:\n\n- \"anim\" - see {@link AnimComponent}\n- \"animation\" - see {@link AnimationComponent}\n- \"audiolistener\" - see {@link AudioListenerComponent}\n- \"button\" - see {@link ButtonComponent}\n- \"camera\" - see {@link CameraComponent}\n- \"collision\" - see {@link CollisionComponent}\n- \"element\" - see {@link ElementComponent}\n- \"layoutchild\" - see {@link LayoutChildComponent}\n- \"layoutgroup\" - see {@link LayoutGroupComponent}\n- \"light\" - see {@link LightComponent}\n- \"model\" - see {@link ModelComponent}\n- \"particlesystem\" - see {@link ParticleSystemComponent}\n- \"render\" - see {@link RenderComponent}\n- \"rigidbody\" - see {@link RigidBodyComponent}\n- \"screen\" - see {@link ScreenComponent}\n- \"script\" - see {@link ScriptComponent}\n- \"scrollbar\" - see {@link ScrollbarComponent}\n- \"scrollview\" - see {@link ScrollViewComponent}\n- \"sound\" - see {@link SoundComponent}\n- \"sprite\" - see {@link SpriteComponent}\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 812,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Component",
								"package": "playcanvas",
								"name": "Component"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.addComponent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.addComponent"
					}
				},
				{
					"id": 855,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7501,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 856,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Clone a graph node.",
								"returns": "A clone of the specified graph node.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.clone"
					}
				},
				{
					"id": 830,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21447,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 831,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Remove all components from the Entity and detach it from the Entity hierarchy. Then\nrecursively destroy all ancestor Entities.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar firstChild = this.entity.children[0];\nfirstChild.destroy(); // delete child, all components and remove from hierarchy\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.destroy"
					}
				},
				{
					"id": 860,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7533,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 861,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Search the graph node and all of its descendants for the nodes that satisfy some search\ncriteria.",
								"returns": "The array of graph nodes that match the search criteria.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Finds all nodes that have a model component and have `door` in their lower-cased name\nvar doors = house.find(function (node) {\n    return node.model && node.name.toLowerCase().indexOf('door') !== -1;\n});"
									},
									{
										"tag": "example",
										"text": "\n// Finds all nodes that have the name property set to 'Test'\nvar entities = parent.find('name', 'Test');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 862,
									"name": "attr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "This can either be a function or a string. If it's a\nfunction, it is executed for each descendant node to test if node satisfies the search\nlogic. Returning true from the function will include the node into the results. If it's a\nstring then it represents the name of a field or a method of the node. If this is the name\nof a field then the value passed as the second argument will be checked for equality. If\nthis is the name of a function then the return value of the function will be checked for\nequality against the valued passed as the second argument to this function."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"qualifiedName": "FindNodeCallback",
												"package": "playcanvas",
												"name": "FindNodeCallback"
											}
										]
									}
								},
								{
									"id": 863,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "GraphNode",
									"package": "playcanvas",
									"name": "GraphNode"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.find"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.find"
					}
				},
				{
					"id": 827,
					"name": "findByGuid",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21438,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 828,
							"name": "findByGuid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Find a descendant of this entity with the GUID.",
								"returns": "The entity with the matching GUID or null if no entity is found.\n"
							},
							"parameters": [
								{
									"id": 829,
									"name": "guid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The GUID to search for."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Entity",
								"package": "playcanvas",
								"name": "Entity"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByGuid"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByGuid"
					}
				},
				{
					"id": 871,
					"name": "findByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7588,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 872,
							"name": "findByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the first node found in the graph with the name. The search is depth first.",
								"returns": "The first node to be found matching the supplied name. Returns\nnull if no node is found.\n"
							},
							"parameters": [
								{
									"id": 873,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the graph."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByName"
					}
				},
				{
					"id": 874,
					"name": "findByPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7604,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 875,
							"name": "findByPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the first node found in the graph by its full path in the graph. The full path has this\nform 'parent/child/sub-child'. The search is depth first.",
								"returns": "The first node to be found matching the supplied path. Returns\nnull if no node is found.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// String form\nvar grandchild = this.entity.findByPath('child/grandchild');"
									},
									{
										"tag": "example",
										"text": "\n// Array form\nvar grandchild = this.entity.findByPath(['child', 'grandchild']);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 876,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The full path of the {@link GraphNode} as either a string or\narray of {@link GraphNode} names."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByPath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByPath"
					}
				},
				{
					"id": 868,
					"name": "findByTag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7580,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 869,
							"name": "findByTag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Return all graph nodes that satisfy the search query. Query can be simply a string, or comma\nseparated strings, to have inclusive results of assets that match at least one query. A\nquery that consists of an array of tags can be used to match graph nodes that have each tag\nof array.",
								"returns": "A list of all graph nodes that match the query.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Return all graph nodes that tagged by `animal`\nvar animals = node.findByTag(\"animal\");"
									},
									{
										"tag": "example",
										"text": "\n// Return all graph nodes that tagged by `bird` OR `mammal`\nvar birdsAndMammals = node.findByTag(\"bird\", \"mammal\");"
									},
									{
										"tag": "example",
										"text": "\n// Return all assets that tagged by `carnivore` AND `mammal`\nvar meatEatingMammals = node.findByTag([\"carnivore\", \"mammal\"]);"
									},
									{
										"tag": "example",
										"text": "\n// Return all assets that tagged by (`carnivore` AND `mammal`) OR (`carnivore` AND `reptile`)\nvar meatEatingMammalsAndReptiles = node.findByTag([\"carnivore\", \"mammal\"], [\"carnivore\", \"reptile\"]);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 870,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "GraphNode",
									"package": "playcanvas",
									"name": "GraphNode"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByTag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByTag"
					}
				},
				{
					"id": 816,
					"name": "findComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21403,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 817,
							"name": "findComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Search the entity and all of its descendants for the first component of specified type.",
								"returns": "A component of specified type, if the entity or any of its descendants\nhas one. Returns undefined otherwise.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Get the first found light component in the hierarchy tree that starts with this entity\nvar light = entity.findComponent(\"light\");\n"
									}
								]
							},
							"parameters": [
								{
									"id": 818,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the component type to retrieve."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Component",
								"package": "playcanvas",
								"name": "Component"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findComponent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findComponent"
					}
				},
				{
					"id": 819,
					"name": "findComponents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21414,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 820,
							"name": "findComponents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Search the entity and all of its descendants for all components of specified type.",
								"returns": "All components of specified type in the entity or any of its\ndescendants. Returns empty array if none found.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Get all light components in the hierarchy tree that starts with this entity\nvar lights = entity.findComponents(\"light\");\n"
									}
								]
							},
							"parameters": [
								{
									"id": 821,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the component type to retrieve."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Component",
									"package": "playcanvas",
									"name": "Component"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findComponents"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findComponents"
					}
				},
				{
					"id": 864,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7558,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 865,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Search the graph node and all of its descendants for the first node that satisfies some\nsearch criteria.",
								"returns": "A graph node that match the search criteria. Returns null if no\nnode is found.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Find the first node that is called `head` and has a model component\nvar head = player.findOne(function (node) {\n    return node.model && node.name === 'head';\n});"
									},
									{
										"tag": "example",
										"text": "\n// Finds the first node that has the name property set to 'Test'\nvar node = parent.findOne('name', 'Test');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 866,
									"name": "attr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "This can either be a function or a string. If it's a\nfunction, it is executed for each descendant node to test if node satisfies the search\nlogic. Returning true from the function will result in that node being returned from\nfindOne. If it's a string then it represents the name of a field or a method of the node. If\nthis is the name of a field then the value passed as the second argument will be checked for\nequality. If this is the name of a function then the return value of the function will be\nchecked for equality against the valued passed as the second argument to this function."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"qualifiedName": "FindNodeCallback",
												"package": "playcanvas",
												"name": "FindNodeCallback"
											}
										]
									}
								},
								{
									"id": 867,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findOne"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findOne"
					}
				},
				{
					"id": 1003,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1004,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Fire an event, all additional arguments are passed on to the event listener.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.fire('test', 'This is the message');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1005,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of event to fire."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1006,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1007,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1008,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1009,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1010,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1011,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1012,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1013,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.fire"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.fire"
					}
				},
				{
					"id": 877,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7617,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 878,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Executes a provided function once on this graph node and all of its descendants.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Log the path and name of each node in descendant tree starting with \"parent\"\nparent.forEach(function (node) {\n    console.log(node.path + \"/\" + node.name);\n});\n"
									}
								]
							},
							"parameters": [
								{
									"id": 879,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The function to execute on the graph node and each\ndescendant."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "ForEachNodeCallback",
										"package": "playcanvas",
										"name": "ForEachNodeCallback"
									}
								},
								{
									"id": 880,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.forEach"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.forEach"
					}
				},
				{
					"id": 887,
					"name": "getEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7652,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 888,
							"name": "getEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the world space rotation for the specified GraphNode in Euler angle form. The rotation\nis returned as euler angles in a {@link Vec3}. The value returned by this function should be\nconsidered read-only. In order to set the world-space rotation of the graph node, use\n{@link GraphNode#setEulerAngles}.",
								"returns": "The world space rotation of the graph node in Euler angle form.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar angles = this.entity.getEulerAngles();\nangles.y = 180; // rotate the entity around Y by 180 degrees\nthis.entity.setEulerAngles(angles);\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getEulerAngles"
					}
				},
				{
					"id": 889,
					"name": "getLocalEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7664,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 890,
							"name": "getLocalEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the rotation in local space for the specified GraphNode. The rotation is returned as\neuler angles in a {@link Vec3}. The returned vector should be considered read-only. To\nupdate the local rotation, use {@link GraphNode#setLocalEulerAngles}.",
								"returns": "The local space rotation of the graph node as euler angles in XYZ order.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar angles = this.entity.getLocalEulerAngles();\nangles.y = 180;\nthis.entity.setLocalEulerAngles(angles);\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalEulerAngles"
					}
				},
				{
					"id": 891,
					"name": "getLocalPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7676,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 892,
							"name": "getLocalPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the position in local space for the specified GraphNode. The position is returned as a\n{@link Vec3}. The returned vector should be considered read-only. To update the local\nposition, use {@link GraphNode#setLocalPosition}.",
								"returns": "The local space position of the graph node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar position = this.entity.getLocalPosition();\nposition.x += 1; // move the entity 1 unit along x.\nthis.entity.setLocalPosition(position);\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalPosition"
					}
				},
				{
					"id": 893,
					"name": "getLocalRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7686,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 894,
							"name": "getLocalRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the rotation in local space for the specified GraphNode. The rotation is returned as a\n{@link Quat}. The returned quaternion should be considered read-only. To update the local\nrotation, use {@link GraphNode#setLocalRotation}.",
								"returns": "The local space rotation of the graph node as a quaternion.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar rotation = this.entity.getLocalRotation();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalRotation"
					}
				},
				{
					"id": 895,
					"name": "getLocalScale",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7698,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 896,
							"name": "getLocalScale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the scale in local space for the specified GraphNode. The scale is returned as a\n{@link Vec3}. The returned vector should be considered read-only. To update the local scale,\nuse {@link GraphNode#setLocalScale}.",
								"returns": "The local space scale of the graph node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar scale = this.entity.getLocalScale();\nscale.x = 100;\nthis.entity.setLocalScale(scale);\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalScale"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalScale"
					}
				},
				{
					"id": 897,
					"name": "getLocalTransform",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7707,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 898,
							"name": "getLocalTransform",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the local transform matrix for this graph node. This matrix is the transform relative to\nthe node's parent's world transformation matrix.",
								"returns": "The node's local transformation matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar transform = this.entity.getLocalTransform();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Mat4",
								"package": "playcanvas",
								"name": "Mat4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalTransform"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalTransform"
					}
				},
				{
					"id": 899,
					"name": "getPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7719,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 900,
							"name": "getPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the world space position for the specified GraphNode. The position is returned as a\n{@link Vec3}. The value returned by this function should be considered read-only. In order\nto set the world-space position of the graph node, use {@link GraphNode#setPosition}.",
								"returns": "The world space position of the graph node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar position = this.entity.getPosition();\nposition.x = 10;\nthis.entity.setPosition(position);\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getPosition"
					}
				},
				{
					"id": 901,
					"name": "getRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7729,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 902,
							"name": "getRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the world space rotation for the specified GraphNode. The rotation is returned as a\n{@link Quat}. The value returned by this function should be considered read-only. In order\nto set the world-space rotation of the graph node, use {@link GraphNode#setRotation}.",
								"returns": "The world space rotation of the graph node as a quaternion.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar rotation = this.entity.getRotation();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getRotation"
					}
				},
				{
					"id": 905,
					"name": "getWorldTransform",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7751,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 906,
							"name": "getWorldTransform",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the world transformation matrix for this graph node.",
								"returns": "The node's world transformation matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar transform = this.entity.getWorldTransform();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Mat4",
								"package": "playcanvas",
								"name": "Mat4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getWorldTransform"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getWorldTransform"
					}
				},
				{
					"id": 1019,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 130,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1020,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Test if there are any handlers bound to an event name.",
								"returns": "True if the object has handlers bound to the specified event name.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.on('test', function () { }); // bind an event to 'test'\nobj.hasEvent('test'); // returns true\nobj.hasEvent('hello'); // returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1021,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the event to test."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.hasEvent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.hasEvent"
					}
				},
				{
					"id": 954,
					"name": "insertChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7926,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 955,
							"name": "insertChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Insert a new child to the child list at the specified index and update the parent value of\nthe child node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar e = new pc.Entity(app);\nthis.entity.insertChild(e, 1);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 956,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The new child to insert."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								},
								{
									"id": 957,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The index in the child list of the parent where the new node will be\ninserted."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.insertChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.insertChild"
					}
				},
				{
					"id": 884,
					"name": "isAncestorOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7639,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 885,
							"name": "isAncestorOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Check if node is ancestor for another node.",
								"returns": "If node is ancestor for another node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nif (body.isAncestorOf(foot)) {\n    // foot is within body's hierarchy\n}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 886,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Potential descendant of node."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.isAncestorOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.isAncestorOf"
					}
				},
				{
					"id": 881,
					"name": "isDescendantOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7628,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 882,
							"name": "isDescendantOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Check if node is descendant of another node.",
								"returns": "If node is descendant of another node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nif (roof.isDescendantOf(house)) {\n    // roof is descendant of house entity\n}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 883,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Potential ancestor of node."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.isDescendantOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.isDescendantOf"
					}
				},
				{
					"id": 965,
					"name": "lookAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7999,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 966,
							"name": "lookAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Reorients the graph node so that the negative z-axis points towards the target. This\nfunction has two valid signatures. Either pass 3D vectors for the look at coordinate and up\nvector, or pass numbers to represent the vectors.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Look at another entity, using the (default) positive y-axis for up\nvar position = otherEntity.getPosition();\nthis.entity.lookAt(position);"
									},
									{
										"tag": "example",
										"text": "\n// Look at another entity, using the negative world y-axis for up\nvar position = otherEntity.getPosition();\nthis.entity.lookAt(position, pc.Vec3.DOWN);"
									},
									{
										"tag": "example",
										"text": "\n// Look at the world space origin, using the (default) positive y-axis for up\nthis.entity.lookAt(0, 0, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Look at world-space coordinate [10, 10, 10], using the negative world y-axis for up\nthis.entity.lookAt(10, 10, 10, 0, -1, 0);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 967,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "If passing a 3D vector, this is the world-space coordinate to look at.\nOtherwise, it is the x-component of the world-space coordinate to look at."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 968,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 969,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 970,
									"name": "ux",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 971,
									"name": "uy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 972,
									"name": "uz",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.lookAt"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.lookAt"
					}
				},
				{
					"id": 998,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 999,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Detach an event handler from an event. If callback is not provided then all callbacks are\nunbound from the event, if scope is not provided then all events with the callback will be\nunbound.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar handler = function () {\n};\nobj.on('test', handler);\n\nobj.off(); // Removes all events\nobj.off('test'); // Removes all events called 'test'\nobj.off('test', handler); // Removes all handler functions, called 'test'\nobj.off('test', handler, this); // Removes all handler functions, called 'test' with scope this\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1000,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1001,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 1002,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.off"
					}
				},
				{
					"id": 993,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 994,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attach an event handler to an event.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.on('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\n"
									}
								]
							},
							"parameters": [
								{
									"id": 995,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 996,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 997,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.on"
					}
				},
				{
					"id": 1014,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 119,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1015,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attach an event handler to an event. This handler will be removed after being fired once.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.once('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\nobj.fire('test', 1, 2); // not going to get handled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1016,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1017,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 1018,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.once"
					}
				},
				{
					"id": 958,
					"name": "removeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7963,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 959,
							"name": "removeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Remove the node from the child list and update the parent value of the child.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar child = this.entity.children[0];\nthis.entity.removeChild(child);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 960,
									"name": "child",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The node to remove."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.removeChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.removeChild"
					}
				},
				{
					"id": 813,
					"name": "removeComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21392,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 814,
							"name": "removeComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Remove a component from the Entity.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar entity = new pc.Entity();\nentity.addComponent(\"light\"); // add new light component\n\nentity.removeComponent(\"light\"); // remove light component\n"
									}
								]
							},
							"parameters": [
								{
									"id": 815,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the Component type."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.removeComponent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.removeComponent"
					}
				},
				{
					"id": 907,
					"name": "reparent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7758,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 908,
							"name": "reparent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Remove graph node from current parent and add as child to new parent."
							},
							"parameters": [
								{
									"id": 909,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "New parent to attach graph node to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								},
								{
									"id": 910,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.reparent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.reparent"
					}
				},
				{
					"id": 780,
					"name": "reparentAndKeepTransform",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/entity.ts",
							"line": 22,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 781,
							"name": "reparentAndKeepTransform",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "改变父节点并保持物体的transform"
							},
							"parameters": [
								{
									"id": 782,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "父节点\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Entity",
										"package": "playcanvas",
										"name": "Entity"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 983,
					"name": "rotate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8053,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 984,
							"name": "rotate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Rotates the graph node in world-space by the specified Euler angles. Eulers are specified in\ndegrees in XYZ order. This function has two valid signatures: you can either pass a 3D\nvector or 3 numbers to specify the world-space rotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Rotate via 3 numbers\nthis.entity.rotate(0, 90, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Rotate via vector\nvar r = new pc.Vec3(0, 90, 0);\nthis.entity.rotate(r);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 985,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding world-space rotation or\nrotation around world-space x-axis in degrees."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 986,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 987,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.rotate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.rotate"
					}
				},
				{
					"id": 988,
					"name": "rotateLocal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8071,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 989,
							"name": "rotateLocal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Rotates the graph node in local-space by the specified Euler angles. Eulers are specified in\ndegrees in XYZ order. This function has two valid signatures: you can either pass a 3D\nvector or 3 numbers to specify the local-space rotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Rotate via 3 numbers\nthis.entity.rotateLocal(0, 90, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Rotate via vector\nvar r = new pc.Vec3(0, 90, 0);\nthis.entity.rotateLocal(r);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 990,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding local-space rotation or\nrotation around local-space x-axis in degrees."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 991,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 992,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.rotateLocal"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.rotateLocal"
					}
				},
				{
					"id": 943,
					"name": "setEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7895,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 944,
							"name": "setEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the world-space rotation of the specified graph node using euler angles. Eulers are\ninterpreted in XYZ order. Eulers must be specified in degrees. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the world-space euler\nrotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set rotation of 90 degrees around world-space y-axis via 3 numbers\nthis.entity.setEulerAngles(0, 90, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Set rotation of 90 degrees around world-space y-axis via a vector\nvar angles = new pc.Vec3(0, 90, 0);\nthis.entity.setEulerAngles(angles);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 945,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding eulers or rotation around world-space\nx-axis in degrees."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 946,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 947,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setEulerAngles"
					}
				},
				{
					"id": 911,
					"name": "setLocalEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7777,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 912,
							"name": "setLocalEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the local-space rotation of the specified graph node using euler angles. Eulers are\ninterpreted in XYZ order. Eulers must be specified in degrees. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the local-space euler\nrotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set rotation of 90 degrees around y-axis via 3 numbers\nthis.entity.setLocalEulerAngles(0, 90, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Set rotation of 90 degrees around y-axis via a vector\nvar angles = new pc.Vec3(0, 90, 0);\nthis.entity.setLocalEulerAngles(angles);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 913,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding eulers or rotation around local-space\nx-axis in degrees."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 914,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 915,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalEulerAngles"
					}
				},
				{
					"id": 916,
					"name": "setLocalPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7795,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 917,
							"name": "setLocalPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the local-space position of the specified graph node. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the local-space\nposition.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set via 3 numbers\nthis.entity.setLocalPosition(0, 10, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Set via vector\nvar pos = new pc.Vec3(0, 10, 0);\nthis.entity.setLocalPosition(pos);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 918,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding local-space position or\nx-coordinate of local-space position."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 919,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 920,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalPosition"
					}
				},
				{
					"id": 921,
					"name": "setLocalRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7814,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 922,
							"name": "setLocalRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the local-space rotation of the specified graph node. This function has two valid\nsignatures: you can either pass a quaternion or 3 numbers to specify the local-space\nrotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set via 4 numbers\nthis.entity.setLocalRotation(0, 0, 0, 1);"
									},
									{
										"tag": "example",
										"text": "\n// Set via quaternion\nvar q = pc.Quat();\nthis.entity.setLocalRotation(q);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 923,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Quaternion holding local-space rotation or x-component of\nlocal-space quaternion rotation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Quat",
												"package": "playcanvas",
												"name": "Quat"
											}
										]
									}
								},
								{
									"id": 924,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 925,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 926,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalRotation"
					}
				},
				{
					"id": 927,
					"name": "setLocalScale",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7831,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 928,
							"name": "setLocalScale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the local-space scale factor of the specified graph node. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the local-space scale.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set via 3 numbers\nthis.entity.setLocalScale(10, 10, 10);"
									},
									{
										"tag": "example",
										"text": "\n// Set via vector\nvar scale = new pc.Vec3(10, 10, 10);\nthis.entity.setLocalScale(scale);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 929,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding local-space scale or x-coordinate\nof local-space scale."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 930,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 931,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalScale"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalScale"
					}
				},
				{
					"id": 932,
					"name": "setPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7857,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 933,
							"name": "setPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the world-space position of the specified graph node. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the world-space\nposition.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set via 3 numbers\nthis.entity.setPosition(0, 10, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Set via vector\nvar position = new pc.Vec3(0, 10, 0);\nthis.entity.setPosition(position);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 934,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding world-space position or\nx-coordinate of world-space position."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 935,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 936,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setPosition"
					}
				},
				{
					"id": 937,
					"name": "setRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7876,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 938,
							"name": "setRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the world-space rotation of the specified graph node. This function has two valid\nsignatures: you can either pass a quaternion or 3 numbers to specify the world-space\nrotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set via 4 numbers\nthis.entity.setRotation(0, 0, 0, 1);"
									},
									{
										"tag": "example",
										"text": "\n// Set via quaternion\nvar q = pc.Quat();\nthis.entity.setRotation(q);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 939,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Quaternion holding world-space rotation or x-component of\nworld-space quaternion rotation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Quat",
												"package": "playcanvas",
												"name": "Quat"
											}
										]
									}
								},
								{
									"id": 940,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 941,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 942,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setRotation"
					}
				},
				{
					"id": 973,
					"name": "translate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8017,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 974,
							"name": "translate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Translates the graph node in world-space by the specified translation vector. This function\nhas two valid signatures: you can either pass a 3D vector or 3 numbers to specify the\nworld-space translation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Translate via 3 numbers\nthis.entity.translate(10, 0, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Translate via vector\nvar t = new pc.Vec3(10, 0, 0);\nthis.entity.translate(t);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 975,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding world-space translation or\nx-coordinate of world-space translation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 976,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 977,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.translate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.translate"
					}
				},
				{
					"id": 978,
					"name": "translateLocal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8035,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 979,
							"name": "translateLocal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Translates the graph node in local-space by the specified translation vector. This function\nhas two valid signatures: you can either pass a 3D vector or 3 numbers to specify the\nlocal-space translation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Translate via 3 numbers\nthis.entity.translateLocal(10, 0, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Translate via vector\nvar t = new pc.Vec3(10, 0, 0);\nthis.entity.translateLocal(t);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 980,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding local-space translation or\nx-coordinate of local-space translation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 981,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 982,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.translateLocal"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.translateLocal"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						776
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						783,
						784,
						785,
						786,
						787,
						788,
						789,
						790,
						791,
						792,
						793,
						832,
						794,
						795,
						796,
						797,
						798,
						799,
						800,
						801,
						802,
						833
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						851,
						841,
						839,
						853,
						845,
						847,
						835,
						849,
						837
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						961,
						948,
						809,
						855,
						830,
						860,
						827,
						871,
						874,
						868,
						816,
						819,
						864,
						1003,
						877,
						887,
						889,
						891,
						893,
						895,
						897,
						899,
						901,
						905,
						1019,
						954,
						884,
						881,
						965,
						998,
						993,
						1014,
						958,
						813,
						907,
						780,
						983,
						988,
						943,
						911,
						916,
						921,
						927,
						932,
						937,
						973,
						978
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/entity.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Entity",
					"package": "playcanvas",
					"name": "Entity"
				}
			]
		},
		{
			"id": 1030,
			"name": "MeshInstance_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.MeshInstance"
					}
				}
			],
			"children": [
				{
					"id": 1036,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1037,
							"name": "new MeshInstance_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new MeshInstance instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Create a mesh instance pointing to a 1x1x1 'cube' mesh\nvar mesh = pc.createBox(graphicsDevice);\nvar material = new pc.StandardMaterial();\n\nvar meshInstance = new pc.MeshInstance(mesh, material);\n\nvar entity = new pc.Entity();\nentity.addComponent('render', {\n    meshInstances: [meshInstance]\n});\n\n// Add the entity to the scene hierarchy\nthis.app.scene.root.addChild(entity);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1038,
									"name": "mesh",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The graphics mesh to instance."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Mesh",
										"package": "playcanvas",
										"name": "Mesh"
									}
								},
								{
									"id": 1039,
									"name": "material",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The material to use for this mesh instance."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Material",
										"package": "playcanvas",
										"name": "Material"
									}
								},
								{
									"id": 1040,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1030,
								"name": "MeshInstance_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.constructor"
					}
				},
				{
					"id": 1094,
					"name": "_aabb",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9085,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._aabb"
					}
				},
				{
					"id": 1077,
					"name": "_aabbVer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9043,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._aabbVer"
					}
				},
				{
					"id": 1071,
					"name": "_calculateSortDistance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9019,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._calculateSortDistance"
					}
				},
				{
					"id": 1045,
					"name": "_key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8966,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._key"
					}
				},
				{
					"id": 1095,
					"name": "_layer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9086,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._layer"
					}
				},
				{
					"id": 1057,
					"name": "_lightHash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8986,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._lightHash"
					}
				},
				{
					"id": 1051,
					"name": "_mesh",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8977,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Mesh",
						"package": "playcanvas",
						"name": "Mesh"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._mesh"
					}
				},
				{
					"id": 1066,
					"name": "_noDepthDrawGl1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9002,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._noDepthDrawGl1"
					}
				},
				{
					"id": 1064,
					"name": "_receiveShadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9000,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._receiveShadow"
					}
				},
				{
					"id": 1065,
					"name": "_screenSpace",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9001,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._screenSpace"
					}
				},
				{
					"id": 1046,
					"name": "_shader",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8967,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._shader"
					}
				},
				{
					"id": 1056,
					"name": "_shaderDefs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8985,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._shaderDefs"
					}
				},
				{
					"id": 1048,
					"name": "_staticLightList",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8969,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._staticLightList"
					}
				},
				{
					"id": 1049,
					"name": "_staticSource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8970,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._staticSource"
					}
				},
				{
					"id": 1069,
					"name": "_updateAabb",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9017,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._updateAabb"
					}
				},
				{
					"id": 1070,
					"name": "_updateAabbFunc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9018,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._updateAabbFunc"
					}
				},
				{
					"id": 1063,
					"name": "castShadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8999,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.castShadow"
					}
				},
				{
					"id": 1067,
					"name": "cull",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Controls whether the mesh instance can be culled by frustum culling\n({@link CameraComponent#frustumCulling})."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9009,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.cull"
					}
				},
				{
					"id": 1078,
					"name": "drawOrder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Use this value to affect rendering order of mesh instances. Only used when mesh\ninstances are added to a {@link Layer} with {@link Layer#opaqueSortMode} or\n{@link Layer#transparentSortMode} (depending on the material) set to\n{@link SORTMODE_MANUAL}."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9052,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.drawOrder"
					}
				},
				{
					"id": 1085,
					"name": "flipFaces",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9064,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.flipFaces"
					}
				},
				{
					"id": 1072,
					"name": "instancingData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9030,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "InstancingData",
						"package": "playcanvas",
						"name": "InstancingData"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.instancingData"
					}
				},
				{
					"id": 1047,
					"name": "isStatic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8968,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.isStatic"
					}
				},
				{
					"id": 1080,
					"name": "isVisibleFunc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9060,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.isVisibleFunc"
					}
				},
				{
					"id": 1050,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The graph node defining the transform for this instance."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8976,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "GraphNode",
						"package": "playcanvas",
						"name": "GraphNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.node"
					}
				},
				{
					"id": 1081,
					"name": "parameters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9061,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1082,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.parameters"
					}
				},
				{
					"id": 1084,
					"name": "stencilBack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9063,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.stencilBack"
					}
				},
				{
					"id": 1083,
					"name": "stencilFront",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9062,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.stencilFront"
					}
				},
				{
					"id": 1058,
					"name": "visible",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Enable rendering for this mesh instance. Use visible property to enable/disable\nrendering without overhead of removing from scene. But note that the mesh instance is\nstill in the hierarchy and still in the draw call list."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8994,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.visible"
					}
				},
				{
					"id": 1079,
					"name": "visibleThisFrame",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Read this value in {@link Layer#onPostCull} to determine if the object is actually going\nto be rendered."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9059,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.visibleThisFrame"
					}
				},
				{
					"id": 1031,
					"name": "lightmapParamNames",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8935,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.lightmapParamNames"
					}
				},
				{
					"id": 1073,
					"name": "aabb",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9041,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1074,
							"name": "aabb",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The world space axis-aligned bounding box for this mesh instance."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.aabb"
							}
						}
					],
					"setSignature": [
						{
							"id": 1075,
							"name": "aabb",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The world space axis-aligned bounding box for this mesh instance."
							},
							"parameters": [
								{
									"id": 1076,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.aabb"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.aabb"
					}
				},
				{
					"id": 1096,
					"name": "calculateSortDistance",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9096,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1097,
							"name": "calculateSortDistance",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "In some circumstances mesh instances are sorted by a distance calculation to determine their\nrendering order. Set this callback to override the default distance calculation, which gives\nthe dot product of the camera forward vector and the vector between the camera position and\nthe center of the mesh instance's axis-aligned bounding box. This option can be particularly\nuseful for rendering transparent meshes in a better order than default."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.calculateSortDistance"
							}
						}
					],
					"setSignature": [
						{
							"id": 1098,
							"name": "calculateSortDistance",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "In some circumstances mesh instances are sorted by a distance calculation to determine their\nrendering order. Set this callback to override the default distance calculation, which gives\nthe dot product of the camera forward vector and the vector between the camera position and\nthe center of the mesh instance's axis-aligned bounding box. This option can be particularly\nuseful for rendering transparent meshes in a better order than default."
							},
							"parameters": [
								{
									"id": 1099,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.calculateSortDistance"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.calculateSortDistance"
					}
				},
				{
					"id": 1124,
					"name": "instancingCount",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9131,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1125,
							"name": "instancingCount",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Number of instances when using hardware instancing to render the mesh."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.instancingCount"
							}
						}
					],
					"setSignature": [
						{
							"id": 1126,
							"name": "instancingCount",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Number of instances when using hardware instancing to render the mesh."
							},
							"parameters": [
								{
									"id": 1127,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.instancingCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.instancingCount"
					}
				},
				{
					"id": 1116,
					"name": "key",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9116,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1117,
							"name": "key",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.key"
							}
						}
					],
					"setSignature": [
						{
							"id": 1118,
							"name": "key",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1119,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.key"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.key"
					}
				},
				{
					"id": 1059,
					"name": "layer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8995,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1060,
							"name": "layer",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.layer"
							}
						}
					],
					"setSignature": [
						{
							"id": 1061,
							"name": "layer",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1062,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.layer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.layer"
					}
				},
				{
					"id": 1120,
					"name": "mask",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9124,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1121,
							"name": "mask",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Mask controlling which {@link LightComponent}s light this mesh instance, which\n{@link CameraComponent} sees it and in which {@link Layer} it is rendered. Defaults to 1."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.mask"
							}
						}
					],
					"setSignature": [
						{
							"id": 1122,
							"name": "mask",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Mask controlling which {@link LightComponent}s light this mesh instance, which\n{@link CameraComponent} sees it and in which {@link Layer} it is rendered. Defaults to 1."
							},
							"parameters": [
								{
									"id": 1123,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.mask"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.mask"
					}
				},
				{
					"id": 1052,
					"name": "material",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8983,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1053,
							"name": "material",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The material used by this mesh instance."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Material",
								"package": "playcanvas",
								"name": "Material"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.material"
							}
						}
					],
					"setSignature": [
						{
							"id": 1054,
							"name": "material",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The material used by this mesh instance."
							},
							"parameters": [
								{
									"id": 1055,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Material",
										"package": "playcanvas",
										"name": "Material"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.material"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.material"
					}
				},
				{
					"id": 1090,
					"name": "mesh",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9083,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1091,
							"name": "mesh",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The graphics mesh being instanced."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Mesh",
								"package": "playcanvas",
								"name": "Mesh"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.mesh"
							}
						}
					],
					"setSignature": [
						{
							"id": 1092,
							"name": "mesh",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The graphics mesh being instanced."
							},
							"parameters": [
								{
									"id": 1093,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Mesh",
										"package": "playcanvas",
										"name": "Mesh"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.mesh"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.mesh"
					}
				},
				{
					"id": 1108,
					"name": "morphInstance",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9112,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1109,
							"name": "morphInstance",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The morph instance managing morphing of this mesh instance, or null if morphing is not used."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "MorphInstance",
								"package": "playcanvas",
								"name": "MorphInstance"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.morphInstance"
							}
						}
					],
					"setSignature": [
						{
							"id": 1110,
							"name": "morphInstance",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The morph instance managing morphing of this mesh instance, or null if morphing is not used."
							},
							"parameters": [
								{
									"id": 1111,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "MorphInstance",
										"package": "playcanvas",
										"name": "MorphInstance"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.morphInstance"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.morphInstance"
					}
				},
				{
					"id": 1100,
					"name": "receiveShadow",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9098,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1101,
							"name": "receiveShadow",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.receiveShadow"
							}
						}
					],
					"setSignature": [
						{
							"id": 1102,
							"name": "receiveShadow",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1103,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.receiveShadow"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.receiveShadow"
					}
				},
				{
					"id": 1086,
					"name": "renderStyle",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9076,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1087,
							"name": "renderStyle",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The render style of the mesh instance. Can be:",
								"text": "- {@link RENDERSTYLE_SOLID}\n- {@link RENDERSTYLE_WIREFRAME}\n- {@link RENDERSTYLE_POINTS}\n\nDefaults to {@link RENDERSTYLE_SOLID}.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.renderStyle"
							}
						}
					],
					"setSignature": [
						{
							"id": 1088,
							"name": "renderStyle",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The render style of the mesh instance. Can be:",
								"text": "- {@link RENDERSTYLE_SOLID}\n- {@link RENDERSTYLE_WIREFRAME}\n- {@link RENDERSTYLE_POINTS}\n\nDefaults to {@link RENDERSTYLE_SOLID}.\n"
							},
							"parameters": [
								{
									"id": 1089,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.renderStyle"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.renderStyle"
					}
				},
				{
					"id": 1112,
					"name": "screenSpace",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9114,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1113,
							"name": "screenSpace",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.screenSpace"
							}
						}
					],
					"setSignature": [
						{
							"id": 1114,
							"name": "screenSpace",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1115,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.screenSpace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.screenSpace"
					}
				},
				{
					"id": 1104,
					"name": "skinInstance",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9105,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1105,
							"name": "skinInstance",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The skin instance managing skinning of this mesh instance, or null if skinning is not used."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "SkinInstance",
								"package": "playcanvas",
								"name": "SkinInstance"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.skinInstance"
							}
						}
					],
					"setSignature": [
						{
							"id": 1106,
							"name": "skinInstance",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The skin instance managing skinning of this mesh instance, or null if skinning is not used."
							},
							"parameters": [
								{
									"id": 1107,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "SkinInstance",
										"package": "playcanvas",
										"name": "SkinInstance"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.skinInstance"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.skinInstance"
					}
				},
				{
					"id": 1130,
					"name": "_isVisible",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9134,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1131,
							"name": "_isVisible",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1132,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance._isVisible"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._isVisible"
					}
				},
				{
					"id": 1168,
					"name": "_setupSkinUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9172,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1169,
							"name": "_setupSkinUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance._setupSkinUpdate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._setupSkinUpdate"
					}
				},
				{
					"id": 1138,
					"name": "clearParameters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9143,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1139,
							"name": "clearParameters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.clearParameters"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.clearParameters"
					}
				},
				{
					"id": 1155,
					"name": "deleteParameter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9168,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1156,
							"name": "deleteParameter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Deletes a shader parameter on a mesh instance."
							},
							"parameters": [
								{
									"id": 1157,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the parameter to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.deleteParameter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.deleteParameter"
					}
				},
				{
					"id": 1128,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9133,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1129,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.destroy"
					}
				},
				{
					"id": 1143,
					"name": "getParameter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9151,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1144,
							"name": "getParameter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Retrieves the specified shader parameter from a mesh instance.",
								"returns": "The named parameter.\n"
							},
							"parameters": [
								{
									"id": 1145,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the parameter to query."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.getParameter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.getParameter"
					}
				},
				{
					"id": 1140,
					"name": "getParameters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9144,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1141,
							"name": "getParameters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1142,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.getParameters"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.getParameters"
					}
				},
				{
					"id": 1041,
					"name": "intersectsRay",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/meshInstance.ts",
							"line": 112,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1042,
							"name": "intersectsRay",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "检测射线与此meshInstance的交点",
								"returns": "交点集合\n"
							},
							"parameters": [
								{
									"id": 1043,
									"name": "worldRay",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "要求交的射线"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Ray",
										"package": "playcanvas",
										"name": "Ray"
									}
								},
								{
									"id": 1044,
									"name": "intersects",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "交点集合（不传则创建新的数组）"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1022,
											"name": "intersect"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1022,
									"name": "intersect"
								}
							}
						}
					]
				},
				{
					"id": 1165,
					"name": "setCustomAabb",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9171,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1166,
							"name": "setCustomAabb",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1167,
									"name": "aabb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setCustomAabb"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setCustomAabb"
					}
				},
				{
					"id": 1135,
					"name": "setInstancing",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9142,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1136,
							"name": "setInstancing",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets up {@link MeshInstance} to be rendered using Hardware Instancing."
							},
							"parameters": [
								{
									"id": 1137,
									"name": "vertexBuffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Vertex buffer to hold per-instance vertex data\n(usually world matrices). Pass null to turn off hardware instancing.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "VertexBuffer",
										"package": "playcanvas",
										"name": "VertexBuffer"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setInstancing"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setInstancing"
					}
				},
				{
					"id": 1162,
					"name": "setLightmapped",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9170,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1163,
							"name": "setLightmapped",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1164,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setLightmapped"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setLightmapped"
					}
				},
				{
					"id": 1146,
					"name": "setParameter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9161,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1147,
							"name": "setParameter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets a shader parameter on a mesh instance. Note that this parameter will take precedence\nover parameter of the same name if set on Material this mesh instance uses for rendering."
							},
							"parameters": [
								{
									"id": 1148,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the parameter to set."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1149,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value for the specified parameter."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"type": "reference",
												"qualifiedName": "Texture",
												"package": "playcanvas",
												"name": "Texture"
											}
										]
									}
								},
								{
									"id": 1150,
									"name": "passFlags",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setParameter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setParameter"
					}
				},
				{
					"id": 1158,
					"name": "setParameters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9169,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1159,
							"name": "setParameters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1160,
									"name": "device",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1161,
									"name": "passFlag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setParameters"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setParameters"
					}
				},
				{
					"id": 1151,
					"name": "setRealtimeLightmap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9162,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1152,
							"name": "setRealtimeLightmap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1153,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1154,
									"name": "texture",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setRealtimeLightmap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setRealtimeLightmap"
					}
				},
				{
					"id": 1133,
					"name": "updateKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9135,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1134,
							"name": "updateKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.updateKey"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.updateKey"
					}
				},
				{
					"id": 1032,
					"name": "_prepareRenderStyleForArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8936,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1033,
							"name": "_prepareRenderStyleForArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1034,
									"name": "meshInstances",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1035,
									"name": "renderStyle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance._prepareRenderStyleForArray"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._prepareRenderStyleForArray"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1036
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1094,
						1077,
						1071,
						1045,
						1095,
						1057,
						1051,
						1066,
						1064,
						1065,
						1046,
						1056,
						1048,
						1049,
						1069,
						1070,
						1063,
						1067,
						1078,
						1085,
						1072,
						1047,
						1080,
						1050,
						1081,
						1084,
						1083,
						1058,
						1079,
						1031
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1073,
						1096,
						1124,
						1116,
						1059,
						1120,
						1052,
						1090,
						1108,
						1100,
						1086,
						1112,
						1104
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1130,
						1168,
						1138,
						1155,
						1128,
						1143,
						1140,
						1041,
						1165,
						1135,
						1162,
						1146,
						1158,
						1151,
						1133,
						1032
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/meshInstance.ts",
					"line": 104,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "MeshInstance",
					"package": "playcanvas",
					"name": "MeshInstance"
				}
			]
		},
		{
			"id": 1779,
			"name": "PathCurve",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {}
				}
			],
			"children": [
				{
					"id": 1780,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 48,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1781,
							"name": "new PathCurve",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "新建路径曲线（设置一个父节点，用其下的子节点坐标和旋转来构造曲线）"
							},
							"parameters": [
								{
									"id": 1782,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "父节点"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Entity",
										"package": "playcanvas",
										"name": "Entity"
									}
								},
								{
									"id": 1783,
									"name": "curveMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "曲线类型（可以是曲线或直线，详情参考playcanvas官方文档）\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1779,
								"name": "PathCurve"
							}
						}
					]
				},
				{
					"id": 1786,
					"name": "curveMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 21,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1799,
					"name": "distanceBetween",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 37,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1797,
					"name": "forward",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 35,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1793,
					"name": "lx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 30,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1794,
					"name": "ly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 31,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1795,
					"name": "lz",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 32,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1787,
					"name": "nodePercent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 1785,
					"name": "nodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 20,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "Entity",
							"package": "playcanvas",
							"name": "Entity"
						}
					}
				},
				{
					"id": 1784,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 19,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Entity",
						"package": "playcanvas",
						"name": "Entity"
					}
				},
				{
					"id": 1788,
					"name": "pathLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1789,
					"name": "percentPreUnit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 25,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1796,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 34,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1801,
					"name": "precision",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 40,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1790,
					"name": "px",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 27,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1791,
					"name": "py",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 28,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1792,
					"name": "pz",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 29,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1800,
					"name": "rotation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 38,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Quat",
						"package": "playcanvas",
						"name": "Quat"
					}
				},
				{
					"id": 1802,
					"name": "step",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 41,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1798,
					"name": "up",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 36,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1812,
					"name": "cancelDraw",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 184,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1813,
							"name": "cancelDraw",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "取消曲线绘制"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1805,
					"name": "draw",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 136,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1806,
							"name": "draw",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "绘制曲线，并随节点更新"
							},
							"parameters": [
								{
									"id": 1807,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1808,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1809,
													"name": "color",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/extension/newClasses/pathCurve.ts",
															"line": 136,
															"character": 26
														}
													],
													"type": {
														"type": "reference",
														"qualifiedName": "Color",
														"package": "playcanvas",
														"name": "Color"
													}
												},
												{
													"id": 1810,
													"name": "drawNormal",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/extension/newClasses/pathCurve.ts",
															"line": 136,
															"character": 44
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1811,
													"name": "drawTangent",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/extension/newClasses/pathCurve.ts",
															"line": 136,
															"character": 66
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1809,
														1810,
														1811
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1825,
					"name": "getCurrentPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 243,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1826,
							"name": "getCurrentPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "获得当前所处的节点",
								"returns": "当前所处节点\n"
							},
							"parameters": [
								{
									"id": 1827,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "此位置在曲线上的百分比"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1814,
					"name": "getPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 194,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1815,
							"name": "getPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "获得某处坐标",
								"returns": "此处的坐标\n"
							},
							"parameters": [
								{
									"id": 1816,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "此位置在曲线上的百分比"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						}
					]
				},
				{
					"id": 1817,
					"name": "getRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 207,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1818,
							"name": "getRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "获得某处rotation,可以是沿切线方向，也可以是路径点朝向的插值",
								"returns": "此处的旋转\n"
							},
							"parameters": [
								{
									"id": 1819,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "此位置在曲线上的百分比"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1820,
									"name": "nodeRotation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "是否使用节点的旋转的插值作为曲线的旋转"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1821,
									"name": "inverse",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "是否反向"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							}
						}
					]
				},
				{
					"id": 1822,
					"name": "getTangent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 233,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1823,
							"name": "getTangent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "获得某处坐标",
								"returns": "此处的切线方向\n"
							},
							"parameters": [
								{
									"id": 1824,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "此位置在曲线上的百分比"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						}
					]
				},
				{
					"id": 1803,
					"name": "updateNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/newClasses/pathCurve.ts",
							"line": 92,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1804,
							"name": "updateNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "更新节点"
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1780
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1786,
						1799,
						1797,
						1793,
						1794,
						1795,
						1787,
						1785,
						1784,
						1788,
						1789,
						1796,
						1801,
						1790,
						1791,
						1792,
						1800,
						1802,
						1798
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1812,
						1805,
						1825,
						1814,
						1817,
						1822,
						1803
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/newClasses/pathCurve.ts",
					"line": 17,
					"character": 13
				}
			]
		},
		{
			"id": 1170,
			"name": "Quat_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.Quat"
					}
				}
			],
			"children": [
				{
					"id": 1173,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1174,
							"name": "new Quat_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Quat instance."
							},
							"parameters": [
								{
									"id": 1175,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1176,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1177,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1178,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1170,
								"name": "Quat_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.constructor"
					}
				},
				{
					"id": 1187,
					"name": "w",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The w component of the quaternion."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4088,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.w"
					}
				},
				{
					"id": 1184,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The x component of the quaternion."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4070,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.x"
					}
				},
				{
					"id": 1185,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The y component of the quaternion."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4076,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.y"
					}
				},
				{
					"id": 1186,
					"name": "z",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The z component of the quaternion."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4082,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.z"
					}
				},
				{
					"id": 1171,
					"name": "IDENTITY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant quaternion set to [0, 0, 0, 1] (the identity).",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4047,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Quat",
						"package": "playcanvas",
						"name": "Quat"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.IDENTITY"
					}
				},
				{
					"id": 1172,
					"name": "ZERO",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant quaternion set to [0, 0, 0, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4054,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Quat",
						"package": "playcanvas",
						"name": "Quat"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.ZERO"
					}
				},
				{
					"id": 1188,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4099,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1189,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns an identical copy of the specified quaternion.",
								"returns": "A quaternion containing the result of the cloning.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar q = new pc.Quat(-0.11, -0.15, -0.46, 0.87);\nvar qclone = q.clone();\n\nconsole.log(\"The result of the cloning is: \" + q.toString());\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.clone"
					}
				},
				{
					"id": 1190,
					"name": "conjugate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4100,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1191,
							"name": "conjugate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.conjugate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.conjugate"
					}
				},
				{
					"id": 1192,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4112,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1193,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Copies the contents of a source quaternion to a destination quaternion.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar src = new pc.Quat();\nvar dst = new pc.Quat();\ndst.copy(src, src);\nconsole.log(\"The two quaternions are \" + (src.equals(dst) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1194,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The quaternion to be copied."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Quat",
										"package": "playcanvas",
										"name": "Quat"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.copy"
					}
				},
				{
					"id": 1195,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4123,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1196,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Reports whether two quaternions are equal.",
								"returns": "True if the quaternions are equal and false otherwise.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Quat();\nvar b = new pc.Quat();\nconsole.log(\"The two quaternions are \" + (a.equals(b) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1197,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The quaternion to be compared against."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Quat",
										"package": "playcanvas",
										"name": "Quat"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.equals"
					}
				},
				{
					"id": 1198,
					"name": "getAxisAngle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4141,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1199,
							"name": "getAxisAngle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Gets the rotation axis and angle for a given quaternion. If a quaternion is created with\n`setFromAxisAngle`, this method will return the same values as provided in the original\nparameter list OR functionally equivalent values.",
								"returns": "Angle, in degrees, of the rotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar q = new pc.Quat();\nq.setFromAxisAngle(new pc.Vec3(0, 1, 0), 90);\nvar v = new pc.Vec3();\nvar angle = q.getAxisAngle(v);\n// Outputs 90\nconsole.log(angle);\n// Outputs [0, 1, 0]\nconsole.log(v.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1200,
									"name": "axis",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 3-dimensional vector to receive the axis of rotation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.getAxisAngle"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.getAxisAngle"
					}
				},
				{
					"id": 1201,
					"name": "getEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4149,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1202,
							"name": "getEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Converts the supplied quaternion to Euler angles.",
								"returns": "The 3-dimensional vector holding the Euler angles that\ncorrespond to the supplied quaternion.\n"
							},
							"parameters": [
								{
									"id": 1203,
									"name": "eulers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.getEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.getEulerAngles"
					}
				},
				{
					"id": 1204,
					"name": "invert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4161,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1205,
							"name": "invert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Generates the inverse of the specified quaternion.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Create a quaternion rotated 180 degrees around the y-axis\nvar rot = new pc.Quat().setFromEulerAngles(0, 180, 0);\n\n// Invert in place\nrot.invert();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.invert"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.invert"
					}
				},
				{
					"id": 1206,
					"name": "length",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4172,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1207,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the magnitude of the specified quaternion.",
								"returns": "The magnitude of the specified quaternion.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar q = new pc.Quat(0, 0, 0, 5);\nvar len = q.length();\n// Outputs 5\nconsole.log(\"The length of the quaternion is: \" + len);\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.length"
					}
				},
				{
					"id": 1208,
					"name": "lengthSq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4183,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1209,
							"name": "lengthSq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the magnitude squared of the specified quaternion.",
								"returns": "The magnitude of the specified quaternion.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar q = new pc.Quat(3, 4, 0);\nvar lenSq = q.lengthSq();\n// Outputs 25\nconsole.log(\"The length squared of the quaternion is: \" + lenSq);\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.lengthSq"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.lengthSq"
					}
				},
				{
					"id": 1210,
					"name": "mul",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4199,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1211,
							"name": "mul",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of multiplying the specified quaternions together.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Quat().setFromEulerAngles(0, 30, 0);\nvar b = new pc.Quat().setFromEulerAngles(0, 60, 0);\n\n// a becomes a 90 degree rotation around the Y axis\n// In other words, a = a * b\na.mul(b);\n\nconsole.log(\"The result of the multiplication is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1212,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The quaternion used as the second multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Quat",
										"package": "playcanvas",
										"name": "Quat"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.mul"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.mul"
					}
				},
				{
					"id": 1213,
					"name": "mul2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4217,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1214,
							"name": "mul2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of multiplying the specified quaternions together.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Quat().setFromEulerAngles(0, 30, 0);\nvar b = new pc.Quat().setFromEulerAngles(0, 60, 0);\nvar r = new pc.Quat();\n\n// r is set to a 90 degree rotation around the Y axis\n// In other words, r = a * b\nr.mul2(a, b);\n\nconsole.log(\"The result of the multiplication is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1215,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The quaternion used as the first multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Quat",
										"package": "playcanvas",
										"name": "Quat"
									}
								},
								{
									"id": 1216,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The quaternion used as the second multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Quat",
										"package": "playcanvas",
										"name": "Quat"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.mul2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.mul2"
					}
				},
				{
					"id": 1217,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4230,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1218,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the specified quaternion converted in place to a unit quaternion.",
								"returns": "The result of the normalization.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Quat(0, 0, 0, 5);\n\nv.normalize();\n\n// Outputs 0, 0, 0, 1\nconsole.log(\"The result of the vector normalization is: \" + v.toString());\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.normalize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.normalize"
					}
				},
				{
					"id": 1219,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4246,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1220,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the specified quaternion to the supplied numerical values.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar q = new pc.Quat();\nq.set(1, 0, 0, 0);\n\n// Outputs 1, 0, 0, 0\nconsole.log(\"The result of the vector set is: \" + q.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1221,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The x component of the quaternion."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1222,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The y component of the quaternion."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1223,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The z component of the quaternion."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1224,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The w component of the quaternion."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.set"
					}
				},
				{
					"id": 1225,
					"name": "setFromAxisAngle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4257,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1226,
							"name": "setFromAxisAngle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets a quaternion from an angular rotation around an axis.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar q = new pc.Quat();\nq.setFromAxisAngle(pc.Vec3.UP, 90);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1227,
									"name": "axis",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "World space axis around which to rotate."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1228,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Angle to rotate around the given axis in degrees."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.setFromAxisAngle"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.setFromAxisAngle"
					}
				},
				{
					"id": 1229,
					"name": "setFromEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4276,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1230,
							"name": "setFromEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets a quaternion from Euler angles specified in XYZ order.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Create a quaternion from 3 euler angles\nvar q = new pc.Quat();\nq.setFromEulerAngles(45, 90, 180);\n\n// Create the same quaternion from a vector containing the same 3 euler angles\nvar v = new pc.Vec3(45, 90, 180);\nvar r = new pc.Quat();\nr.setFromEulerAngles(v);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1231,
									"name": "ex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Angle to rotate around X axis in degrees. If ex is a Vec3, the\nthree angles will be read from it instead."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 1232,
									"name": "ey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1233,
									"name": "ez",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.setFromEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.setFromEulerAngles"
					}
				},
				{
					"id": 1234,
					"name": "setFromMat4",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4290,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1235,
							"name": "setFromMat4",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Converts the specified 4x4 matrix to a quaternion. Note that since a quaternion is purely a\nrepresentation for orientation, only the translational part of the matrix is lost.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Create a 4x4 rotation matrix of 180 degrees around the y-axis\nvar rot = new pc.Mat4().setFromAxisAngle(pc.Vec3.UP, 180);\n\n// Convert to a quaternion\nvar q = new pc.Quat().setFromMat4(rot);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1236,
									"name": "m",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 4x4 matrix to convert."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Mat4",
										"package": "playcanvas",
										"name": "Mat4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.setFromMat4"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.setFromMat4"
					}
				},
				{
					"id": 1179,
					"name": "setLookRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/quat.ts",
							"line": 25,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1180,
							"name": "setLookRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "根据朝向关系设置rotation",
								"returns": "朝向rotation\n"
							},
							"parameters": [
								{
									"id": 1181,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "起点"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1182,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "目标点"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1183,
									"name": "up",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "上方向"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							}
						}
					]
				},
				{
					"id": 1237,
					"name": "slerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4310,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1238,
							"name": "slerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Performs a spherical interpolation between two quaternions. The result of the interpolation\nis written to the quaternion calling the function.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar q1 = new pc.Quat(-0.11, -0.15, -0.46, 0.87);\nvar q2 = new pc.Quat(-0.21, -0.21, -0.67, 0.68);\n\nvar result;\nresult = new pc.Quat().slerp(q1, q2, 0);   // Return q1\nresult = new pc.Quat().slerp(q1, q2, 0.5); // Return the midpoint interpolant\nresult = new pc.Quat().slerp(q1, q2, 1);   // Return q2\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1239,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The quaternion to interpolate from."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Quat",
										"package": "playcanvas",
										"name": "Quat"
									}
								},
								{
									"id": 1240,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The quaternion to interpolate to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Quat",
										"package": "playcanvas",
										"name": "Quat"
									}
								},
								{
									"id": 1241,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value controlling the interpolation in relation to the two input\nquaternions. The value is in the range 0 to 1, 0 generating q1, 1 generating q2 and anything\nin between generating a spherical interpolation between the two."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.slerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.slerp"
					}
				},
				{
					"id": 1246,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4336,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1247,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Converts the quaternion to string form.",
								"returns": "The quaternion in string form.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Quat(0, 0, 0, 1);\n// Outputs [0, 0, 0, 1]\nconsole.log(v.toString());\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.toString"
					}
				},
				{
					"id": 1242,
					"name": "transformVector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4326,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1243,
							"name": "transformVector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Transforms a 3-dimensional vector by the specified quaternion.",
								"returns": "The input vector v transformed by the current instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Create a 3-dimensional vector\nvar v = new pc.Vec3(1, 2, 3);\n\n// Create a 4x4 rotation matrix\nvar q = new pc.Quat().setFromEulerAngles(10, 20, 30);\n\nvar tv = q.transformVector(v);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1244,
									"name": "vec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 3-dimensional vector to be transformed."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1245,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.transformVector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.transformVector"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1173
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1187,
						1184,
						1185,
						1186,
						1171,
						1172
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1188,
						1190,
						1192,
						1195,
						1198,
						1201,
						1204,
						1206,
						1208,
						1210,
						1213,
						1217,
						1219,
						1225,
						1229,
						1234,
						1179,
						1237,
						1246,
						1242
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/quat.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Quat",
					"package": "playcanvas",
					"name": "Quat"
				}
			]
		},
		{
			"id": 1248,
			"name": "Ray_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.Ray"
					}
				}
			],
			"children": [
				{
					"id": 1249,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1250,
							"name": "new Ray_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new Ray instance. The ray is infinite, starting at a given origin and pointing in\na given direction.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Create a new ray starting at the position of this entity and pointing down\n// the entity's negative Z axis\nvar ray = new pc.Ray(this.entity.getPosition(), this.entity.forward);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1251,
									"name": "origin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1252,
									"name": "direction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1248,
								"name": "Ray_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Ray.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Ray.constructor"
					}
				},
				{
					"id": 1261,
					"name": "direction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The direction of the ray."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3977,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Ray.direction"
					}
				},
				{
					"id": 1260,
					"name": "origin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The starting point of the ray."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3971,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Ray.origin"
					}
				},
				{
					"id": 1253,
					"name": "intersectTriangle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/ray.ts",
							"line": 30,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1254,
							"name": "intersectTriangle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "获得射线和指定三角形的交点",
								"returns": "射线和三角形的交点\n"
							},
							"parameters": [
								{
									"id": 1255,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "三角形a点坐标"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1256,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "三角形b点坐标"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1257,
									"name": "c",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "三角形c点坐标"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1258,
									"name": "backfaceCulling",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "是否剔除背面"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1259,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "交点（不传则创建新的向量）"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						}
					]
				},
				{
					"id": 1262,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3985,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1263,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets origin and direction to the supplied vector values.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 1264,
									"name": "origin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The starting point of the ray."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1265,
									"name": "direction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The direction of the ray."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Ray",
								"package": "playcanvas",
								"name": "Ray"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Ray.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Ray.set"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1249
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1261,
						1260
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1253,
						1262
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/ray.ts",
					"line": 19,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Ray",
					"package": "playcanvas",
					"name": "Ray"
				}
			]
		},
		{
			"id": 1869,
			"name": "ScriptTypeBase",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Base dummy duplicated pc.ScriptType class to be extended when defining.\nAll parameters and useful event-based methods made optional to avoid inadvertedly extending them or having to define them.\nCaveat is: tsconfig.json needs to be set to: \"strictNullChecks\": false",
				"tags": [
					{
						"tag": "export",
						"text": ""
					}
				]
			},
			"children": [
				{
					"id": 1870,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1871,
							"name": "new ScriptTypeBase",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1869,
								"name": "ScriptTypeBase"
							}
						}
					]
				},
				{
					"id": 1918,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The {@link pc.Application} that the instance of this type\nbelongs to."
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 238,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Application",
						"package": "playcanvas",
						"name": "Application"
					}
				},
				{
					"id": 1888,
					"name": "attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"tags": [
							{
								"tag": "function",
								"text": ""
							},
							{
								"tag": "name",
								"text": "pc.EventHandler#on"
							},
							{
								"tag": "description",
								"text": "Attach an event handler to an event."
							},
							{
								"tag": "param",
								"text": "Name of the event to bind the callback to.",
								"param": "name"
							},
							{
								"tag": "param",
								"text": "Function that is called when event is fired. Note the callback is limited to 8 arguments.",
								"param": "callback"
							},
							{
								"tag": "param",
								"text": "Object to use as 'this' when the event is fired, defaults to current this.",
								"param": "[scope]"
							},
							{
								"tag": "returns",
								"text": "Self for chaining."
							},
							{
								"tag": "example",
								"text": "\nobj.on('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 139,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ScriptAttributes",
						"package": "playcanvas",
						"name": "ScriptAttributes"
					}
				},
				{
					"id": 1872,
					"name": "attributesData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 84,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1873,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 1874,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1875,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 1852,
									"name": "AttributeParams"
								}
							}
						}
					}
				},
				{
					"id": 1920,
					"name": "enabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "True if the instance of this type is in running state. False\nwhen script is not running, because the Entity or any of its parents are disabled or the\nScript Component is disabled or the Script Instance is disabled. When disabled no update\nmethods will be called on each tick. initialize and postInitialize methods will run once\nwhen the script instance is in `enabled` state during app tick."
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 250,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1919,
					"name": "entity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The {@link pc.Entity} that the instance of this type belongs to."
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 242,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Entity",
						"package": "playcanvas",
						"name": "Entity"
					}
				},
				{
					"id": 1899,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 204,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1900,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.EventHandler#fire"
									},
									{
										"tag": "description",
										"text": "Fire an event, all additional arguments are passed on to the event listener."
									},
									{
										"tag": "example",
										"text": "\nobj.fire('test', 'This is the message');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1901,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Name of event to fire."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1902,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1903,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1904,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1905,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1906,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1907,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1908,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1909,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							}
						}
					]
				},
				{
					"id": 1915,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 232,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1916,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "True if the object has handlers bound to the specified event name.",
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.EventHandler#hasEvent"
									},
									{
										"tag": "description",
										"text": "Test if there are any handlers bound to an event name."
									},
									{
										"tag": "example",
										"text": "\nobj.on('test', function () { }); // bind an event to 'test'\nobj.hasEvent('test'); // returns true\nobj.hasEvent('hello'); // returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1917,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The name of the event to test."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1876,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 94,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1877,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[initialize]"
									},
									{
										"tag": "description",
										"text": "Called when script is about to run for the first time.\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1894,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 186,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1895,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.EventHandler#off"
									},
									{
										"tag": "description",
										"text": "Detach an event handler from an event. If callback is not provided then all callbacks are unbound from the event,\nif scope is not provided then all events with the callback will be unbound."
									},
									{
										"tag": "example",
										"text": "\nvar handler = function () {\n};\nobj.on('test', handler);\n\nobj.off(); // Removes all events\nobj.off('test'); // Removes all events called 'test'\nobj.off('test', handler); // Removes all handler functions, called 'test'\nobj.off('test', handler, this); // Removes all hander functions, called 'test' with scope this\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1896,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1897,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 1898,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							}
						}
					]
				},
				{
					"id": 1889,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 166,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1890,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[initialize]"
									},
									{
										"tag": "description",
										"text": "Called when script is about to run for the first time.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1891,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1892,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 1893,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							}
						}
					]
				},
				{
					"id": 1910,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 220,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1911,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.EventHandler#once"
									},
									{
										"tag": "description",
										"text": "Attach an event handler to an event. This handler will be removed after being fired once."
									},
									{
										"tag": "example",
										"text": "\nobj.once('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\nobj.fire('test', 1, 2); // not going to get handled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1912,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1913,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Function that is called when event is fired. Note the callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 1914,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							}
						}
					]
				},
				{
					"id": 1878,
					"name": "postInitialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 100,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1879,
							"name": "postInitialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[postInitialize]"
									},
									{
										"tag": "description",
										"text": "Called after all initialize methods are executed in the same tick or enabling chain of actions.\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1883,
					"name": "postUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 114,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1884,
							"name": "postUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[postUpdate]"
									},
									{
										"tag": "description",
										"text": "Called for enabled (running state) scripts on each tick, after update."
									}
								]
							},
							"parameters": [
								{
									"id": 1885,
									"name": "dt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The delta time in seconds since the last frame.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1886,
					"name": "swap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 122,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1887,
							"name": "swap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[swap]"
									},
									{
										"tag": "description",
										"text": "Called when a ScriptType that already exists in the registry\ngets redefined. If the new ScriptType has a `swap` method in its prototype,\nthen it will be executed to perform hot-reload at runtime.\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1880,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 107,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1881,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[update]"
									},
									{
										"tag": "description",
										"text": "Called for enabled (running state) scripts on each tick."
									}
								]
							},
							"parameters": [
								{
									"id": 1882,
									"name": "dt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The delta time in seconds since the last frame.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1870
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1918,
						1888,
						1872,
						1920,
						1919
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1899,
						1915,
						1876,
						1894,
						1889,
						1910,
						1878,
						1883,
						1886,
						1880
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/create-script-decorator.ts",
					"line": 81,
					"character": 13
				}
			]
		},
		{
			"id": 1266,
			"name": "Texture_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.Texture"
					}
				}
			],
			"children": [
				{
					"id": 1275,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1276,
							"name": "new Texture_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Texture instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Create a 8x8x24-bit texture\nvar texture = new pc.Texture(graphicsDevice, {\n    width: 8,\n    height: 8,\n    format: pc.PIXELFORMAT_R8_G8_B8\n});\n\n// Fill the texture with a gradient\nvar pixels = texture.lock();\nvar count = 0;\nfor (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n        pixels[count++] = i * 32;\n        pixels[count++] = j * 32;\n        pixels[count++] = 255;\n    }\n}\ntexture.unlock();\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1277,
									"name": "graphicsDevice",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The graphics device used to manage this texture."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphicsDevice",
										"package": "playcanvas",
										"name": "GraphicsDevice"
									}
								},
								{
									"id": 1278,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1279,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1289,
													"name": "addressU",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6114,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1290,
													"name": "addressV",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6115,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1291,
													"name": "addressW",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6116,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1288,
													"name": "anisotropy",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6113,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1300,
													"name": "compareFunc",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6125,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1299,
													"name": "compareOnRead",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6124,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1293,
													"name": "cubemap",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6118,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1283,
													"name": "depth",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6108,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1296,
													"name": "fixCubemapSeams",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6121,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1297,
													"name": "flipY",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6122,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1284,
													"name": "format",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6109,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1282,
													"name": "height",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6107,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1287,
													"name": "magFilter",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6112,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1286,
													"name": "minFilter",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6111,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1292,
													"name": "mipmaps",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6117,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1280,
													"name": "name",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6105,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1298,
													"name": "premultiplyAlpha",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6123,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1285,
													"name": "projection",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6110,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1295,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6120,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1294,
													"name": "volume",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6119,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1281,
													"name": "width",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6106,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1289,
														1290,
														1291,
														1288,
														1300,
														1299,
														1293,
														1283,
														1296,
														1297,
														1284,
														1282,
														1287,
														1286,
														1292,
														1280,
														1298,
														1285,
														1295,
														1294,
														1281
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1266,
								"name": "Texture_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.constructor"
					}
				},
				{
					"id": 1331,
					"name": "_addressU",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6150,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._addressU"
					}
				},
				{
					"id": 1332,
					"name": "_addressV",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6151,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._addressV"
					}
				},
				{
					"id": 1333,
					"name": "_addressW",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6152,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._addressW"
					}
				},
				{
					"id": 1330,
					"name": "_anisotropy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6149,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._anisotropy"
					}
				},
				{
					"id": 1335,
					"name": "_compareFunc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6154,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._compareFunc"
					}
				},
				{
					"id": 1334,
					"name": "_compareOnRead",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6153,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._compareOnRead"
					}
				},
				{
					"id": 1338,
					"name": "_compressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6157,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._compressed"
					}
				},
				{
					"id": 1321,
					"name": "_cubemap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6140,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._cubemap"
					}
				},
				{
					"id": 1317,
					"name": "_depth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6136,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._depth"
					}
				},
				{
					"id": 1324,
					"name": "_flipY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6143,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._flipY"
					}
				},
				{
					"id": 1318,
					"name": "_format",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6137,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._format"
					}
				},
				{
					"id": 1341,
					"name": "_gpuSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6160,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._gpuSize"
					}
				},
				{
					"id": 1316,
					"name": "_height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6135,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._height"
					}
				},
				{
					"id": 1339,
					"name": "_invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6158,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._invalid"
					}
				},
				{
					"id": 1326,
					"name": "_isRenderTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6145,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._isRenderTarget"
					}
				},
				{
					"id": 1337,
					"name": "_levels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6156,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._levels"
					}
				},
				{
					"id": 1421,
					"name": "_levelsUpdated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6365,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._levelsUpdated"
					}
				},
				{
					"id": 1340,
					"name": "_lockedLevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6159,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._lockedLevel"
					}
				},
				{
					"id": 1329,
					"name": "_magFilter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6148,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._magFilter"
					}
				},
				{
					"id": 1328,
					"name": "_minFilter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6147,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._minFilter"
					}
				},
				{
					"id": 1327,
					"name": "_mipmaps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6146,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._mipmaps"
					}
				},
				{
					"id": 1422,
					"name": "_mipmapsUploaded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6366,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._mipmapsUploaded"
					}
				},
				{
					"id": 1391,
					"name": "_needsMipmapsUpload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6282,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._needsMipmapsUpload"
					}
				},
				{
					"id": 1410,
					"name": "_needsUpload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6354,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._needsUpload"
					}
				},
				{
					"id": 1423,
					"name": "_parameterFlags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6367,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._parameterFlags"
					}
				},
				{
					"id": 1301,
					"name": "_pixelData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/texture.ts",
							"line": 37,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Uint8ClampedArray",
						"package": "typescript",
						"name": "Uint8ClampedArray"
					}
				},
				{
					"id": 1325,
					"name": "_premultiplyAlpha",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6144,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._premultiplyAlpha"
					}
				},
				{
					"id": 1322,
					"name": "_volume",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6141,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._volume"
					}
				},
				{
					"id": 1315,
					"name": "_width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6134,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._width"
					}
				},
				{
					"id": 1313,
					"name": "device",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6127,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "GraphicsDevice",
						"package": "playcanvas",
						"name": "GraphicsDevice"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.device"
					}
				},
				{
					"id": 1323,
					"name": "fixCubemapSeams",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6142,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.fixCubemapSeams"
					}
				},
				{
					"id": 1342,
					"name": "impl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6161,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.impl"
					}
				},
				{
					"id": 1314,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The name of the texture. Defaults to null."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6133,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.name"
					}
				},
				{
					"id": 1336,
					"name": "profilerHint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6155,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.profilerHint"
					}
				},
				{
					"id": 1320,
					"name": "projection",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6139,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.projection"
					}
				},
				{
					"id": 1319,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6138,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.type"
					}
				},
				{
					"id": 1359,
					"name": "addressU",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6211,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1360,
							"name": "addressU",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The addressing mode to be applied to the texture horizontally. Can be:",
								"text": "- {@link ADDRESS_REPEAT}\n- {@link ADDRESS_CLAMP_TO_EDGE}\n- {@link ADDRESS_MIRRORED_REPEAT}\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.addressU"
							}
						}
					],
					"setSignature": [
						{
							"id": 1361,
							"name": "addressU",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The addressing mode to be applied to the texture horizontally. Can be:",
								"text": "- {@link ADDRESS_REPEAT}\n- {@link ADDRESS_CLAMP_TO_EDGE}\n- {@link ADDRESS_MIRRORED_REPEAT}\n"
							},
							"parameters": [
								{
									"id": 1362,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.addressU"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.addressU"
					}
				},
				{
					"id": 1363,
					"name": "addressV",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6222,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1364,
							"name": "addressV",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The addressing mode to be applied to the texture vertically. Can be:",
								"text": "- {@link ADDRESS_REPEAT}\n- {@link ADDRESS_CLAMP_TO_EDGE}\n- {@link ADDRESS_MIRRORED_REPEAT}\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.addressV"
							}
						}
					],
					"setSignature": [
						{
							"id": 1365,
							"name": "addressV",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The addressing mode to be applied to the texture vertically. Can be:",
								"text": "- {@link ADDRESS_REPEAT}\n- {@link ADDRESS_CLAMP_TO_EDGE}\n- {@link ADDRESS_MIRRORED_REPEAT}\n"
							},
							"parameters": [
								{
									"id": 1366,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.addressV"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.addressV"
					}
				},
				{
					"id": 1367,
					"name": "addressW",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6233,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1368,
							"name": "addressW",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The addressing mode to be applied to the 3D texture depth (WebGL2 only). Can be:",
								"text": "- {@link ADDRESS_REPEAT}\n- {@link ADDRESS_CLAMP_TO_EDGE}\n- {@link ADDRESS_MIRRORED_REPEAT}\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.addressW"
							}
						}
					],
					"setSignature": [
						{
							"id": 1369,
							"name": "addressW",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The addressing mode to be applied to the 3D texture depth (WebGL2 only). Can be:",
								"text": "- {@link ADDRESS_REPEAT}\n- {@link ADDRESS_CLAMP_TO_EDGE}\n- {@link ADDRESS_MIRRORED_REPEAT}\n"
							},
							"parameters": [
								{
									"id": 1370,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.addressW"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.addressW"
					}
				},
				{
					"id": 1379,
					"name": "anisotropy",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6264,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1380,
							"name": "anisotropy",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Integer value specifying the level of anisotropic to apply to the texture ranging from 1 (no\nanisotropic filtering) to the {@link GraphicsDevice} property maxAnisotropy."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.anisotropy"
							}
						}
					],
					"setSignature": [
						{
							"id": 1381,
							"name": "anisotropy",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Integer value specifying the level of anisotropic to apply to the texture ranging from 1 (no\nanisotropic filtering) to the {@link GraphicsDevice} property maxAnisotropy."
							},
							"parameters": [
								{
									"id": 1382,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.anisotropy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.anisotropy"
					}
				},
				{
					"id": 1375,
					"name": "compareFunc",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6256,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1376,
							"name": "compareFunc",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Comparison function when compareOnRead is enabled (WebGL2 only). Possible values:",
								"text": "- {@link FUNC_LESS}\n- {@link FUNC_LESSEQUAL}\n- {@link FUNC_GREATER}\n- {@link FUNC_GREATEREQUAL}\n- {@link FUNC_EQUAL}\n- {@link FUNC_NOTEQUAL}\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.compareFunc"
							}
						}
					],
					"setSignature": [
						{
							"id": 1377,
							"name": "compareFunc",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Comparison function when compareOnRead is enabled (WebGL2 only). Possible values:",
								"text": "- {@link FUNC_LESS}\n- {@link FUNC_LESSEQUAL}\n- {@link FUNC_GREATER}\n- {@link FUNC_GREATEREQUAL}\n- {@link FUNC_EQUAL}\n- {@link FUNC_NOTEQUAL}\n"
							},
							"parameters": [
								{
									"id": 1378,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.compareFunc"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.compareFunc"
					}
				},
				{
					"id": 1371,
					"name": "compareOnRead",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6242,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1372,
							"name": "compareOnRead",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "When enabled, and if texture format is {@link PIXELFORMAT_DEPTH} or\n{@link PIXELFORMAT_DEPTHSTENCIL}, hardware PCF is enabled for this texture, and you can get\nfiltered results of comparison using texture() in your shader (WebGL2 only)."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.compareOnRead"
							}
						}
					],
					"setSignature": [
						{
							"id": 1373,
							"name": "compareOnRead",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "When enabled, and if texture format is {@link PIXELFORMAT_DEPTH} or\n{@link PIXELFORMAT_DEPTHSTENCIL}, hardware PCF is enabled for this texture, and you can get\nfiltered results of comparison using texture() in your shader (WebGL2 only)."
							},
							"parameters": [
								{
									"id": 1374,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.compareOnRead"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.compareOnRead"
					}
				},
				{
					"id": 1400,
					"name": "cubemap",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6337,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1401,
							"name": "cubemap",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns true if this texture is a cube map and false otherwise."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.cubemap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.cubemap"
					}
				},
				{
					"id": 1396,
					"name": "depth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6300,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1397,
							"name": "depth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The number of depth slices in a 3D texture (WebGL2 only)."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.depth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.depth"
					}
				},
				{
					"id": 1417,
					"name": "encoding",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6363,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1418,
							"name": "encoding",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "srgb"
									},
									{
										"type": "literal",
										"value": "linear"
									},
									{
										"type": "literal",
										"value": "rgbm"
									},
									{
										"type": "literal",
										"value": "rgbe"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.encoding"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.encoding"
					}
				},
				{
					"id": 1406,
					"name": "flipY",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6352,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1407,
							"name": "flipY",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Specifies whether the texture should be flipped in the Y-direction. Only affects textures\nwith a source that is an image, canvas or video element. Does not affect cubemaps,\ncompressed textures or textures set from raw pixel data. Defaults to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.flipY"
							}
						}
					],
					"setSignature": [
						{
							"id": 1408,
							"name": "flipY",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Specifies whether the texture should be flipped in the Y-direction. Only affects textures\nwith a source that is an image, canvas or video element. Does not affect cubemaps,\ncompressed textures or textures set from raw pixel data. Defaults to true."
							},
							"parameters": [
								{
									"id": 1409,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.flipY"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.flipY"
					}
				},
				{
					"id": 1398,
					"name": "format",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6331,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1399,
							"name": "format",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The pixel format of the texture. Can be:",
								"text": "- {@link PIXELFORMAT_A8}\n- {@link PIXELFORMAT_L8}\n- {@link PIXELFORMAT_L8_A8}\n- {@link PIXELFORMAT_R5_G6_B5}\n- {@link PIXELFORMAT_R5_G5_B5_A1}\n- {@link PIXELFORMAT_R4_G4_B4_A4}\n- {@link PIXELFORMAT_R8_G8_B8}\n- {@link PIXELFORMAT_R8_G8_B8_A8}\n- {@link PIXELFORMAT_DXT1}\n- {@link PIXELFORMAT_DXT3}\n- {@link PIXELFORMAT_DXT5}\n- {@link PIXELFORMAT_RGB16F}\n- {@link PIXELFORMAT_RGBA16F}\n- {@link PIXELFORMAT_RGB32F}\n- {@link PIXELFORMAT_RGBA32F}\n- {@link PIXELFORMAT_ETC1}\n- {@link PIXELFORMAT_PVRTC_2BPP_RGB_1}\n- {@link PIXELFORMAT_PVRTC_2BPP_RGBA_1}\n- {@link PIXELFORMAT_PVRTC_4BPP_RGB_1}\n- {@link PIXELFORMAT_PVRTC_4BPP_RGBA_1}\n- {@link PIXELFORMAT_111110F}\n- {@link PIXELFORMAT_ASTC_4x4}>/li>\n- {@link PIXELFORMAT_ATC_RGB}\n- {@link PIXELFORMAT_ATC_RGBA}\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.format"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.format"
					}
				},
				{
					"id": 1402,
					"name": "gpuSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6338,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1403,
							"name": "gpuSize",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.gpuSize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.gpuSize"
					}
				},
				{
					"id": 1394,
					"name": "height",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6294,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1395,
							"name": "height",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The height of the texture in pixels."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.height"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.height"
					}
				},
				{
					"id": 1355,
					"name": "magFilter",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6200,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1356,
							"name": "magFilter",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The magnification filter to be applied to the texture. Can be:",
								"text": "- {@link FILTER_NEAREST}\n- {@link FILTER_LINEAR}\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.magFilter"
							}
						}
					],
					"setSignature": [
						{
							"id": 1357,
							"name": "magFilter",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The magnification filter to be applied to the texture. Can be:",
								"text": "- {@link FILTER_NEAREST}\n- {@link FILTER_LINEAR}\n"
							},
							"parameters": [
								{
									"id": 1358,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.magFilter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.magFilter"
					}
				},
				{
					"id": 1351,
					"name": "minFilter",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6190,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1352,
							"name": "minFilter",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The minification filter to be applied to the texture. Can be:",
								"text": "- {@link FILTER_NEAREST}\n- {@link FILTER_LINEAR}\n- {@link FILTER_NEAREST_MIPMAP_NEAREST}\n- {@link FILTER_NEAREST_MIPMAP_LINEAR}\n- {@link FILTER_LINEAR_MIPMAP_NEAREST}\n- {@link FILTER_LINEAR_MIPMAP_LINEAR}\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.minFilter"
							}
						}
					],
					"setSignature": [
						{
							"id": 1353,
							"name": "minFilter",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The minification filter to be applied to the texture. Can be:",
								"text": "- {@link FILTER_NEAREST}\n- {@link FILTER_LINEAR}\n- {@link FILTER_NEAREST_MIPMAP_NEAREST}\n- {@link FILTER_NEAREST_MIPMAP_LINEAR}\n- {@link FILTER_LINEAR_MIPMAP_NEAREST}\n- {@link FILTER_LINEAR_MIPMAP_LINEAR}\n"
							},
							"parameters": [
								{
									"id": 1354,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.minFilter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.minFilter"
					}
				},
				{
					"id": 1387,
					"name": "mipmaps",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6280,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1388,
							"name": "mipmaps",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Defines if texture should generate/upload mipmaps if possible."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.mipmaps"
							}
						}
					],
					"setSignature": [
						{
							"id": 1389,
							"name": "mipmaps",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Defines if texture should generate/upload mipmaps if possible."
							},
							"parameters": [
								{
									"id": 1390,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.mipmaps"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.mipmaps"
					}
				},
				{
					"id": 1302,
					"name": "pixelData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/texture.ts",
							"line": 41,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1303,
							"name": "pixelData",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "该贴图的像素数据"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Uint8ClampedArray",
								"package": "typescript",
								"name": "Uint8ClampedArray"
							}
						}
					]
				},
				{
					"id": 1415,
					"name": "pot",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6362,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1416,
							"name": "pot",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns true if all dimensions of the texture are power of two, and false otherwise."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.pot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.pot"
					}
				},
				{
					"id": 1411,
					"name": "premultiplyAlpha",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6355,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1412,
							"name": "premultiplyAlpha",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.premultiplyAlpha"
							}
						}
					],
					"setSignature": [
						{
							"id": 1413,
							"name": "premultiplyAlpha",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1414,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.premultiplyAlpha"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.premultiplyAlpha"
					}
				},
				{
					"id": 1404,
					"name": "volume",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6344,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1405,
							"name": "volume",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns true if this texture is a 3D volume and false otherwise."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.volume"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.volume"
					}
				},
				{
					"id": 1392,
					"name": "width",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6288,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1393,
							"name": "width",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The width of the texture in pixels."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.width"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.width"
					}
				},
				{
					"id": 1343,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6165,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1344,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Frees resources associated with this texture."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.destroy"
					}
				},
				{
					"id": 1419,
					"name": "dirtyAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6364,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1420,
							"name": "dirtyAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.dirtyAll"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.dirtyAll"
					}
				},
				{
					"id": 1304,
					"name": "getPixelData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/texture.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1305,
							"name": "getPixelData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "获得该贴图的像素数据",
								"returns": "贴图的像素数据\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Uint8ClampedArray",
								"package": "typescript",
								"name": "Uint8ClampedArray"
							}
						}
					]
				},
				{
					"id": 1435,
					"name": "getSource",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6409,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1436,
							"name": "getSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the pixel data of the texture. If this is a cubemap then an array of 6 images will be\nreturned otherwise a single image.",
								"returns": "The source image of this texture. Can be null if source not\nassigned for specific image level.\n"
							},
							"parameters": [
								{
									"id": 1437,
									"name": "mipLevel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "HTMLImageElement",
								"package": "typescript",
								"name": "HTMLImageElement"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.getSource"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.getSource"
					}
				},
				{
					"id": 1424,
					"name": "lock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6383,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1425,
							"name": "lock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Locks a miplevel of the texture, returning a typed array to be filled with pixel data.",
								"returns": "A typed array containing the pixel data of\nthe locked mip level.\n"
							},
							"parameters": [
								{
									"id": 1426,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1427,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1429,
													"name": "face",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6385,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1428,
													"name": "level",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6384,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1430,
													"name": "mode",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6386,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1429,
														1428,
														1430
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "Uint8Array",
										"package": "typescript",
										"name": "Uint8Array"
									},
									{
										"type": "reference",
										"qualifiedName": "Uint16Array",
										"package": "typescript",
										"name": "Uint16Array"
									},
									{
										"type": "reference",
										"qualifiedName": "Float32Array",
										"package": "typescript",
										"name": "Float32Array"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.lock"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.lock"
					}
				},
				{
					"id": 1431,
					"name": "setSource",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6398,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1432,
							"name": "setSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Set the pixel data of the texture from a canvas, image, video DOM element. If the texture is\na cubemap, the supplied source must be an array of 6 canvases, images or videos."
							},
							"parameters": [
								{
									"id": 1433,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A\ncanvas, image or video element, or an array of 6 canvas, image or video elements."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"qualifiedName": "HTMLCanvasElement",
												"package": "typescript",
												"name": "HTMLCanvasElement"
											},
											{
												"type": "reference",
												"qualifiedName": "HTMLImageElement",
												"package": "typescript",
												"name": "HTMLImageElement"
											},
											{
												"type": "reference",
												"qualifiedName": "HTMLVideoElement",
												"package": "typescript",
												"name": "HTMLVideoElement"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "HTMLCanvasElement",
													"package": "typescript",
													"name": "HTMLCanvasElement"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "HTMLImageElement",
													"package": "typescript",
													"name": "HTMLImageElement"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"qualifiedName": "HTMLVideoElement",
													"package": "typescript",
													"name": "HTMLVideoElement"
												}
											}
										]
									}
								},
								{
									"id": 1434,
									"name": "mipLevel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.setSource"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.setSource"
					}
				},
				{
					"id": 1306,
					"name": "texture2D",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/texture.ts",
							"line": 75,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1307,
							"name": "texture2D",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "根据uv读取贴图的颜色值",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 1308,
									"name": "uv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "uv值"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1309,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1310,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/extension/extendClasses/texture.ts",
															"line": 75,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1311,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/extension/extendClasses/texture.ts",
															"line": 75,
															"character": 31
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1310,
														1311
													]
												}
											]
										}
									}
								},
								{
									"id": 1312,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "颜色值（不传则创建新的颜色）"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							}
						}
					]
				},
				{
					"id": 1438,
					"name": "unlock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6413,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1439,
							"name": "unlock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Unlocks the currently locked mip level and uploads it to VRAM."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.unlock"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.unlock"
					}
				},
				{
					"id": 1440,
					"name": "upload",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6421,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1441,
							"name": "upload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Forces a reupload of the textures pixel data to graphics memory. Ordinarily, this function\nis called by internally by {@link Texture#setSource} and {@link Texture#unlock}. However, it\nstill needs to be called explicitly in the case where an HTMLVideoElement is set as the\nsource of the texture.  Normally, this is done once every frame before video textured\ngeometry is rendered."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.upload"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.upload"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1275
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1331,
						1332,
						1333,
						1330,
						1335,
						1334,
						1338,
						1321,
						1317,
						1324,
						1318,
						1341,
						1316,
						1339,
						1326,
						1337,
						1421,
						1340,
						1329,
						1328,
						1327,
						1422,
						1391,
						1410,
						1423,
						1301,
						1325,
						1322,
						1315,
						1313,
						1323,
						1342,
						1314,
						1336,
						1320,
						1319
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1359,
						1363,
						1367,
						1379,
						1375,
						1371,
						1400,
						1396,
						1417,
						1406,
						1398,
						1402,
						1394,
						1355,
						1351,
						1387,
						1302,
						1415,
						1411,
						1404,
						1392
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1343,
						1419,
						1304,
						1435,
						1424,
						1431,
						1306,
						1438,
						1440
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/texture.ts",
					"line": 35,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Texture",
					"package": "playcanvas",
					"name": "Texture"
				}
			]
		},
		{
			"id": 1948,
			"name": "Tool",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 1949,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/toolHelper.ts",
							"line": 67,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1950,
							"name": "new Tool",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "创建新的工具实例"
							},
							"typeParameter": [
								{
									"id": 1951,
									"name": "Options",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 1952,
									"name": "EventsType",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"type": {
								"type": "reference",
								"id": 1948,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1951,
										"name": "Options"
									},
									{
										"type": "reference",
										"id": 1952,
										"name": "EventsType"
									}
								],
								"name": "Tool"
							}
						}
					]
				},
				{
					"id": 1954,
					"name": "_enabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/lib/toolHelper.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1953,
					"name": "eventHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/toolHelper.ts",
							"line": 60,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1952,
								"name": "EventsType"
							}
						],
						"name": "ExEventHandler"
					}
				},
				{
					"id": 1955,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/toolHelper.ts",
							"line": 76,
							"character": 15
						}
					],
					"getSignature": [
						{
							"id": 1956,
							"name": "enabled",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "获得工具的启用状态"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"setSignature": [
						{
							"id": 1957,
							"name": "enabled",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"comment": {
								"shortText": "设置工具启用状态（触发启用和禁用时的额外操作）"
							},
							"parameters": [
								{
									"id": 1958,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1959,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/toolHelper.ts",
							"line": 96,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1960,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "添加事件监听"
							},
							"parameters": [
								{
									"id": 1961,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "监听事件名称"
									},
									"type": {
										"type": "reference",
										"id": 1952,
										"name": "EventsType"
									}
								},
								{
									"id": 1962,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "回调"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "typescript",
										"name": "Function"
									}
								},
								{
									"id": 1963,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "范围\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1974,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/lib/toolHelper.ts",
							"line": 119,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 1975,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1972,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/lib/toolHelper.ts",
							"line": 118,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 1973,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1964,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/lib/toolHelper.ts",
							"line": 107,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1965,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "移除事件监听"
							},
							"parameters": [
								{
									"id": 1966,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "监听事件名称"
									},
									"type": {
										"type": "reference",
										"id": 1952,
										"name": "EventsType"
									}
								},
								{
									"id": 1967,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "回调"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Function",
										"package": "typescript",
										"name": "Function"
									}
								},
								{
									"id": 1968,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "范围\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1969,
					"name": "setOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/lib/toolHelper.ts",
							"line": 116,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1970,
							"name": "setOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "设置选项"
							},
							"parameters": [
								{
									"id": 1971,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "选项\n"
									},
									"type": {
										"type": "reference",
										"id": 1951,
										"name": "Options"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1949
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1954,
						1953
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1955
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1959,
						1974,
						1972,
						1964,
						1969
					]
				}
			],
			"sources": [
				{
					"fileName": "src/lib/toolHelper.ts",
					"line": 58,
					"character": 22
				}
			],
			"typeParameter": [
				{
					"id": 1976,
					"name": "Options",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1977,
					"name": "EventsType",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			]
		},
		{
			"id": 1444,
			"name": "Vec2_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.Vec2"
					}
				}
			],
			"children": [
				{
					"id": 1455,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1456,
							"name": "new Vec2_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Vec2 instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec2(1, 2);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1457,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1458,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1444,
								"name": "Vec2_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.constructor"
					}
				},
				{
					"id": 1459,
					"name": "_shaderData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec2.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Float32Array",
						"package": "typescript",
						"name": "Float32Array"
					}
				},
				{
					"id": 1462,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The first component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10849,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.x"
					}
				},
				{
					"id": 1463,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The second component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10855,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.y"
					}
				},
				{
					"id": 1452,
					"name": "DOWN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, -1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10819,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.DOWN"
					}
				},
				{
					"id": 1454,
					"name": "LEFT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [-1, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10833,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.LEFT"
					}
				},
				{
					"id": 1450,
					"name": "ONE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10805,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.ONE"
					}
				},
				{
					"id": 1453,
					"name": "RIGHT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [1, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10826,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.RIGHT"
					}
				},
				{
					"id": 1451,
					"name": "UP",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10812,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.UP"
					}
				},
				{
					"id": 1449,
					"name": "ZERO",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10798,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.ZERO"
					}
				},
				{
					"id": 1460,
					"name": "shaderData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec2.ts",
							"line": 21,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1461,
							"name": "shaderData",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "用于传入shader的数据"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Float32Array",
								"package": "typescript",
								"name": "Float32Array"
							}
						}
					]
				},
				{
					"id": 1464,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10870,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1465,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a 2-dimensional vector to another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\n\na.add(b);\n\n// Outputs [30, 30]\nconsole.log(\"The result of the addition is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1466,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to add to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.add"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.add"
					}
				},
				{
					"id": 1467,
					"name": "add2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10887,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1468,
							"name": "add2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds two 2-dimensional vectors together and returns the result.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\nvar r = new pc.Vec2();\n\nr.add2(a, b);\n// Outputs [30, 30]\n\nconsole.log(\"The result of the addition is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1469,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The first vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 1470,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.add2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.add2"
					}
				},
				{
					"id": 1471,
					"name": "addScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10901,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1472,
							"name": "addScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a number to each element of a vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 4);\n\nvec.addScalar(2);\n\n// Outputs [5, 6]\nconsole.log(\"The result of the addition is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1473,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to add."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.addScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.addScalar"
					}
				},
				{
					"id": 1524,
					"name": "ceil",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11135,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1525,
							"name": "ceil",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is rounded up to the next largest integer.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.ceil"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.ceil"
					}
				},
				{
					"id": 1474,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10911,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1475,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns an identical copy of the specified 2-dimensional vector.",
								"returns": "A 2-dimensional vector containing the result of the cloning.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec2(10, 20);\nvar vclone = v.clone();\nconsole.log(\"The result of the cloning is: \" + vclone.toString());\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.clone"
					}
				},
				{
					"id": 1476,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10925,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1477,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Copies the contents of a source 2-dimensional vector to a destination 2-dimensional vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar src = new pc.Vec2(10, 20);\nvar dst = new pc.Vec2();\n\ndst.copy(src);\n\nconsole.log(\"The two vectors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1478,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A vector to copy to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.copy"
					}
				},
				{
					"id": 1479,
					"name": "cross",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10940,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1480,
							"name": "cross",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a cross product operation performed on the two specified 2-dimensional\nvectors.",
								"returns": "The cross product of the two vectors.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar right = new pc.Vec2(1, 0);\nvar up = new pc.Vec2(0, 1);\nvar crossProduct = right.cross(up);\n\n// Prints 1\nconsole.log(\"The result of the cross product is: \" + crossProduct);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1481,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second 2-dimensional vector operand of the cross product."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.cross"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.cross"
					}
				},
				{
					"id": 1482,
					"name": "distance",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10952,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1483,
							"name": "distance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the distance between the two specified 2-dimensional vectors.",
								"returns": "The distance between the two vectors.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v1 = new pc.Vec2(5, 10);\nvar v2 = new pc.Vec2(10, 20);\nvar d = v1.distance(v2);\nconsole.log(\"The distance between v1 and v2 is: \" + d);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1484,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second 2-dimensional vector to test."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.distance"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.distance"
					}
				},
				{
					"id": 1485,
					"name": "div",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10967,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1486,
							"name": "div",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides a 2-dimensional vector by another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(4, 9);\nvar b = new pc.Vec2(2, 3);\n\na.div(b);\n\n// Outputs [2, 3]\nconsole.log(\"The result of the division is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1487,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to divide the specified vector by."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.div"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.div"
					}
				},
				{
					"id": 1488,
					"name": "div2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10984,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1489,
							"name": "div2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides one 2-dimensional vector by another and writes the result to the specified vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(4, 9);\nvar b = new pc.Vec2(2, 3);\nvar r = new pc.Vec2();\n\nr.div2(a, b);\n// Outputs [2, 3]\n\nconsole.log(\"The result of the division is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1490,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The dividend vector (the vector being divided)."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 1491,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The divisor vector (the vector dividing the dividend)."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.div2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.div2"
					}
				},
				{
					"id": 1492,
					"name": "divScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10998,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1493,
							"name": "divScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides each element of a vector by a number.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 6);\n\nvec.divScalar(3);\n\n// Outputs [1, 2]\nconsole.log(\"The result of the division is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1494,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to divide by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.divScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.divScalar"
					}
				},
				{
					"id": 1495,
					"name": "dot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11011,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1496,
							"name": "dot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a dot product operation performed on the two specified 2-dimensional\nvectors.",
								"returns": "The result of the dot product operation.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v1 = new pc.Vec2(5, 10);\nvar v2 = new pc.Vec2(10, 20);\nvar v1dotv2 = v1.dot(v2);\nconsole.log(\"The result of the dot product is: \" + v1dotv2);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1497,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second 2-dimensional vector operand of the dot product."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.dot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.dot"
					}
				},
				{
					"id": 1498,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11022,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1499,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Reports whether two vectors are equal.",
								"returns": "True if the vectors are equal and false otherwise.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(1, 2);\nvar b = new pc.Vec2(4, 5);\nconsole.log(\"The two vectors are \" + (a.equals(b) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1500,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to compare to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.equals"
					}
				},
				{
					"id": 1522,
					"name": "floor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11129,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1523,
							"name": "floor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is set to the largest integer less than or equal to its value.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.floor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.floor"
					}
				},
				{
					"id": 1501,
					"name": "length",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11033,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1502,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the magnitude of the specified 2-dimensional vector.",
								"returns": "The magnitude of the specified 2-dimensional vector.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 4);\nvar len = vec.length();\n// Outputs 5\nconsole.log(\"The length of the vector is: \" + len);\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.length"
					}
				},
				{
					"id": 1503,
					"name": "lengthSq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11044,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1504,
							"name": "lengthSq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the magnitude squared of the specified 2-dimensional vector.",
								"returns": "The magnitude of the specified 2-dimensional vector.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 4);\nvar len = vec.lengthSq();\n// Outputs 25\nconsole.log(\"The length squared of the vector is: \" + len);\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.lengthSq"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.lengthSq"
					}
				},
				{
					"id": 1505,
					"name": "lerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11063,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1506,
							"name": "lerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a linear interpolation between two specified 2-dimensional vectors.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(0, 0);\nvar b = new pc.Vec2(10, 10);\nvar r = new pc.Vec2();\n\nr.lerp(a, b, 0);   // r is equal to a\nr.lerp(a, b, 0.5); // r is 5, 5\nr.lerp(a, b, 1);   // r is equal to b\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1507,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional to interpolate from."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 1508,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional to interpolate to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 1509,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value controlling the point of interpolation. Between 0 and 1,\nthe linear interpolant will occur on a straight line between lhs and rhs. Outside of this\nrange, the linear interpolant will occur on a ray extrapolated from this line."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.lerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.lerp"
					}
				},
				{
					"id": 1531,
					"name": "max",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11155,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1532,
							"name": "max",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is assigned a value from rhs parameter if it is larger.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 1533,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional vector used as the source of elements to compare to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.max"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.max"
					}
				},
				{
					"id": 1528,
					"name": "min",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11148,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1529,
							"name": "min",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is assigned a value from rhs parameter if it is smaller.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 1530,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional vector used as the source of elements to compare to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.min"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.min"
					}
				},
				{
					"id": 1510,
					"name": "mul",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11078,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1511,
							"name": "mul",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Multiplies a 2-dimensional vector to another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(2, 3);\nvar b = new pc.Vec2(4, 5);\n\na.mul(b);\n\n// Outputs 8, 15\nconsole.log(\"The result of the multiplication is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1512,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional vector used as the second multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.mul"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.mul"
					}
				},
				{
					"id": 1513,
					"name": "mul2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11095,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1514,
							"name": "mul2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of multiplying the specified 2-dimensional vectors together.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(2, 3);\nvar b = new pc.Vec2(4, 5);\nvar r = new pc.Vec2();\n\nr.mul2(a, b);\n\n// Outputs 8, 15\nconsole.log(\"The result of the multiplication is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1515,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional vector used as the first multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 1516,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional vector used as the second multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.mul2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.mul2"
					}
				},
				{
					"id": 1517,
					"name": "mulScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11109,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1518,
							"name": "mulScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Multiplies each element of a vector by a number.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 6);\n\nvec.mulScalar(3);\n\n// Outputs [9, 18]\nconsole.log(\"The result of the multiplication is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1519,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to multiply by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.mulScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.mulScalar"
					}
				},
				{
					"id": 1520,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11123,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1521,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns this 2-dimensional vector converted to a unit vector in place. If the vector has a\nlength of zero, the vector's elements will be set to zero.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec2(25, 0);\n\nv.normalize();\n\n// Outputs 1, 0\nconsole.log(\"The result of the vector normalization is: \" + v.toString());\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.normalize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.normalize"
					}
				},
				{
					"id": 1526,
					"name": "round",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11141,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1527,
							"name": "round",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is rounded up or down to the nearest integer.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.round"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.round"
					}
				},
				{
					"id": 1534,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11169,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1535,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the specified 2-dimensional vector to the supplied numerical values.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec2();\nv.set(5, 10);\n\n// Outputs 5, 10\nconsole.log(\"The result of the vector set is: \" + v.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1536,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the first component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1537,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the second component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.set"
					}
				},
				{
					"id": 1538,
					"name": "sub",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11184,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1539,
							"name": "sub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts a 2-dimensional vector from another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\n\na.sub(b);\n\n// Outputs [-10, -10]\nconsole.log(\"The result of the subtraction is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1540,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to add to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.sub"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.sub"
					}
				},
				{
					"id": 1541,
					"name": "sub2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11201,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1542,
							"name": "sub2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts two 2-dimensional vectors from one another and returns the result.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\nvar r = new pc.Vec2();\n\nr.sub2(a, b);\n\n// Outputs [-10, -10]\nconsole.log(\"The result of the subtraction is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1543,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The first vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 1544,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.sub2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.sub2"
					}
				},
				{
					"id": 1545,
					"name": "subScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11215,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1546,
							"name": "subScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts a number from each element of a vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 4);\n\nvec.subScalar(2);\n\n// Outputs [1, 2]\nconsole.log(\"The result of the subtraction is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1547,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to subtract."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.subScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.subScalar"
					}
				},
				{
					"id": 1548,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11225,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1549,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Converts the vector to string form.",
								"returns": "The vector in string form.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec2(20, 10);\n// Outputs [20, 10]\nconsole.log(v.toString());\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1455
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1459,
						1462,
						1463,
						1452,
						1454,
						1450,
						1453,
						1451,
						1449
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1460
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1464,
						1467,
						1471,
						1524,
						1474,
						1476,
						1479,
						1482,
						1485,
						1488,
						1492,
						1495,
						1498,
						1522,
						1501,
						1503,
						1505,
						1531,
						1528,
						1510,
						1513,
						1517,
						1520,
						1526,
						1534,
						1538,
						1541,
						1545,
						1548
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/vec2.ts",
					"line": 14,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Vec2",
					"package": "playcanvas",
					"name": "Vec2"
				}
			]
		},
		{
			"id": 1550,
			"name": "Vec3_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.Vec3"
					}
				}
			],
			"children": [
				{
					"id": 1559,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1560,
							"name": "new Vec3_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new Vec3 object.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec3(1, 2, 3);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1561,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1562,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1563,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1550,
								"name": "Vec3_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.constructor"
					}
				},
				{
					"id": 1564,
					"name": "_rotation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec3.ts",
							"line": 26,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Quat",
						"package": "playcanvas",
						"name": "Quat"
					}
				},
				{
					"id": 1565,
					"name": "_shaderData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec3.ts",
							"line": 27,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Float32Array",
						"package": "typescript",
						"name": "Float32Array"
					}
				},
				{
					"id": 1587,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The first component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3548,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.x"
					}
				},
				{
					"id": 1588,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The second component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3554,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.y"
					}
				},
				{
					"id": 1589,
					"name": "z",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The third component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3560,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.z"
					}
				},
				{
					"id": 1558,
					"name": "BACK",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, 0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3531,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.BACK"
					}
				},
				{
					"id": 1554,
					"name": "DOWN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, -1, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3503,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.DOWN"
					}
				},
				{
					"id": 1557,
					"name": "FORWARD",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, 0, -1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3524,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.FORWARD"
					}
				},
				{
					"id": 1556,
					"name": "LEFT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [-1, 0, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3517,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.LEFT"
					}
				},
				{
					"id": 1552,
					"name": "ONE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [1, 1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3489,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.ONE"
					}
				},
				{
					"id": 1555,
					"name": "RIGHT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [1, 0, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3510,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.RIGHT"
					}
				},
				{
					"id": 1553,
					"name": "UP",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, 1, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3496,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.UP"
					}
				},
				{
					"id": 1551,
					"name": "ZERO",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, 0, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3482,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.ZERO"
					}
				},
				{
					"id": 1566,
					"name": "rotation",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec3.ts",
							"line": 32,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1567,
							"name": "rotation",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "获得此3维向量的朝向rotation"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							}
						}
					]
				},
				{
					"id": 1568,
					"name": "shaderData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec3.ts",
							"line": 41,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1569,
							"name": "shaderData",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "用于传入shader的数据"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Float32Array",
								"package": "typescript",
								"name": "Float32Array"
							}
						}
					]
				},
				{
					"id": 1590,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3575,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1591,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a 3-dimensional vector to another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec3(10, 10, 10);\nvar b = new pc.Vec3(20, 20, 20);\n\na.add(b);\n\n// Outputs [30, 30, 30]\nconsole.log(\"The result of the addition is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1592,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to add to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.add"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.add"
					}
				},
				{
					"id": 1593,
					"name": "add2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3592,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1594,
							"name": "add2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds two 3-dimensional vectors together and returns the result.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec3(10, 10, 10);\nvar b = new pc.Vec3(20, 20, 20);\nvar r = new pc.Vec3();\n\nr.add2(a, b);\n// Outputs [30, 30, 30]\n\nconsole.log(\"The result of the addition is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1595,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The first vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1596,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.add2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.add2"
					}
				},
				{
					"id": 1597,
					"name": "addScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3606,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1598,
							"name": "addScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a number to each element of a vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec3(3, 4, 5);\n\nvec.addScalar(2);\n\n// Outputs [5, 6, 7]\nconsole.log(\"The result of the addition is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1599,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to add."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.addScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.addScalar"
					}
				},
				{
					"id": 1651,
					"name": "ceil",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3839,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1652,
							"name": "ceil",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is rounded up to the next largest integer.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.ceil"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.ceil"
					}
				},
				{
					"id": 1600,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3616,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1601,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns an identical copy of the specified 3-dimensional vector.",
								"returns": "A 3-dimensional vector containing the result of the cloning.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec3(10, 20, 30);\nvar vclone = v.clone();\nconsole.log(\"The result of the cloning is: \" + vclone.toString());\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.clone"
					}
				},
				{
					"id": 1602,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3630,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1603,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Copies the contents of a source 3-dimensional vector to a destination 3-dimensional vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar src = new pc.Vec3(10, 20, 30);\nvar dst = new pc.Vec3();\n\ndst.copy(src);\n\nconsole.log(\"The two vectors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1604,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A vector to copy to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.copy"
					}
				},
				{
					"id": 1605,
					"name": "cross",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3644,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1606,
							"name": "cross",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a cross product operation performed on the two specified 3-dimensional\nvectors.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar back = new pc.Vec3().cross(pc.Vec3.RIGHT, pc.Vec3.UP);\n\n// Prints the Z axis (i.e. [0, 0, 1])\nconsole.log(\"The result of the cross product is: \" + back.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1607,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The first 3-dimensional vector operand of the cross product."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1608,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second 3-dimensional vector operand of the cross product."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.cross"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.cross"
					}
				},
				{
					"id": 1609,
					"name": "distance",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3656,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1610,
							"name": "distance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the distance between the two specified 3-dimensional vectors.",
								"returns": "The distance between the two vectors.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v1 = new pc.Vec3(5, 10, 20);\nvar v2 = new pc.Vec3(10, 20, 40);\nvar d = v1.distance(v2);\nconsole.log(\"The distance between v1 and v2 is: \" + d);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1611,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second 3-dimensional vector to test."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.distance"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.distance"
					}
				},
				{
					"id": 1612,
					"name": "div",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3671,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1613,
							"name": "div",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides a 3-dimensional vector by another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec3(4, 9, 16);\nvar b = new pc.Vec3(2, 3, 4);\n\na.div(b);\n\n// Outputs [2, 3, 4]\nconsole.log(\"The result of the division is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1614,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to divide the specified vector by."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.div"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.div"
					}
				},
				{
					"id": 1615,
					"name": "div2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3688,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1616,
							"name": "div2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides one 3-dimensional vector by another and writes the result to the specified vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec3(4, 9, 16);\nvar b = new pc.Vec3(2, 3, 4);\nvar r = new pc.Vec3();\n\nr.div2(a, b);\n// Outputs [2, 3, 4]\n\nconsole.log(\"The result of the division is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1617,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The dividend vector (the vector being divided)."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1618,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The divisor vector (the vector dividing the dividend)."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.div2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.div2"
					}
				},
				{
					"id": 1619,
					"name": "divScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3702,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1620,
							"name": "divScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides each element of a vector by a number.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec3(3, 6, 9);\n\nvec.divScalar(3);\n\n// Outputs [1, 2, 3]\nconsole.log(\"The result of the division is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1621,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to divide by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.divScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.divScalar"
					}
				},
				{
					"id": 1622,
					"name": "dot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3715,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1623,
							"name": "dot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a dot product operation performed on the two specified 3-dimensional\nvectors.",
								"returns": "The result of the dot product operation.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v1 = new pc.Vec3(5, 10, 20);\nvar v2 = new pc.Vec3(10, 20, 40);\nvar v1dotv2 = v1.dot(v2);\nconsole.log(\"The result of the dot product is: \" + v1dotv2);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1624,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second 3-dimensional vector operand of the dot product."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.dot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.dot"
					}
				},
				{
					"id": 1625,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3726,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1626,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Reports whether two vectors are equal.",
								"returns": "True if the vectors are equal and false otherwise.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec3(1, 2, 3);\nvar b = new pc.Vec3(4, 5, 6);\nconsole.log(\"The two vectors are \" + (a.equals(b) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1627,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to compare to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.equals"
					}
				},
				{
					"id": 1649,
					"name": "floor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3833,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1650,
							"name": "floor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is set to the largest integer less than or equal to its value.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.floor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.floor"
					}
				},
				{
					"id": 1570,
					"name": "getGLPos",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec3.ts",
							"line": 57,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1571,
							"name": "getGLPos",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "根据3维世界坐标获得标准化gl坐标",
								"returns": "标准化gl坐标（w为1）\n"
							},
							"parameters": [
								{
									"id": 1572,
									"name": "glPos",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "标准化gl坐标（不传则创建新的向量）"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								},
								{
									"id": 1573,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "当前相机，默认为第一个场景相机"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CameraComponent",
										"package": "playcanvas",
										"name": "CameraComponent"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							}
						}
					]
				},
				{
					"id": 1628,
					"name": "length",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3737,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1629,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the magnitude of the specified 3-dimensional vector.",
								"returns": "The magnitude of the specified 3-dimensional vector.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec3(3, 4, 0);\nvar len = vec.length();\n// Outputs 5\nconsole.log(\"The length of the vector is: \" + len);\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.length"
					}
				},
				{
					"id": 1630,
					"name": "lengthSq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3748,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1631,
							"name": "lengthSq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the magnitude squared of the specified 3-dimensional vector.",
								"returns": "The magnitude of the specified 3-dimensional vector.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec3(3, 4, 0);\nvar len = vec.lengthSq();\n// Outputs 25\nconsole.log(\"The length squared of the vector is: \" + len);\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.lengthSq"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.lengthSq"
					}
				},
				{
					"id": 1632,
					"name": "lerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3767,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1633,
							"name": "lerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a linear interpolation between two specified 3-dimensional vectors.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec3(0, 0, 0);\nvar b = new pc.Vec3(10, 10, 10);\nvar r = new pc.Vec3();\n\nr.lerp(a, b, 0);   // r is equal to a\nr.lerp(a, b, 0.5); // r is 5, 5, 5\nr.lerp(a, b, 1);   // r is equal to b\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1634,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 3-dimensional to interpolate from."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1635,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 3-dimensional to interpolate to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1636,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value controlling the point of interpolation. Between 0 and 1,\nthe linear interpolant will occur on a straight line between lhs and rhs. Outside of this\nrange, the linear interpolant will occur on a ray extrapolated from this line."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.lerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.lerp"
					}
				},
				{
					"id": 1658,
					"name": "max",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3859,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1659,
							"name": "max",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is assigned a value from rhs parameter if it is larger.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 1660,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 3-dimensional vector used as the source of elements to compare to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.max"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.max"
					}
				},
				{
					"id": 1655,
					"name": "min",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3852,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1656,
							"name": "min",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is assigned a value from rhs parameter if it is smaller.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 1657,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 3-dimensional vector used as the source of elements to compare to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.min"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.min"
					}
				},
				{
					"id": 1637,
					"name": "mul",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3782,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1638,
							"name": "mul",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Multiplies a 3-dimensional vector to another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec3(2, 3, 4);\nvar b = new pc.Vec3(4, 5, 6);\n\na.mul(b);\n\n// Outputs 8, 15, 24\nconsole.log(\"The result of the multiplication is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1639,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 3-dimensional vector used as the second multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.mul"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.mul"
					}
				},
				{
					"id": 1640,
					"name": "mul2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3799,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1641,
							"name": "mul2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of multiplying the specified 3-dimensional vectors together.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec3(2, 3, 4);\nvar b = new pc.Vec3(4, 5, 6);\nvar r = new pc.Vec3();\n\nr.mul2(a, b);\n\n// Outputs 8, 15, 24\nconsole.log(\"The result of the multiplication is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1642,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 3-dimensional vector used as the first multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1643,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 3-dimensional vector used as the second multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.mul2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.mul2"
					}
				},
				{
					"id": 1644,
					"name": "mulScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3813,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1645,
							"name": "mulScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Multiplies each element of a vector by a number.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec3(3, 6, 9);\n\nvec.mulScalar(3);\n\n// Outputs [9, 18, 27]\nconsole.log(\"The result of the multiplication is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1646,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to multiply by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.mulScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.mulScalar"
					}
				},
				{
					"id": 1647,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3827,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1648,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns this 3-dimensional vector converted to a unit vector in place. If the vector has a\nlength of zero, the vector's elements will be set to zero.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec3(25, 0, 0);\n\nv.normalize();\n\n// Outputs 1, 0, 0\nconsole.log(\"The result of the vector normalization is: \" + v.toString());\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.normalize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.normalize"
					}
				},
				{
					"id": 1661,
					"name": "project",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3874,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1662,
							"name": "project",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Projects this 3-dimensional vector onto the specified vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec3(5, 5, 5);\nvar normal = new pc.Vec3(1, 0, 0);\n\nv.project(normal);\n\n// Outputs 5, 0, 0\nconsole.log(\"The result of the vector projection is: \" + v.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1663,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector onto which the original vector will be projected on."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.project"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.project"
					}
				},
				{
					"id": 1583,
					"name": "rotateAxisAngle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec3.ts",
							"line": 123,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1584,
							"name": "rotateAxisAngle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "绕旋转轴旋转向量",
								"returns": "旋转后的向量\n",
								"tags": [
									{
										"tag": "see",
										"text": "https://www.cheapface.top/index.php/archives/57/ 绕任意轴旋转3维向量（活用矢量分解与合成）"
									}
								]
							},
							"parameters": [
								{
									"id": 1585,
									"name": "axis",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "旋转角度"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1586,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "旋转角"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						}
					]
				},
				{
					"id": 1574,
					"name": "rotateX",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec3.ts",
							"line": 77,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1575,
							"name": "rotateX",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "绕x轴旋转向量",
								"returns": "旋转后的向量\n",
								"tags": [
									{
										"tag": "see",
										"text": "https://www.cheapface.top/index.php/archives/19/ 二维向量的旋转"
									}
								]
							},
							"parameters": [
								{
									"id": 1576,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "旋转角度"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						}
					]
				},
				{
					"id": 1577,
					"name": "rotateY",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec3.ts",
							"line": 92,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1578,
							"name": "rotateY",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "绕y轴旋转向量",
								"returns": "旋转后的向量\n",
								"tags": [
									{
										"tag": "see",
										"text": "https://www.cheapface.top/index.php/archives/19/ 二维向量的旋转"
									}
								]
							},
							"parameters": [
								{
									"id": 1579,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "旋转角度"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						}
					]
				},
				{
					"id": 1580,
					"name": "rotateZ",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec3.ts",
							"line": 107,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1581,
							"name": "rotateZ",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "绕z轴旋转向量",
								"returns": "旋转后的向量\n",
								"tags": [
									{
										"tag": "see",
										"text": "https://www.cheapface.top/index.php/archives/19/ 二维向量的旋转"
									}
								]
							},
							"parameters": [
								{
									"id": 1582,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "旋转角度"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						}
					]
				},
				{
					"id": 1653,
					"name": "round",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3845,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1654,
							"name": "round",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is rounded up or down to the nearest integer.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.round"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.round"
					}
				},
				{
					"id": 1664,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3889,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1665,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the specified 3-dimensional vector to the supplied numerical values.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec3();\nv.set(5, 10, 20);\n\n// Outputs 5, 10, 20\nconsole.log(\"The result of the vector set is: \" + v.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1666,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the first component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1667,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the second component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1668,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the third component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.set"
					}
				},
				{
					"id": 1669,
					"name": "sub",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3904,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1670,
							"name": "sub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts a 3-dimensional vector from another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec3(10, 10, 10);\nvar b = new pc.Vec3(20, 20, 20);\n\na.sub(b);\n\n// Outputs [-10, -10, -10]\nconsole.log(\"The result of the subtraction is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1671,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to add to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.sub"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.sub"
					}
				},
				{
					"id": 1672,
					"name": "sub2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3921,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1673,
							"name": "sub2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts two 3-dimensional vectors from one another and returns the result.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec3(10, 10, 10);\nvar b = new pc.Vec3(20, 20, 20);\nvar r = new pc.Vec3();\n\nr.sub2(a, b);\n\n// Outputs [-10, -10, -10]\nconsole.log(\"The result of the subtraction is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1674,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The first vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1675,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.sub2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.sub2"
					}
				},
				{
					"id": 1676,
					"name": "subScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3935,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1677,
							"name": "subScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts a number from each element of a vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec3(3, 4, 5);\n\nvec.subScalar(2);\n\n// Outputs [1, 2, 3]\nconsole.log(\"The result of the subtraction is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1678,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to subtract."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.subScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.subScalar"
					}
				},
				{
					"id": 1679,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3945,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1680,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Converts the vector to string form.",
								"returns": "The vector in string form.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec3(20, 10, 5);\n// Outputs [20, 10, 5]\nconsole.log(v.toString());\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1559
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1564,
						1565,
						1587,
						1588,
						1589,
						1558,
						1554,
						1557,
						1556,
						1552,
						1555,
						1553,
						1551
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1566,
						1568
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1590,
						1593,
						1597,
						1651,
						1600,
						1602,
						1605,
						1609,
						1612,
						1615,
						1619,
						1622,
						1625,
						1649,
						1570,
						1628,
						1630,
						1632,
						1658,
						1655,
						1637,
						1640,
						1644,
						1647,
						1661,
						1583,
						1574,
						1577,
						1580,
						1653,
						1664,
						1669,
						1672,
						1676,
						1679
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/vec3.ts",
					"line": 24,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Vec3",
					"package": "playcanvas",
					"name": "Vec3"
				}
			]
		},
		{
			"id": 1681,
			"name": "Vec4_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extend",
					"type": {
						"type": "reference",
						"id": 1921,
						"name": "extend"
					},
					"arguments": {
						"extendClass": "pc.Vec4"
					}
				}
			],
			"children": [
				{
					"id": 1684,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1685,
							"name": "new Vec4_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new Vec4 object.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec4(1, 2, 3, 4);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1686,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1687,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1688,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1689,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1681,
								"name": "Vec4_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.constructor"
					}
				},
				{
					"id": 1690,
					"name": "_shaderData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec4.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Float32Array",
						"package": "typescript",
						"name": "Float32Array"
					}
				},
				{
					"id": 1696,
					"name": "w",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The fourth component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4392,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.w"
					}
				},
				{
					"id": 1693,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The first component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4374,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.x"
					}
				},
				{
					"id": 1694,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The second component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4380,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.y"
					}
				},
				{
					"id": 1695,
					"name": "z",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The third component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4386,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.z"
					}
				},
				{
					"id": 1683,
					"name": "ONE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [1, 1, 1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4356,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec4",
						"package": "playcanvas",
						"name": "Vec4"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.ONE"
					}
				},
				{
					"id": 1682,
					"name": "ZERO",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, 0, 0, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4349,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec4",
						"package": "playcanvas",
						"name": "Vec4"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.ZERO"
					}
				},
				{
					"id": 1691,
					"name": "shaderData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/vec4.ts",
							"line": 21,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 1692,
							"name": "shaderData",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "用于传入shader的数据"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Float32Array",
								"package": "typescript",
								"name": "Float32Array"
							}
						}
					]
				},
				{
					"id": 1697,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4407,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1698,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a 4-dimensional vector to another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec4(10, 10, 10, 10);\nvar b = new pc.Vec4(20, 20, 20, 20);\n\na.add(b);\n\n// Outputs [30, 30, 30]\nconsole.log(\"The result of the addition is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1699,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to add to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.add"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.add"
					}
				},
				{
					"id": 1700,
					"name": "add2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4424,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1701,
							"name": "add2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds two 4-dimensional vectors together and returns the result.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec4(10, 10, 10, 10);\nvar b = new pc.Vec4(20, 20, 20, 20);\nvar r = new pc.Vec4();\n\nr.add2(a, b);\n// Outputs [30, 30, 30]\n\nconsole.log(\"The result of the addition is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1702,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The first vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								},
								{
									"id": 1703,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.add2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.add2"
					}
				},
				{
					"id": 1704,
					"name": "addScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4438,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1705,
							"name": "addScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a number to each element of a vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec4(3, 4, 5, 6);\n\nvec.addScalar(2);\n\n// Outputs [5, 6, 7, 8]\nconsole.log(\"The result of the addition is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1706,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to add."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.addScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.addScalar"
					}
				},
				{
					"id": 1751,
					"name": "ceil",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4645,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1752,
							"name": "ceil",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is rounded up to the next largest integer.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.ceil"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.ceil"
					}
				},
				{
					"id": 1707,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4448,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1708,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns an identical copy of the specified 4-dimensional vector.",
								"returns": "A 4-dimensional vector containing the result of the cloning.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec4(10, 20, 30, 40);\nvar vclone = v.clone();\nconsole.log(\"The result of the cloning is: \" + vclone.toString());\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.clone"
					}
				},
				{
					"id": 1709,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4462,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1710,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Copies the contents of a source 4-dimensional vector to a destination 4-dimensional vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar src = new pc.Vec4(10, 20, 30, 40);\nvar dst = new pc.Vec4();\n\ndst.copy(src);\n\nconsole.log(\"The two vectors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1711,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A vector to copy to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.copy"
					}
				},
				{
					"id": 1712,
					"name": "div",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4477,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1713,
							"name": "div",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides a 4-dimensional vector by another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec4(4, 9, 16, 25);\nvar b = new pc.Vec4(2, 3, 4, 5);\n\na.div(b);\n\n// Outputs [2, 3, 4, 5]\nconsole.log(\"The result of the division is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1714,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to divide the specified vector by."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.div"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.div"
					}
				},
				{
					"id": 1715,
					"name": "div2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4494,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1716,
							"name": "div2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides one 4-dimensional vector by another and writes the result to the specified vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec4(4, 9, 16, 25);\nvar b = new pc.Vec4(2, 3, 4, 5);\nvar r = new pc.Vec4();\n\nr.div2(a, b);\n// Outputs [2, 3, 4, 5]\n\nconsole.log(\"The result of the division is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1717,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The dividend vector (the vector being divided)."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								},
								{
									"id": 1718,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The divisor vector (the vector dividing the dividend)."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.div2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.div2"
					}
				},
				{
					"id": 1719,
					"name": "divScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4508,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1720,
							"name": "divScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides each element of a vector by a number.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec4(3, 6, 9, 12);\n\nvec.divScalar(3);\n\n// Outputs [1, 2, 3, 4]\nconsole.log(\"The result of the division is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1721,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to divide by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.divScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.divScalar"
					}
				},
				{
					"id": 1722,
					"name": "dot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4521,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1723,
							"name": "dot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a dot product operation performed on the two specified 4-dimensional\nvectors.",
								"returns": "The result of the dot product operation.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v1 = new pc.Vec4(5, 10, 20, 40);\nvar v2 = new pc.Vec4(10, 20, 40, 80);\nvar v1dotv2 = v1.dot(v2);\nconsole.log(\"The result of the dot product is: \" + v1dotv2);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1724,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second 4-dimensional vector operand of the dot product."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.dot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.dot"
					}
				},
				{
					"id": 1725,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4532,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1726,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Reports whether two vectors are equal.",
								"returns": "True if the vectors are equal and false otherwise.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec4(1, 2, 3, 4);\nvar b = new pc.Vec4(5, 6, 7, 8);\nconsole.log(\"The two vectors are \" + (a.equals(b) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1727,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to compare to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.equals"
					}
				},
				{
					"id": 1749,
					"name": "floor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4639,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1750,
							"name": "floor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is set to the largest integer less than or equal to its value.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.floor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.floor"
					}
				},
				{
					"id": 1728,
					"name": "length",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4543,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1729,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the magnitude of the specified 4-dimensional vector.",
								"returns": "The magnitude of the specified 4-dimensional vector.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec4(3, 4, 0, 0);\nvar len = vec.length();\n// Outputs 5\nconsole.log(\"The length of the vector is: \" + len);\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.length"
					}
				},
				{
					"id": 1730,
					"name": "lengthSq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4554,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1731,
							"name": "lengthSq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the magnitude squared of the specified 4-dimensional vector.",
								"returns": "The magnitude of the specified 4-dimensional vector.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec4(3, 4, 0);\nvar len = vec.lengthSq();\n// Outputs 25\nconsole.log(\"The length squared of the vector is: \" + len);\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.lengthSq"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.lengthSq"
					}
				},
				{
					"id": 1732,
					"name": "lerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4573,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1733,
							"name": "lerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a linear interpolation between two specified 4-dimensional vectors.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec4(0, 0, 0, 0);\nvar b = new pc.Vec4(10, 10, 10, 10);\nvar r = new pc.Vec4();\n\nr.lerp(a, b, 0);   // r is equal to a\nr.lerp(a, b, 0.5); // r is 5, 5, 5, 5\nr.lerp(a, b, 1);   // r is equal to b\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1734,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 4-dimensional to interpolate from."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								},
								{
									"id": 1735,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 4-dimensional to interpolate to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								},
								{
									"id": 1736,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value controlling the point of interpolation. Between 0 and 1,\nthe linear interpolant will occur on a straight line between lhs and rhs. Outside of this\nrange, the linear interpolant will occur on a ray extrapolated from this line."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.lerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.lerp"
					}
				},
				{
					"id": 1758,
					"name": "max",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4665,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1759,
							"name": "max",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is assigned a value from rhs parameter if it is larger.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 1760,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 4-dimensional vector used as the source of elements to compare to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.max"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.max"
					}
				},
				{
					"id": 1755,
					"name": "min",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4658,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1756,
							"name": "min",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is assigned a value from rhs parameter if it is smaller.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 1757,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 4-dimensional vector used as the source of elements to compare to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.min"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.min"
					}
				},
				{
					"id": 1737,
					"name": "mul",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4588,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1738,
							"name": "mul",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Multiplies a 4-dimensional vector to another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec4(2, 3, 4, 5);\nvar b = new pc.Vec4(4, 5, 6, 7);\n\na.mul(b);\n\n// Outputs 8, 15, 24, 35\nconsole.log(\"The result of the multiplication is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1739,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 4-dimensional vector used as the second multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.mul"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.mul"
					}
				},
				{
					"id": 1740,
					"name": "mul2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4605,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1741,
							"name": "mul2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of multiplying the specified 4-dimensional vectors together.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec4(2, 3, 4, 5);\nvar b = new pc.Vec4(4, 5, 6, 7);\nvar r = new pc.Vec4();\n\nr.mul2(a, b);\n\n// Outputs 8, 15, 24, 35\nconsole.log(\"The result of the multiplication is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1742,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 4-dimensional vector used as the first multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								},
								{
									"id": 1743,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 4-dimensional vector used as the second multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.mul2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.mul2"
					}
				},
				{
					"id": 1744,
					"name": "mulScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4619,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1745,
							"name": "mulScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Multiplies each element of a vector by a number.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec4(3, 6, 9, 12);\n\nvec.mulScalar(3);\n\n// Outputs [9, 18, 27, 36]\nconsole.log(\"The result of the multiplication is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1746,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to multiply by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.mulScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.mulScalar"
					}
				},
				{
					"id": 1747,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4633,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1748,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns this 4-dimensional vector converted to a unit vector in place. If the vector has a\nlength of zero, the vector's elements will be set to zero.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec4(25, 0, 0, 0);\n\nv.normalize();\n\n// Outputs 1, 0, 0, 0\nconsole.log(\"The result of the vector normalization is: \" + v.toString());\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.normalize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.normalize"
					}
				},
				{
					"id": 1753,
					"name": "round",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4651,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1754,
							"name": "round",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is rounded up or down to the nearest integer.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.round"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.round"
					}
				},
				{
					"id": 1761,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4681,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1762,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the specified 4-dimensional vector to the supplied numerical values.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec4();\nv.set(5, 10, 20, 40);\n\n// Outputs 5, 10, 20, 40\nconsole.log(\"The result of the vector set is: \" + v.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1763,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the first component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1764,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the second component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1765,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the third component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1766,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the fourth component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.set"
					}
				},
				{
					"id": 1767,
					"name": "sub",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4696,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1768,
							"name": "sub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts a 4-dimensional vector from another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec4(10, 10, 10, 10);\nvar b = new pc.Vec4(20, 20, 20, 20);\n\na.sub(b);\n\n// Outputs [-10, -10, -10, -10]\nconsole.log(\"The result of the subtraction is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1769,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to add to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.sub"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.sub"
					}
				},
				{
					"id": 1770,
					"name": "sub2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4713,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1771,
							"name": "sub2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts two 4-dimensional vectors from one another and returns the result.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec4(10, 10, 10, 10);\nvar b = new pc.Vec4(20, 20, 20, 20);\nvar r = new pc.Vec4();\n\nr.sub2(a, b);\n\n// Outputs [-10, -10, -10, -10]\nconsole.log(\"The result of the subtraction is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1772,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The first vector operand for the subtraction."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								},
								{
									"id": 1773,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second vector operand for the subtraction."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.sub2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.sub2"
					}
				},
				{
					"id": 1774,
					"name": "subScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4727,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1775,
							"name": "subScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts a number from each element of a vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec4(3, 4, 5, 6);\n\nvec.subScalar(2);\n\n// Outputs [1, 2, 3, 4]\nconsole.log(\"The result of the subtraction is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1776,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to subtract."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.subScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.subScalar"
					}
				},
				{
					"id": 1777,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4737,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1778,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Converts the vector to string form.",
								"returns": "The vector in string form.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec4(20, 10, 5, 0);\n// Outputs [20, 10, 5, 0]\nconsole.log(v.toString());\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1684
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1690,
						1696,
						1693,
						1694,
						1695,
						1683,
						1682
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						1691
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1697,
						1700,
						1704,
						1751,
						1707,
						1709,
						1712,
						1715,
						1719,
						1722,
						1725,
						1749,
						1728,
						1730,
						1732,
						1758,
						1755,
						1737,
						1740,
						1744,
						1747,
						1753,
						1761,
						1767,
						1770,
						1774,
						1777
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/vec4.ts",
					"line": 14,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Vec4",
					"package": "playcanvas",
					"name": "Vec4"
				}
			]
		},
		{
			"id": 1022,
			"name": "intersect",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "相交信息"
			},
			"children": [
				{
					"id": 1024,
					"name": "distance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/meshInstance.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1023,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/meshInstance.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1026,
					"name": "localPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/meshInstance.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1029,
					"name": "meshInstance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/meshInstance.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "MeshInstance",
						"package": "playcanvas",
						"name": "MeshInstance"
					}
				},
				{
					"id": 1027,
					"name": "normal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/meshInstance.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1025,
					"name": "point",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/meshInstance.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1028,
					"name": "vertices",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extension/extendClasses/meshInstance.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							{
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							{
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1024,
						1023,
						1026,
						1029,
						1027,
						1025,
						1028
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extension/extendClasses/meshInstance.ts",
					"line": 18,
					"character": 17
				}
			]
		},
		{
			"id": 1852,
			"name": "AttributeParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/create-script-decorator.ts",
					"line": 56,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1853,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1859,
							"name": "array",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1865,
							"name": "assetType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1867,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1866,
							"name": "curves",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1855,
							"name": "default",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1857,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1868,
							"name": "enum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 71,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						},
						{
							"id": 1862,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 65,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1861,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1858,
							"name": "placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 61,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 1863,
							"name": "precision",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1860,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1864,
							"name": "step",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1856,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1854,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/create-script-decorator.ts",
									"line": 57,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "boolean"
									},
									{
										"type": "literal",
										"value": "number"
									},
									{
										"type": "literal",
										"value": "string"
									},
									{
										"type": "literal",
										"value": "json"
									},
									{
										"type": "literal",
										"value": "asset"
									},
									{
										"type": "literal",
										"value": "entity"
									},
									{
										"type": "literal",
										"value": "rgb"
									},
									{
										"type": "literal",
										"value": "rgba"
									},
									{
										"type": "literal",
										"value": "vec2"
									},
									{
										"type": "literal",
										"value": "vec3"
									},
									{
										"type": "literal",
										"value": "vec4"
									},
									{
										"type": "literal",
										"value": "curve"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1859,
								1865,
								1867,
								1866,
								1855,
								1857,
								1868,
								1862,
								1861,
								1858,
								1863,
								1860,
								1864,
								1856,
								1854
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/create-script-decorator.ts",
							"line": 56,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 1848,
			"name": "attr",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/create-script-decorator.ts",
					"line": 44,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1849,
					"name": "attr",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1850,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1851,
							"name": "params",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1852,
								"name": "AttributeParams"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1838,
			"name": "cast",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/cast.ts",
					"line": 14,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1839,
					"name": "cast",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "转换类型",
						"returns": "转换类型后的对象\n"
					},
					"typeParameter": [
						{
							"id": 1840,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1841,
							"name": "obj",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "待转换对象"
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1840,
						"name": "T"
					}
				}
			]
		},
		{
			"id": 1842,
			"name": "createScript",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/create-script-decorator.ts",
					"line": 11,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1843,
					"name": "createScript",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Class decorator allowing the use of ES6 classes\nto define and create PlayCanvas script types.\nCaveat is: There is a slight iterative runtime overhead to this. (unlike Haxe which can utilize precompiled-macros)\nThe cool thing is that your script (if it uses properties) has an additional property called `attributesData` that can facilitate offboard property reflection/runtime-component\nproperty GUI creation."
					},
					"parameters": [
						{
							"id": 1844,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1845,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1846,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1847,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1921,
			"name": "extend",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"decorates": [
				{
					"type": "reference",
					"id": 1,
					"name": "CameraComponent_EX"
				},
				{
					"type": "reference",
					"id": 229,
					"name": "Color_EX"
				},
				{
					"type": "reference",
					"id": 277,
					"name": "Curve_EX"
				},
				{
					"type": "reference",
					"id": 317,
					"name": "ElementComponent_EX"
				},
				{
					"type": "reference",
					"id": 775,
					"name": "Entity_EX"
				},
				{
					"type": "reference",
					"id": 1030,
					"name": "MeshInstance_EX"
				},
				{
					"type": "reference",
					"id": 1170,
					"name": "Quat_EX"
				},
				{
					"type": "reference",
					"id": 1248,
					"name": "Ray_EX"
				},
				{
					"type": "reference",
					"id": 1266,
					"name": "Texture_EX"
				},
				{
					"type": "reference",
					"id": 1444,
					"name": "Vec2_EX"
				},
				{
					"type": "reference",
					"id": 1550,
					"name": "Vec3_EX"
				},
				{
					"type": "reference",
					"id": 1681,
					"name": "Vec4_EX"
				},
				{
					"type": "reference",
					"id": 1779,
					"name": "PathCurve"
				}
			],
			"sources": [
				{
					"fileName": "src/lib/extend-decorator.ts",
					"line": 23,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1922,
					"name": "extend",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1923,
							"name": "extendClass",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1924,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 1925,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1926,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1927,
			"name": "newUtil",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"decorates": [
				{
					"type": "reference",
					"id": 1828,
					"name": "DebugLine"
				}
			],
			"sources": [
				{
					"fileName": "src/lib/extend-decorator.ts",
					"line": 91,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1928,
					"name": "newUtil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1929,
							"name": "target",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1930,
			"name": "use",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/toolHelper.ts",
					"line": 29,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1931,
					"name": "use",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "使用工具（创建一个工具实例）",
						"returns": "工具实例\n"
					},
					"typeParameter": [
						{
							"id": 1932,
							"name": "ToolType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1948,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1933,
										"name": "Options"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"id": 1932,
										"name": "ToolType"
									}
								],
								"name": "Tool"
							}
						},
						{
							"id": 1933,
							"name": "Options",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1934,
							"name": "tool",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "工具类"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1935,
									"name": "__type",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"signatures": [
										{
											"id": 1936,
											"name": "new tool",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"parameters": [
												{
													"id": 1937,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 1933,
														"name": "Options"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1932,
												"name": "ToolType"
											}
										}
									]
								}
							}
						},
						{
							"id": 1938,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "工具选项"
							},
							"type": {
								"type": "reference",
								"id": 1933,
								"name": "Options"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1932,
						"name": "ToolType"
					}
				}
			]
		},
		{
			"id": 1939,
			"name": "useGlobal",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/toolHelper.ts",
					"line": 42,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 1940,
					"name": "useGlobal",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "使用全局工具（使用全局工具实例）",
						"returns": "全局工具实例\n"
					},
					"typeParameter": [
						{
							"id": 1941,
							"name": "ToolType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1948,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1942,
										"name": "Options"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"id": 1941,
										"name": "ToolType"
									}
								],
								"name": "Tool"
							}
						},
						{
							"id": 1942,
							"name": "Options",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1943,
							"name": "tool",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "工具类"
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1944,
									"name": "__type",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {},
									"signatures": [
										{
											"id": 1945,
											"name": "new tool",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"parameters": [
												{
													"id": 1946,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"id": 1942,
														"name": "Options"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 1941,
												"name": "ToolType"
											}
										}
									]
								}
							}
						},
						{
							"id": 1947,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "工具选项"
							},
							"type": {
								"type": "reference",
								"id": 1942,
								"name": "Options"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 1941,
						"name": "ToolType"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				1,
				229,
				277,
				1828,
				317,
				775,
				1030,
				1779,
				1170,
				1248,
				1869,
				1266,
				1948,
				1444,
				1550,
				1681
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				1022
			]
		},
		{
			"title": "Type Aliases",
			"kind": 4194304,
			"children": [
				1852
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				1848,
				1838,
				1842,
				1921,
				1927,
				1930,
				1939
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}