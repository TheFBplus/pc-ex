{
	"id": 0,
	"name": "pc-ex",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "CameraComponent_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 6,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29216,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 7,
							"name": "new CameraComponent_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new CameraComponent instance."
									}
								]
							},
							"parameters": [
								{
									"id": 8,
									"name": "system",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ComponentSystem that created this Component."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "CameraComponentSystem",
										"qualifiedName": "CameraComponentSystem",
										"package": "playcanvas"
									}
								},
								{
									"id": 9,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Entity that this Component is attached to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Entity",
										"qualifiedName": "Entity",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "CameraComponent_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.constructor"
					}
				},
				{
					"id": 76,
					"name": "_camera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29293,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Camera",
						"qualifiedName": "Camera",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._camera"
					}
				},
				{
					"id": 78,
					"name": "_disablePostEffectsLayer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29295,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._disablePostEffectsLayer"
					}
				},
				{
					"id": 79,
					"name": "_postEffects",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29296,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "PostEffectQueue",
						"qualifiedName": "PostEffectQueue",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._postEffects"
					}
				},
				{
					"id": 77,
					"name": "_priority",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29294,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._priority"
					}
				},
				{
					"id": 173,
					"name": "aspectRatio",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29463,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.aspectRatio"
					}
				},
				{
					"id": 75,
					"name": "onPostRender",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom function that is called after the camera renders the scene."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29278,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Function",
						"qualifiedName": "Function",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onPostRender"
					}
				},
				{
					"id": 74,
					"name": "onPreRender",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom function that is called before the camera renders the scene."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29272,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Function",
						"qualifiedName": "Function",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onPreRender"
					}
				},
				{
					"id": 17,
					"name": "aspectRatioMode",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29218,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29219,
							"character": 8
						}
					],
					"getSignature": {
						"id": 18,
						"name": "aspectRatioMode",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.aspectRatioMode"
						}
					},
					"setSignature": {
						"id": 19,
						"name": "aspectRatioMode",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 20,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.aspectRatioMode"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.aspectRatioMode"
					}
				},
				{
					"id": 21,
					"name": "calculateProjection",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29221,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29222,
							"character": 8
						}
					],
					"getSignature": {
						"id": 22,
						"name": "calculateProjection",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "CalculateMatrixCallback",
							"qualifiedName": "CalculateMatrixCallback",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.calculateProjection"
						}
					},
					"setSignature": {
						"id": 23,
						"name": "calculateProjection",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 24,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "CalculateMatrixCallback",
									"qualifiedName": "CalculateMatrixCallback",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.calculateProjection"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.calculateProjection"
					}
				},
				{
					"id": 25,
					"name": "calculateTransform",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29224,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29225,
							"character": 8
						}
					],
					"getSignature": {
						"id": 26,
						"name": "calculateTransform",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "CalculateMatrixCallback",
							"qualifiedName": "CalculateMatrixCallback",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.calculateTransform"
						}
					},
					"setSignature": {
						"id": 27,
						"name": "calculateTransform",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 28,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "CalculateMatrixCallback",
									"qualifiedName": "CalculateMatrixCallback",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.calculateTransform"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.calculateTransform"
					}
				},
				{
					"id": 80,
					"name": "camera",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29303,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.camera"
					}
				},
				{
					"id": 29,
					"name": "clearColor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29227,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29228,
							"character": 8
						}
					],
					"getSignature": {
						"id": 30,
						"name": "clearColor",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Color",
							"qualifiedName": "Color",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.clearColor"
						}
					},
					"setSignature": {
						"id": 31,
						"name": "clearColor",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 32,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Color",
									"qualifiedName": "Color",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.clearColor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearColor"
					}
				},
				{
					"id": 82,
					"name": "clearColorBuffer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29309,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29310,
							"character": 8
						}
					],
					"getSignature": {
						"id": 83,
						"name": "clearColorBuffer",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.clearColorBuffer"
						}
					},
					"setSignature": {
						"id": 84,
						"name": "clearColorBuffer",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "If true the camera will clear the color buffer to the color set in clearColor. Defaults to true."
								}
							]
						},
						"parameters": [
							{
								"id": 85,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.clearColorBuffer"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearColorBuffer"
					}
				},
				{
					"id": 86,
					"name": "clearDepthBuffer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29316,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29317,
							"character": 8
						}
					],
					"getSignature": {
						"id": 87,
						"name": "clearDepthBuffer",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.clearDepthBuffer"
						}
					},
					"setSignature": {
						"id": 88,
						"name": "clearDepthBuffer",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "If true the camera will clear the depth buffer. Defaults to true."
								}
							]
						},
						"parameters": [
							{
								"id": 89,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.clearDepthBuffer"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearDepthBuffer"
					}
				},
				{
					"id": 90,
					"name": "clearStencilBuffer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29323,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29324,
							"character": 8
						}
					],
					"getSignature": {
						"id": 91,
						"name": "clearStencilBuffer",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.clearStencilBuffer"
						}
					},
					"setSignature": {
						"id": 92,
						"name": "clearStencilBuffer",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "If true the camera will clear the stencil buffer. Defaults to true."
								}
							]
						},
						"parameters": [
							{
								"id": 93,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.clearStencilBuffer"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearStencilBuffer"
					}
				},
				{
					"id": 33,
					"name": "cullFaces",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29230,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29231,
							"character": 8
						}
					],
					"getSignature": {
						"id": 34,
						"name": "cullFaces",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.cullFaces"
						}
					},
					"setSignature": {
						"id": 35,
						"name": "cullFaces",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 36,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.cullFaces"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.cullFaces"
					}
				},
				{
					"id": 214,
					"name": "data",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7573,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.data"
					}
				},
				{
					"id": 94,
					"name": "disablePostEffectsLayer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29333,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29334,
							"character": 8
						}
					],
					"getSignature": {
						"id": 95,
						"name": "disablePostEffectsLayer",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.disablePostEffectsLayer"
						}
					},
					"setSignature": {
						"id": 96,
						"name": "disablePostEffectsLayer",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Layer ID of a layer on which the postprocessing of the camera stops being applied to.\nDefaults to LAYERID_UI, which causes post processing to not be applied to UI layer and any\nfollowing layers for the camera. Set to undefined for post-processing to be applied to all\nlayers of the camera."
								}
							]
						},
						"parameters": [
							{
								"id": 97,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.disablePostEffectsLayer"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.disablePostEffectsLayer"
					}
				},
				{
					"id": 194,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7544,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7545,
							"character": 8
						}
					],
					"getSignature": {
						"id": 195,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.enabled"
						}
					},
					"setSignature": {
						"id": 196,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 197,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.enabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.enabled"
					}
				},
				{
					"id": 37,
					"name": "farClip",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29233,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29234,
							"character": 8
						}
					],
					"getSignature": {
						"id": 38,
						"name": "farClip",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.farClip"
						}
					},
					"setSignature": {
						"id": 39,
						"name": "farClip",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 40,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.farClip"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.farClip"
					}
				},
				{
					"id": 41,
					"name": "flipFaces",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29236,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29237,
							"character": 8
						}
					],
					"getSignature": {
						"id": 42,
						"name": "flipFaces",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.flipFaces"
						}
					},
					"setSignature": {
						"id": 43,
						"name": "flipFaces",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 44,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.flipFaces"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.flipFaces"
					}
				},
				{
					"id": 45,
					"name": "fov",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29239,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29240,
							"character": 8
						}
					],
					"getSignature": {
						"id": 46,
						"name": "fov",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.fov"
						}
					},
					"setSignature": {
						"id": 47,
						"name": "fov",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 48,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.fov"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.fov"
					}
				},
				{
					"id": 111,
					"name": "frustum",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29357,
							"character": 8
						}
					],
					"getSignature": {
						"id": 112,
						"name": "frustum",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Queries the camera's frustum shape."
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Frustum",
							"qualifiedName": "Frustum",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.frustum"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.frustum"
					}
				},
				{
					"id": 49,
					"name": "frustumCulling",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29242,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29243,
							"character": 8
						}
					],
					"getSignature": {
						"id": 50,
						"name": "frustumCulling",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.frustumCulling"
						}
					},
					"setSignature": {
						"id": 51,
						"name": "frustumCulling",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 52,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.frustumCulling"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.frustumCulling"
					}
				},
				{
					"id": 53,
					"name": "horizontalFov",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29245,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29246,
							"character": 8
						}
					],
					"getSignature": {
						"id": 54,
						"name": "horizontalFov",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.horizontalFov"
						}
					},
					"setSignature": {
						"id": 55,
						"name": "horizontalFov",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 56,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.horizontalFov"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.horizontalFov"
					}
				},
				{
					"id": 113,
					"name": "layers",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29365,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29366,
							"character": 8
						}
					],
					"getSignature": {
						"id": 114,
						"name": "layers",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.layers"
						}
					},
					"setSignature": {
						"id": 115,
						"name": "layers",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "An array of layer IDs ("
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Layer#id"
								},
								{
									"kind": "text",
									"text": ") to which this camera should belong. Don't push,\npop, splice or modify this array, if you want to change it, set a new one instead. Defaults\nto [LAYERID_WORLD, LAYERID_DEPTH, LAYERID_SKYBOX, LAYERID_UI, LAYERID_IMMEDIATE]."
								}
							]
						},
						"parameters": [
							{
								"id": 116,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.layers"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.layers"
					}
				},
				{
					"id": 57,
					"name": "nearClip",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29248,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29249,
							"character": 8
						}
					],
					"getSignature": {
						"id": 58,
						"name": "nearClip",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.nearClip"
						}
					},
					"setSignature": {
						"id": 59,
						"name": "nearClip",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 60,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.nearClip"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.nearClip"
					}
				},
				{
					"id": 61,
					"name": "orthoHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29251,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29252,
							"character": 8
						}
					],
					"getSignature": {
						"id": 62,
						"name": "orthoHeight",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.orthoHeight"
						}
					},
					"setSignature": {
						"id": 63,
						"name": "orthoHeight",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 64,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.orthoHeight"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.orthoHeight"
					}
				},
				{
					"id": 119,
					"name": "postEffects",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29373,
							"character": 8
						}
					],
					"getSignature": {
						"id": 120,
						"name": "postEffects",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "PostEffectQueue",
							"qualifiedName": "PostEffectQueue",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.postEffects"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.postEffects"
					}
				},
				{
					"id": 117,
					"name": "postEffectsEnabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29372,
							"character": 8
						}
					],
					"getSignature": {
						"id": 118,
						"name": "postEffectsEnabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The post effects queue for this camera. Use this to add or remove post effects from the camera."
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "PostEffectQueue",
							"qualifiedName": "PostEffectQueue",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.postEffectsEnabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.postEffectsEnabled"
					}
				},
				{
					"id": 121,
					"name": "priority",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29380,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29381,
							"character": 8
						}
					],
					"getSignature": {
						"id": 122,
						"name": "priority",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.priority"
						}
					},
					"setSignature": {
						"id": 123,
						"name": "priority",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Controls the order in which cameras are rendered. Cameras with smaller values for priority\nare rendered first. Defaults to 0."
								}
							]
						},
						"parameters": [
							{
								"id": 124,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.priority"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.priority"
					}
				},
				{
					"id": 65,
					"name": "projection",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29254,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29255,
							"character": 8
						}
					],
					"getSignature": {
						"id": 66,
						"name": "projection",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.projection"
						}
					},
					"setSignature": {
						"id": 67,
						"name": "projection",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 68,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.projection"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.projection"
					}
				},
				{
					"id": 125,
					"name": "projectionMatrix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29387,
							"character": 8
						}
					],
					"getSignature": {
						"id": 126,
						"name": "projectionMatrix",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Queries the camera's projection matrix."
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Mat4",
							"qualifiedName": "Mat4",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.projectionMatrix"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.projectionMatrix"
					}
				},
				{
					"id": 127,
					"name": "rect",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29394,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29395,
							"character": 8
						}
					],
					"getSignature": {
						"id": 128,
						"name": "rect",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Vec4",
							"qualifiedName": "Vec4",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.rect"
						}
					},
					"setSignature": {
						"id": 129,
						"name": "rect",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Controls where on the screen the camera will be rendered in normalized screen coordinates.\nDefaults to [0, 0, 1, 1]."
								}
							]
						},
						"parameters": [
							{
								"id": 130,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Vec4",
									"qualifiedName": "Vec4",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.rect"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.rect"
					}
				},
				{
					"id": 104,
					"name": "renderSceneColorMap",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29343,
							"character": 8
						}
					],
					"getSignature": {
						"id": 105,
						"name": "renderSceneColorMap",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.renderSceneColorMap"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.renderSceneColorMap"
					}
				},
				{
					"id": 109,
					"name": "renderSceneDepthMap",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29351,
							"character": 8
						}
					],
					"getSignature": {
						"id": 110,
						"name": "renderSceneDepthMap",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.renderSceneDepthMap"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.renderSceneDepthMap"
					}
				},
				{
					"id": 131,
					"name": "renderTarget",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29402,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29403,
							"character": 8
						}
					],
					"getSignature": {
						"id": 132,
						"name": "renderTarget",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.renderTarget"
						}
					},
					"setSignature": {
						"id": 133,
						"name": "renderTarget",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Render target to which rendering of the cameras is performed. If not set, it will render\nsimply to the screen."
								}
							]
						},
						"parameters": [
							{
								"id": 134,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.renderTarget"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.renderTarget"
					}
				},
				{
					"id": 69,
					"name": "scissorRect",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29257,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29258,
							"character": 8
						}
					],
					"getSignature": {
						"id": 70,
						"name": "scissorRect",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Vec4",
							"qualifiedName": "Vec4",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.scissorRect"
						}
					},
					"setSignature": {
						"id": 71,
						"name": "scissorRect",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 72,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Vec4",
									"qualifiedName": "Vec4",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.scissorRect"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.scissorRect"
					}
				},
				{
					"id": 135,
					"name": "viewMatrix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29409,
							"character": 8
						}
					],
					"getSignature": {
						"id": 136,
						"name": "viewMatrix",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Queries the camera's view matrix."
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Mat4",
							"qualifiedName": "Mat4",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.CameraComponent.viewMatrix"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.viewMatrix"
					}
				},
				{
					"id": 98,
					"name": "_enableDepthLayer",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29335,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 99,
							"name": "_enableDepthLayer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 100,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent._enableDepthLayer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._enableDepthLayer"
					}
				},
				{
					"id": 151,
					"name": "addCameraToLayers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29442,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 152,
							"name": "addCameraToLayers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.addCameraToLayers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.addCameraToLayers"
					}
				},
				{
					"id": 200,
					"name": "buildAccessors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7561,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 201,
							"name": "buildAccessors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 202,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.buildAccessors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.buildAccessors"
					}
				},
				{
					"id": 167,
					"name": "calculateAspectRatio",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29454,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 168,
							"name": "calculateAspectRatio",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calculates aspect ratio value for a given render target."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The aspect ratio of the render target (or backbuffer)."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 169,
									"name": "rt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional render target. If unspecified, the backbuffer is used."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "RenderTarget",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateAspectRatio"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.calculateAspectRatio"
					}
				},
				{
					"id": 191,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29544,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 192,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 193,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.copy"
					}
				},
				{
					"id": 137,
					"name": "dirtyLayerCompositionCameras",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29410,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 138,
							"name": "dirtyLayerCompositionCameras",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.dirtyLayerCompositionCameras"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.dirtyLayerCompositionCameras"
					}
				},
				{
					"id": 188,
					"name": "endXr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29543,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 189,
							"name": "endXr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attempt to end XR session of this camera."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// On an entity with a camera component\nthis.entity.camera.endXr(function (err) {\n    // not anymore in XR\n});\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 190,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional callback function called once session is\nended. The callback has one argument Error - it is null if successfully ended XR session."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "XrErrorCallback",
										"qualifiedName": "XrErrorCallback",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.endXr"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.endXr"
					}
				},
				{
					"id": 226,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 227,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fire an event, all additional arguments are passed on to the event listener."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.fire('test', 'This is the message');\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 228,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of event to fire."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 229,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "First argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 230,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Second argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 231,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Third argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 232,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fourth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 233,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fifth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 234,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sixth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 235,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Seventh argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 236,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Eighth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.fire"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.fire"
					}
				},
				{
					"id": 10,
					"name": "follow",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/cameraComponent.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 11,
							"name": "follow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "跟随另一个相机（与另一相机的几何信息保持相同）"
									}
								]
							},
							"parameters": [
								{
									"id": 12,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "要跟随的相机"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "CameraComponent",
										"qualifiedName": "CameraComponent",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 242,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 130,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Test if there are any handlers bound to an event name."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the object has handlers bound to the specified event name."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.on('test', function () { }); // bind an event to 'test'\nobj.hasEvent('test'); // returns true\nobj.hasEvent('hello'); // returns false\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 244,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event to test."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.hasEvent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.hasEvent"
					}
				},
				{
					"id": 221,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Detach an event handler from an event. If callback is not provided then all callbacks are\nunbound from the event, if scope is not provided then all events with the callback will be\nunbound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar handler = function () {\n};\nobj.on('test', handler);\n\nobj.off(); // Removes all events\nobj.off('test'); // Removes all events called 'test'\nobj.off('test', handler); // Removes all handler functions, called 'test'\nobj.off('test', handler, this); // Removes all handler functions, called 'test' with scope this\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 223,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to unbind."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 224,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to be unbound."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 225,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scope that was used as the this when the event is fired."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.off"
					}
				},
				{
					"id": 216,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 217,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attach an event handler to an event."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.on('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 218,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to bind the callback to."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 219,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 220,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object to use as 'this' when the event is fired, defaults to\ncurrent this."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.on"
					}
				},
				{
					"id": 149,
					"name": "onAppPrerender",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29441,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "onAppPrerender",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onAppPrerender"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onAppPrerender"
					}
				},
				{
					"id": 210,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7564,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 211,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onDisable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onDisable"
					}
				},
				{
					"id": 208,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7563,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 209,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onEnable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onEnable"
					}
				},
				{
					"id": 159,
					"name": "onLayerAdded",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29445,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 160,
							"name": "onLayerAdded",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 161,
									"name": "layer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onLayerAdded"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onLayerAdded"
					}
				},
				{
					"id": 162,
					"name": "onLayerRemoved",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29446,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 163,
							"name": "onLayerRemoved",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 164,
									"name": "layer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onLayerRemoved"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onLayerRemoved"
					}
				},
				{
					"id": 155,
					"name": "onLayersChanged",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29444,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 156,
							"name": "onLayersChanged",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 157,
									"name": "oldComp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 158,
									"name": "newComp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onLayersChanged"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onLayersChanged"
					}
				},
				{
					"id": 212,
					"name": "onPostStateChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7565,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 213,
							"name": "onPostStateChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onPostStateChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onPostStateChange"
					}
				},
				{
					"id": 165,
					"name": "onRemove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29447,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 166,
							"name": "onRemove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onRemove"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onRemove"
					}
				},
				{
					"id": 203,
					"name": "onSetEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7562,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 204,
							"name": "onSetEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 205,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 206,
									"name": "oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 207,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onSetEnabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onSetEnabled"
					}
				},
				{
					"id": 237,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 119,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 238,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attach an event handler to an event. This handler will be removed after being fired once."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.once('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\nobj.fire('test', 1, 2); // not going to get handled\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 239,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to bind the callback to."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 240,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 241,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object to use as 'this' when the event is fired, defaults to\ncurrent this."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.once"
					}
				},
				{
					"id": 13,
					"name": "raycastMeshInstances",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/cameraComponent.ts",
							"line": 46,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 14,
							"name": "raycastMeshInstances",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "从此相机发射射线，检测一系列mesh的交点"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "交点集合"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15,
									"name": "ray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "要检测的射线"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Ray",
										"qualifiedName": "Ray",
										"package": "playcanvas"
									}
								},
								{
									"id": 16,
									"name": "meshInstances",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "要检测的meshInstance集合"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "MeshInstance",
											"qualifiedName": "MeshInstance",
											"package": "playcanvas"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "intersect"
								}
							}
						}
					]
				},
				{
					"id": 153,
					"name": "removeCameraFromLayers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29443,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 154,
							"name": "removeCameraFromLayers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.removeCameraFromLayers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.removeCameraFromLayers"
					}
				},
				{
					"id": 101,
					"name": "requestSceneColorMap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29342,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 102,
							"name": "requestSceneColorMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Request the scene to generate a texture containing the scene color map. Note that this call\nis accummulative, and for each enable request, a disable request need to be called."
									}
								]
							},
							"parameters": [
								{
									"id": 103,
									"name": "enabled",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "True to request the generation, false to disable it."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.requestSceneColorMap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.requestSceneColorMap"
					}
				},
				{
					"id": 106,
					"name": "requestSceneDepthMap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29350,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 107,
							"name": "requestSceneDepthMap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Request the scene to generate a texture containing the scene depth map. Note that this call\nis accummulative, and for each enable request, a disable request need to be called."
									}
								]
							},
							"parameters": [
								{
									"id": 108,
									"name": "enabled",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "True to request the generation, false to disable it."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.requestSceneDepthMap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.requestSceneDepthMap"
					}
				},
				{
					"id": 139,
					"name": "screenToWorld",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29432,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 140,
							"name": "screenToWorld",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert a point from 2D screen space to 3D world space."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Get the start and end points of a 3D ray fired from a screen click position\nvar start = entity.camera.screenToWorld(clickX, clickY, entity.camera.nearClip);\nvar end = entity.camera.screenToWorld(clickX, clickY, entity.camera.farClip);\n\n// Use the ray coordinates to perform a raycast\napp.systems.rigidbody.raycastFirst(start, end, function (result) {\n    console.log(\"Entity \" + result.entity.name + \" was selected\");\n});\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The world space coordinate."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 141,
									"name": "screenx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "X coordinate on PlayCanvas' canvas element. Should be in the range\n0 to "
											},
											{
												"kind": "code",
												"text": "`canvas.offsetWidth`"
											},
											{
												"kind": "text",
												"text": " of the application's canvas element."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 142,
									"name": "screeny",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Y coordinate on PlayCanvas' canvas element. Should be in the range\n0 to "
											},
											{
												"kind": "code",
												"text": "`canvas.offsetHeight`"
											},
											{
												"kind": "text",
												"text": " of the application's canvas element."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 143,
									"name": "cameraz",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The distance from the camera in world space to create the new\npoint."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 144,
									"name": "worldCoord",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3D vector to receive world coordinate result."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.screenToWorld"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.screenToWorld"
					}
				},
				{
					"id": 174,
					"name": "startXr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29522,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 175,
							"name": "startXr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attempt to start XR session with this camera."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// On an entity with a camera component\nthis.entity.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n    callback: function (err) {\n        if (err) {\n            // failed to start XR session\n        } else {\n            // in XR\n        }\n    }\n});\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 176,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of session. Can be one of the following:\n\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "XRTYPE_INLINE"
											},
											{
												"kind": "text",
												"text": ": Inline - always available type of session. It has limited feature\navailability and is rendered into HTML element.\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "XRTYPE_VR"
											},
											{
												"kind": "text",
												"text": ": Immersive VR - session that provides exclusive access to the VR device\nwith the best available tracking features.\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "XRTYPE_AR"
											},
											{
												"kind": "text",
												"text": ": Immersive AR - session that provides exclusive access to the VR/AR\ndevice that is intended to be blended with the real-world environment."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 177,
									"name": "spaceType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reference space type. Can be one of the following:\n\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "XRSPACE_VIEWER"
											},
											{
												"kind": "text",
												"text": ": Viewer - always supported space with some basic tracking\ncapabilities.\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "XRSPACE_LOCAL"
											},
											{
												"kind": "text",
												"text": ": Local - represents a tracking space with a native origin near the\nviewer at the time of creation. It is meant for seated or basic local XR sessions.\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "XRSPACE_LOCALFLOOR"
											},
											{
												"kind": "text",
												"text": ": Local Floor - represents a tracking space with a native origin\nat the floor in a safe position for the user to stand. The y-axis equals 0 at floor level.\nFloor level value might be estimated by the underlying platform. It is meant for seated or\nbasic local XR sessions.\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "XRSPACE_BOUNDEDFLOOR"
											},
											{
												"kind": "text",
												"text": ": Bounded Floor - represents a tracking space with its native\norigin at the floor, where the user is expected to move within a pre-established boundary.\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "XRSPACE_UNBOUNDED"
											},
											{
												"kind": "text",
												"text": ": Unbounded - represents a tracking space where the user is\nexpected to move freely around their environment, potentially long distances from their\nstarting point."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 178,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object with options for XR session initialization."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 179,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 183,
													"name": "callback",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Optional callback function called once the\nsession is started. The callback has one argument Error - it is null if the XR session\nstarted successfully."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 29526,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"name": "XrErrorCallback",
														"qualifiedName": "XrErrorCallback",
														"package": "playcanvas"
													}
												},
												{
													"id": 184,
													"name": "depthSensing",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Optional object with depth sensing parameters to\nattempt to enable "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "XrDepthSensing"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 29527,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 185,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 187,
																	"name": "dataFormatPreference",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
																			"line": 29529,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 186,
																	"name": "usagePreference",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
																			"line": 29528,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		187,
																		186
																	]
																}
															],
															"sources": [
																{
																	"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
																	"line": 29527,
																	"character": 23
																}
															]
														}
													}
												},
												{
													"id": 181,
													"name": "imageTracking",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Set to true to attempt to enable "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "XrImageTracking"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 29524,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 180,
													"name": "optionalFeatures",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Optional features for XRSession start. It is\nused for getting access to additional WebXR spec extensions."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 29523,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 182,
													"name": "planeDetection",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Set to true to attempt to enable "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "XrPlaneDetection"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 29525,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														183,
														184,
														181,
														180,
														182
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
													"line": 29522,
													"character": 55
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.startXr"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.startXr"
					}
				},
				{
					"id": 145,
					"name": "worldToScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 29440,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 146,
							"name": "worldToScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convert a point from 3D world space to 2D screen space."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The screen space coordinate."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 147,
									"name": "worldCoord",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The world space coordinate."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 148,
									"name": "screenCoord",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3D vector to receive screen coordinate result."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.worldToScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.worldToScreen"
					}
				},
				{
					"id": 2,
					"name": "_buildAccessors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7535,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "_buildAccessors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 4,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 5,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent._buildAccessors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._buildAccessors"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						6
					]
				},
				{
					"title": "Properties",
					"children": [
						76,
						78,
						79,
						77,
						173,
						75,
						74
					]
				},
				{
					"title": "Accessors",
					"children": [
						17,
						21,
						25,
						80,
						29,
						82,
						86,
						90,
						33,
						214,
						94,
						194,
						37,
						41,
						45,
						111,
						49,
						53,
						113,
						57,
						61,
						119,
						117,
						121,
						65,
						125,
						127,
						104,
						109,
						131,
						69,
						135
					]
				},
				{
					"title": "Methods",
					"children": [
						98,
						151,
						200,
						167,
						191,
						137,
						188,
						226,
						10,
						242,
						221,
						216,
						149,
						210,
						208,
						159,
						162,
						155,
						212,
						165,
						203,
						237,
						13,
						153,
						101,
						106,
						139,
						174,
						145,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/cameraComponent.ts",
					"line": 17,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "CameraComponent",
					"qualifiedName": "CameraComponent",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 245,
			"name": "Color_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 255,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8608,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 256,
							"name": "new Color_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new Color object."
									}
								]
							},
							"parameters": [
								{
									"id": 257,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value of the red component (0-1). Defaults to 0. If r is\nan array of length 3 or 4, the array will be used to populate all components."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 258,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value of the green component (0-1). Defaults to 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 259,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value of the blue component (0-1). Defaults to 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 260,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value of the alpha component (0-1). Defaults to 1."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 245,
								"name": "Color_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.constructor"
					}
				},
				{
					"id": 261,
					"name": "_shaderData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/color.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Float32Array",
						"qualifiedName": "Float32Array",
						"package": "typescript"
					}
				},
				{
					"id": 267,
					"name": "a",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The alpha component of the color."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8632,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.a"
					}
				},
				{
					"id": 266,
					"name": "b",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The blue component of the color."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8626,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.b"
					}
				},
				{
					"id": 265,
					"name": "g",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The green component of the color."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8620,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.g"
					}
				},
				{
					"id": 264,
					"name": "r",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The red component of the color."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8614,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.r"
					}
				},
				{
					"id": 246,
					"name": "BLACK",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant color set to black [0, 0, 0, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8542,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.BLACK"
					}
				},
				{
					"id": 247,
					"name": "BLUE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant color set to blue [0, 0, 1, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8549,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.BLUE"
					}
				},
				{
					"id": 248,
					"name": "CYAN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant color set to cyan [0, 1, 1, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8556,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.CYAN"
					}
				},
				{
					"id": 249,
					"name": "GRAY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant color set to gray [0.5, 0.5, 0.5, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8563,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.GRAY"
					}
				},
				{
					"id": 250,
					"name": "GREEN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant color set to green [0, 1, 0, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8570,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.GREEN"
					}
				},
				{
					"id": 251,
					"name": "MAGENTA",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant color set to magenta [1, 0, 1, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8577,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.MAGENTA"
					}
				},
				{
					"id": 252,
					"name": "RED",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant color set to red [1, 0, 0, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8584,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.RED"
					}
				},
				{
					"id": 253,
					"name": "WHITE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant color set to white [1, 1, 1, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8591,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.WHITE"
					}
				},
				{
					"id": 254,
					"name": "YELLOW",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant color set to yellow [1, 1, 0, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8598,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.YELLOW"
					}
				},
				{
					"id": 262,
					"name": "shaderData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/color.ts",
							"line": 21,
							"character": 8
						}
					],
					"getSignature": {
						"id": 263,
						"name": "shaderData",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "用于传入shader的数据"
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Float32Array",
							"qualifiedName": "Float32Array",
							"package": "typescript"
						}
					}
				},
				{
					"id": 268,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8638,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 269,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a clone of the specified color."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A duplicate color object."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Color",
								"qualifiedName": "Color",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.clone"
					}
				},
				{
					"id": 270,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8652,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 271,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Copies the contents of a source color to a destination color."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar src = new pc.Color(1, 0, 0, 1);\nvar dst = new pc.Color();\n\ndst.copy(src);\n\nconsole.log(\"The two colors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 272,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A color to copy to the specified color."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Color",
										"qualifiedName": "Color",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Color",
								"qualifiedName": "Color",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.copy"
					}
				},
				{
					"id": 273,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8663,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 274,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reports whether two colors are equal."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the colors are equal and false otherwise."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Color(1, 0, 0, 1);\nvar b = new pc.Color(1, 1, 0, 1);\nconsole.log(\"The two colors are \" + (a.equals(b) ? \"equal\" : \"different\"));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 275,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The color to compare to the specified color."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Color",
										"qualifiedName": "Color",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.equals"
					}
				},
				{
					"id": 287,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8701,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 288,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the values of the color from a string representation '#11223344' or '#112233'."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 289,
									"name": "hex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string representation in the format '#RRGGBBAA' or '#RRGGBB'. Where\nRR, GG, BB, AA are red, green, blue and alpha values. This is the same format used in\nHTML/CSS."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Color",
								"qualifiedName": "Color",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.fromString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.fromString"
					}
				},
				{
					"id": 282,
					"name": "lerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8692,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 283,
							"name": "lerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of a linear interpolation between two specified colors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Color(0, 0, 0);\nvar b = new pc.Color(1, 1, 0.5);\nvar r = new pc.Color();\n\nr.lerp(a, b, 0);   // r is equal to a\nr.lerp(a, b, 0.5); // r is 0.5, 0.5, 0.25\nr.lerp(a, b, 1);   // r is equal to b\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 284,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The color to interpolate from."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Color",
										"qualifiedName": "Color",
										"package": "playcanvas"
									}
								},
								{
									"id": 285,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The color to interpolate to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Color",
										"qualifiedName": "Color",
										"package": "playcanvas"
									}
								},
								{
									"id": 286,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value controlling the point of interpolation. Between 0 and 1,\nthe linear interpolant will occur on a straight line between lhs and rhs. Outside of this\nrange, the linear interpolant will occur on a ray extrapolated from this line."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Color",
								"qualifiedName": "Color",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.lerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.lerp"
					}
				},
				{
					"id": 276,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8673,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 277,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Assign values to the color components, including alpha."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 278,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value for red (0-1)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 279,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value for blue (0-1)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 280,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value for green (0-1)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 281,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value for the alpha (0-1), defaults to 1."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Color",
								"qualifiedName": "Color",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.set"
					}
				},
				{
					"id": 290,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8714,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 291,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts the color to string form. The format is '#RRGGBBAA', where RR, GG, BB, AA are the\nred, green, blue and alpha values. When the alpha value is not included (the default), this\nis the same format as used in HTML/CSS."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The color in string form."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar c = new pc.Color(1, 1, 1);\n// Outputs #ffffffff\nconsole.log(c.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 292,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the output string will include the alpha value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						255
					]
				},
				{
					"title": "Properties",
					"children": [
						261,
						267,
						266,
						265,
						264,
						246,
						247,
						248,
						249,
						250,
						251,
						252,
						253,
						254
					]
				},
				{
					"title": "Accessors",
					"children": [
						262
					]
				},
				{
					"title": "Methods",
					"children": [
						268,
						270,
						273,
						287,
						282,
						276,
						290
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/color.ts",
					"line": 14,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Color",
					"qualifiedName": "Color",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 293,
			"name": "Curve_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 294,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17003,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 295,
							"name": "new Curve_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Curve instance."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar curve = new pc.Curve([\n    0, 0,        // At 0 time, value of 0\n    0.33, 2,     // At 0.33 time, value of 2\n    0.66, 2.6,   // At 0.66 time, value of 2.6\n    1, 3         // At 1 time, value of 3\n]);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 296,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of keys (pairs of numbers with the time first and value\nsecond)."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 293,
								"name": "Curve_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.constructor"
					}
				},
				{
					"id": 303,
					"name": "keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17004,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.keys"
					}
				},
				{
					"id": 305,
					"name": "tension",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls how "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CURVE_SPLINE"
							},
							{
								"kind": "text",
								"text": " tangents are calculated. Valid range is between 0 and\n1 where 0 results in a non-smooth curve (equivalent to linear interpolation) and 1\nresults in a very smooth curve. Use 0.5 for a Catmull-rom spline."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17025,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.tension"
					}
				},
				{
					"id": 304,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The curve interpolation scheme. Can be:\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CURVE_LINEAR"
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CURVE_SMOOTHSTEP"
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CURVE_SPLINE"
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CURVE_STEP"
							},
							{
								"kind": "text",
								"text": "\n\nDefaults to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CURVE_SMOOTHSTEP"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17017,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.type"
					}
				},
				{
					"id": 306,
					"name": "length",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17036,
							"character": 8
						}
					],
					"getSignature": {
						"id": 307,
						"name": "length",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Get the number of keys in the curve."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Curve.length"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.length"
					}
				},
				{
					"id": 308,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17044,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 309,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a new key to the curve."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "[time, value] pair."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 310,
									"name": "time",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Time to add new key."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 311,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value of new key."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.add"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.add"
					}
				},
				{
					"id": 323,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17069,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 324,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a clone of the specified curve object."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A clone of the specified curve."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Curve",
								"qualifiedName": "Curve",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.clone"
					}
				},
				{
					"id": 320,
					"name": "closest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17063,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 321,
							"name": "closest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 322,
									"name": "time",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.closest"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.closest"
					}
				},
				{
					"id": 312,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17051,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 313,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return a specific key."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The key at the specified index."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 314,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index of the key to return."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.get"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.get"
					}
				},
				{
					"id": 300,
					"name": "getNormal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/curve.ts",
							"line": 36,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 301,
							"name": "getNormal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "获得曲线在此处的法线斜率"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "法线斜率"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 302,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "在曲线上的百分比位置"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 297,
					"name": "getTangent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/curve.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "getTangent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "获得曲线在此处的切线斜率"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "切线斜率"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 299,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "在曲线上的百分比位置"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 315,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17055,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 316,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sort keys by time."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.sort"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.sort"
					}
				},
				{
					"id": 317,
					"name": "value",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17062,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 318,
							"name": "value",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the interpolated value of the curve at specified time."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The interpolated value."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 319,
									"name": "time",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The time at which to calculate the value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.value"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.value"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						294
					]
				},
				{
					"title": "Properties",
					"children": [
						303,
						305,
						304
					]
				},
				{
					"title": "Accessors",
					"children": [
						306
					]
				},
				{
					"title": "Methods",
					"children": [
						308,
						323,
						320,
						312,
						300,
						297,
						315,
						317
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/curve.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Curve",
					"qualifiedName": "Curve",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 2365,
			"name": "DebugLine",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2373,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 2374,
							"name": "new DebugLine",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2365,
								"name": "DebugLine"
							}
						}
					]
				},
				{
					"id": 2371,
					"name": "clearLines",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/utils/func/debugLine.ts",
							"line": 37,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2372,
							"name": "clearLines",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "清除所有直线"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2366,
					"name": "drawLine",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/utils/func/debugLine.ts",
							"line": 23,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2367,
							"name": "drawLine",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "绘制直线"
									}
								]
							},
							"parameters": [
								{
									"id": 2368,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "起点"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 2369,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "终点"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 2370,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "颜色"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Color",
										"qualifiedName": "Color",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2373
					]
				},
				{
					"title": "Methods",
					"children": [
						2371,
						2366
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/func/debugLine.ts",
					"line": 15,
					"character": 13
				}
			]
		},
		{
			"id": 2242,
			"name": "DropGLTFLoader",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2243,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/loaders/dropGLTFLoader.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/loaders/dropGLTFLoader.ts#L39"
						}
					],
					"signatures": [
						{
							"id": 2244,
							"name": "new DropGLTFLoader",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2242,
								"name": "DropGLTFLoader"
							},
							"overwrites": {
								"type": "reference",
								"id": 2555,
								"name": "Tool.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2554,
						"name": "Tool.constructor"
					}
				},
				{
					"id": 2265,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "AppBase",
						"qualifiedName": "AppBase",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2564,
						"name": "Tool.app"
					}
				},
				{
					"id": 2245,
					"name": "dropHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/loaders/dropGLTFLoader.ts",
							"line": 37,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/loaders/dropGLTFLoader.ts#L37"
						}
					],
					"type": {
						"type": "reference",
						"name": "DropHandler"
					}
				},
				{
					"id": 2266,
					"name": "eventHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "DropGLTFLoaderEventsMap"
							}
						],
						"name": "ExEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2565,
						"name": "Tool.eventHandler"
					}
				},
				{
					"id": 2268,
					"name": "toolOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2567,
						"name": "Tool.toolOptions"
					}
				},
				{
					"id": 2267,
					"name": "toolOptionsDefault",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 25,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2566,
						"name": "Tool.toolOptionsDefault"
					}
				},
				{
					"id": 2269,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 43,
							"character": 15
						},
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 52,
							"character": 15
						}
					],
					"getSignature": {
						"id": 2270,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "获得工具的启用状态"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"setSignature": {
						"id": 2271,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "设置工具启用状态（触发启用和禁用时的额外操作）"
								}
							]
						},
						"parameters": [
							{
								"id": 2272,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2569,
						"name": "Tool.enabled"
					}
				},
				{
					"id": 2273,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 63,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2274,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "添加事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2275,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": "modelLoaded"
									}
								}
							],
							"parameters": [
								{
									"id": 2276,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1872,
										"name": "K"
									}
								},
								{
									"id": 2277,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 1872,
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "DropGLTFLoaderEventsMap"
										}
									}
								},
								{
									"id": 2278,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2574,
								"name": "Tool.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2573,
						"name": "Tool.addListener"
					}
				},
				{
					"id": 2258,
					"name": "addToScene",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/loaders/dropGLTFLoader.ts",
							"line": 168,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/loaders/dropGLTFLoader.ts#L168"
						}
					],
					"signatures": [
						{
							"id": 2259,
							"name": "addToScene",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2260,
									"name": "err",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2261,
									"name": "asset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Asset",
										"qualifiedName": "Asset",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2246,
					"name": "isModelFilename",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/loaders/dropGLTFLoader.ts",
							"line": 49,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/loaders/dropGLTFLoader.ts#L49"
						}
					],
					"signatures": [
						{
							"id": 2247,
							"name": "isModelFilename",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2248,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2262,
					"name": "loadFiles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/loaders/dropGLTFLoader.ts",
							"line": 175,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/loaders/dropGLTFLoader.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 2263,
							"name": "loadFiles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2264,
									"name": "files",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "File"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2249,
					"name": "loadGltf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/loaders/dropGLTFLoader.ts",
							"line": 56,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/loaders/dropGLTFLoader.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 2250,
							"name": "loadGltf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2251,
									"name": "gltfUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "File"
									}
								},
								{
									"id": 2252,
									"name": "externalUrls",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "File"
										}
									}
								},
								{
									"id": 2253,
									"name": "finishedCallback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2254,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/tools/loaders/dropGLTFLoader.ts",
													"line": 56,
													"character": 81,
													"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/loaders/dropGLTFLoader.ts#L56"
												}
											],
											"signatures": [
												{
													"id": 2255,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2256,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2257,
															"name": "asset",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Asset",
																"qualifiedName": "Asset",
																"package": "playcanvas"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2294,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 105,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 2295,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2594,
								"name": "Tool.onDisable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2593,
						"name": "Tool.onDisable"
					}
				},
				{
					"id": 2292,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 104,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 2293,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2592,
								"name": "Tool.onEnable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2591,
						"name": "Tool.onEnable"
					}
				},
				{
					"id": 2279,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 74,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2280,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "移除事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2281,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": "modelLoaded"
									}
								}
							],
							"parameters": [
								{
									"id": 2282,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1878,
										"name": "K"
									}
								},
								{
									"id": 2283,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 1878,
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "DropGLTFLoaderEventsMap"
										}
									}
								},
								{
									"id": 2284,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "Tool.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2579,
						"name": "Tool.removeListener"
					}
				},
				{
					"id": 2285,
					"name": "setOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 83,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2286,
							"name": "setOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "设置选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2287,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "Tool.setOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2585,
						"name": "Tool.setOptions"
					}
				},
				{
					"id": 2288,
					"name": "updateOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 96,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2289,
							"name": "updateOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "更新选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2290,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2291,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/helpers/toolBase.ts",
													"line": 96,
													"character": 34
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "Tool.updateOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2588,
						"name": "Tool.updateOptions"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2243
					]
				},
				{
					"title": "Properties",
					"children": [
						2265,
						2245,
						2266,
						2268,
						2267
					]
				},
				{
					"title": "Accessors",
					"children": [
						2269
					]
				},
				{
					"title": "Methods",
					"children": [
						2273,
						2258,
						2246,
						2262,
						2249,
						2294,
						2292,
						2279,
						2285,
						2288
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/loaders/dropGLTFLoader.ts",
					"line": 35,
					"character": 13,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/loaders/dropGLTFLoader.ts#L35"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2553,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "unknown"
						},
						{
							"type": "reference",
							"name": "DropGLTFLoaderEventsMap"
						}
					],
					"name": "Tool"
				}
			]
		},
		{
			"id": 333,
			"name": "ElementComponent_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 338,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14490,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 339,
							"name": "new ElementComponent_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new ElementComponent instance."
									}
								]
							},
							"parameters": [
								{
									"id": 340,
									"name": "system",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ComponentSystem that created this Component."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "ElementComponentSystem",
										"qualifiedName": "ElementComponentSystem",
										"package": "playcanvas"
									}
								},
								{
									"id": 341,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Entity that this Component is attached to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Entity",
										"qualifiedName": "Entity",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 333,
								"name": "ElementComponent_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.constructor"
					}
				},
				{
					"id": 535,
					"name": "_addedModels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14639,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._addedModels"
					}
				},
				{
					"id": 506,
					"name": "_anchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14604,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec4",
						"qualifiedName": "Vec4",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._anchor"
					}
				},
				{
					"id": 517,
					"name": "_anchorDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14615,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._anchorDirty"
					}
				},
				{
					"id": 516,
					"name": "_anchorTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14614,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Mat4",
						"qualifiedName": "Mat4",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._anchorTransform"
					}
				},
				{
					"id": 537,
					"name": "_batchGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14641,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._batchGroup"
					}
				},
				{
					"id": 536,
					"name": "_batchGroupId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14640,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._batchGroupId"
					}
				},
				{
					"id": 505,
					"name": "_beingInitialized",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14603,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._beingInitialized"
					}
				},
				{
					"id": 342,
					"name": "_calculatedCorners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/elementComponent.ts",
							"line": 72,
							"character": 12
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							{
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							{
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							{
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							}
						]
					}
				},
				{
					"id": 512,
					"name": "_calculatedHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14610,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._calculatedHeight"
					}
				},
				{
					"id": 510,
					"name": "_calculatedWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14608,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._calculatedWidth"
					}
				},
				{
					"id": 521,
					"name": "_canvasCorners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14619,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Vec2",
							"qualifiedName": "Vec2",
							"package": "playcanvas"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._canvasCorners"
					}
				},
				{
					"id": 524,
					"name": "_canvasCornersDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14622,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._canvasCornersDirty"
					}
				},
				{
					"id": 523,
					"name": "_cornersDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14621,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._cornersDirty"
					}
				},
				{
					"id": 651,
					"name": "_dirtyLocal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14855,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._dirtyLocal"
					}
				},
				{
					"id": 652,
					"name": "_dirtyWorld",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14856,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._dirtyWorld"
					}
				},
				{
					"id": 531,
					"name": "_drawOrder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14635,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._drawOrder"
					}
				},
				{
					"id": 532,
					"name": "_fitMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14636,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._fitMode"
					}
				},
				{
					"id": 530,
					"name": "_group",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14634,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._group"
					}
				},
				{
					"id": 511,
					"name": "_height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14609,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._height"
					}
				},
				{
					"id": 528,
					"name": "_image",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14632,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "ImageElement",
						"qualifiedName": "ImageElement",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._image"
					}
				},
				{
					"id": 534,
					"name": "_layers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14638,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._layers"
					}
				},
				{
					"id": 507,
					"name": "_localAnchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14605,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec4",
						"qualifiedName": "Vec4",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._localAnchor"
					}
				},
				{
					"id": 513,
					"name": "_margin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14611,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec4",
						"qualifiedName": "Vec4",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._margin"
					}
				},
				{
					"id": 539,
					"name": "_maskOffset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14643,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._maskOffset"
					}
				},
				{
					"id": 540,
					"name": "_maskedBy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14644,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._maskedBy"
					}
				},
				{
					"id": 514,
					"name": "_modelTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14612,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Mat4",
						"qualifiedName": "Mat4",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._modelTransform"
					}
				},
				{
					"id": 538,
					"name": "_offsetReadAt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14642,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._offsetReadAt"
					}
				},
				{
					"id": 518,
					"name": "_parentWorldTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14616,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Mat4",
						"qualifiedName": "Mat4",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._parentWorldTransform"
					}
				},
				{
					"id": 508,
					"name": "_pivot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14606,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._pivot"
					}
				},
				{
					"id": 520,
					"name": "_screenCorners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14618,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Vec3",
							"qualifiedName": "Vec3",
							"package": "playcanvas"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._screenCorners"
					}
				},
				{
					"id": 515,
					"name": "_screenToWorld",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14613,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Mat4",
						"qualifiedName": "Mat4",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._screenToWorld"
					}
				},
				{
					"id": 519,
					"name": "_screenTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14617,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Mat4",
						"qualifiedName": "Mat4",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._screenTransform"
					}
				},
				{
					"id": 713,
					"name": "_sizeDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14880,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._sizeDirty"
					}
				},
				{
					"id": 529,
					"name": "_text",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14633,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "TextElement",
						"qualifiedName": "TextElement",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._text"
					}
				},
				{
					"id": 527,
					"name": "_type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14631,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._type"
					}
				},
				{
					"id": 533,
					"name": "_useInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14637,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._useInput"
					}
				},
				{
					"id": 509,
					"name": "_width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14607,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._width"
					}
				},
				{
					"id": 522,
					"name": "_worldCorners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14620,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Vec3",
							"qualifiedName": "Vec3",
							"package": "playcanvas"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._worldCorners"
					}
				},
				{
					"id": 525,
					"name": "_worldCornersDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14623,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._worldCornersDirty"
					}
				},
				{
					"id": 526,
					"name": "screen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Entity with a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ScreenComponent"
							},
							{
								"kind": "text",
								"text": " that this component belongs to. This is\nautomatically set when the component is a child of a ScreenComponent."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14630,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Entity",
						"qualifiedName": "Entity",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.screen"
					}
				},
				{
					"id": 547,
					"name": "_absBottom",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14648,
							"character": 8
						}
					],
					"getSignature": {
						"id": 548,
						"name": "_absBottom",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent._absBottom"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._absBottom"
					}
				},
				{
					"id": 541,
					"name": "_absLeft",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14645,
							"character": 8
						}
					],
					"getSignature": {
						"id": 542,
						"name": "_absLeft",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent._absLeft"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._absLeft"
					}
				},
				{
					"id": 543,
					"name": "_absRight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14646,
							"character": 8
						}
					],
					"getSignature": {
						"id": 544,
						"name": "_absRight",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent._absRight"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._absRight"
					}
				},
				{
					"id": 545,
					"name": "_absTop",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14647,
							"character": 8
						}
					],
					"getSignature": {
						"id": 546,
						"name": "_absTop",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent._absTop"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._absTop"
					}
				},
				{
					"id": 549,
					"name": "_hasSplitAnchorsX",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14649,
							"character": 8
						}
					],
					"getSignature": {
						"id": 550,
						"name": "_hasSplitAnchorsX",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent._hasSplitAnchorsX"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._hasSplitAnchorsX"
					}
				},
				{
					"id": 551,
					"name": "_hasSplitAnchorsY",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14650,
							"character": 8
						}
					],
					"getSignature": {
						"id": 552,
						"name": "_hasSplitAnchorsY",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent._hasSplitAnchorsY"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._hasSplitAnchorsY"
					}
				},
				{
					"id": 553,
					"name": "aabb",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14651,
							"character": 8
						}
					],
					"getSignature": {
						"id": 554,
						"name": "aabb",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.aabb"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.aabb"
					}
				},
				{
					"id": 357,
					"name": "alignment",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14492,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14493,
							"character": 8
						}
					],
					"getSignature": {
						"id": 358,
						"name": "alignment",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Vec2",
							"qualifiedName": "Vec2",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.alignment"
						}
					},
					"setSignature": {
						"id": 359,
						"name": "alignment",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 360,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Vec2",
									"qualifiedName": "Vec2",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.alignment"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.alignment"
					}
				},
				{
					"id": 555,
					"name": "anchor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14662,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14663,
							"character": 8
						}
					],
					"getSignature": {
						"id": 556,
						"name": "anchor",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Vec4",
							"qualifiedName": "Vec4",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.anchor"
						}
					},
					"setSignature": {
						"id": 557,
						"name": "anchor",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Specifies where the left, bottom, right and top edges of the component are anchored relative\nto its parent. Each value ranges from 0 to 1. e.g. a value of [0, 0, 0, 0] means that the\nelement will be anchored to the bottom left of its parent. A value of [1, 1, 1, 1] means it\nwill be anchored to the top right. A split anchor is when the left-right or top-bottom pairs\nof the anchor are not equal. In that case the component will be resized to cover that entire\narea. e.g. a value of [0, 0, 1, 1] will make the component resize exactly as its parent."
								}
							]
						},
						"parameters": [
							{
								"id": 558,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Vec4",
									"qualifiedName": "Vec4",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.anchor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.anchor"
					}
				},
				{
					"id": 361,
					"name": "autoFitHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14495,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14496,
							"character": 8
						}
					],
					"getSignature": {
						"id": 362,
						"name": "autoFitHeight",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.autoFitHeight"
						}
					},
					"setSignature": {
						"id": 363,
						"name": "autoFitHeight",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 364,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.autoFitHeight"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.autoFitHeight"
					}
				},
				{
					"id": 365,
					"name": "autoFitWidth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14498,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14499,
							"character": 8
						}
					],
					"getSignature": {
						"id": 366,
						"name": "autoFitWidth",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.autoFitWidth"
						}
					},
					"setSignature": {
						"id": 367,
						"name": "autoFitWidth",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 368,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.autoFitWidth"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.autoFitWidth"
					}
				},
				{
					"id": 369,
					"name": "autoHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14501,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14502,
							"character": 8
						}
					],
					"getSignature": {
						"id": 370,
						"name": "autoHeight",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.autoHeight"
						}
					},
					"setSignature": {
						"id": 371,
						"name": "autoHeight",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 372,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.autoHeight"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.autoHeight"
					}
				},
				{
					"id": 373,
					"name": "autoWidth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14504,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14505,
							"character": 8
						}
					],
					"getSignature": {
						"id": 374,
						"name": "autoWidth",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.autoWidth"
						}
					},
					"setSignature": {
						"id": 375,
						"name": "autoWidth",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 376,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.autoWidth"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.autoWidth"
					}
				},
				{
					"id": 559,
					"name": "batchGroupId",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14669,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14670,
							"character": 8
						}
					],
					"getSignature": {
						"id": 560,
						"name": "batchGroupId",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.batchGroupId"
						}
					},
					"setSignature": {
						"id": 561,
						"name": "batchGroupId",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Assign element to a specific batch group (see "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "BatchGroup"
								},
								{
									"kind": "text",
									"text": "). Default is -1 (no group)."
								}
							]
						},
						"parameters": [
							{
								"id": 562,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.batchGroupId"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.batchGroupId"
					}
				},
				{
					"id": 563,
					"name": "bottom",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14677,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14678,
							"character": 8
						}
					],
					"getSignature": {
						"id": 564,
						"name": "bottom",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.bottom"
						}
					},
					"setSignature": {
						"id": 565,
						"name": "bottom",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The distance from the bottom edge of the anchor. Can be used in combination with a split\nanchor to make the component's top edge always be 'top' units away from the top."
								}
							]
						},
						"parameters": [
							{
								"id": 566,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.bottom"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.bottom"
					}
				},
				{
					"id": 343,
					"name": "calculatedCorners",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/elementComponent.ts",
							"line": 76,
							"character": 8
						}
					],
					"getSignature": {
						"id": 344,
						"name": "calculatedCorners",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "获得element4个角的世界坐标"
								}
							]
						},
						"type": {
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"name": "Vec3",
									"qualifiedName": "Vec3",
									"package": "playcanvas"
								},
								{
									"type": "reference",
									"name": "Vec3",
									"qualifiedName": "Vec3",
									"package": "playcanvas"
								},
								{
									"type": "reference",
									"name": "Vec3",
									"qualifiedName": "Vec3",
									"package": "playcanvas"
								},
								{
									"type": "reference",
									"name": "Vec3",
									"qualifiedName": "Vec3",
									"package": "playcanvas"
								}
							]
						}
					}
				},
				{
					"id": 571,
					"name": "calculatedHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14699,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14700,
							"character": 8
						}
					],
					"getSignature": {
						"id": 572,
						"name": "calculatedHeight",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.calculatedHeight"
						}
					},
					"setSignature": {
						"id": 573,
						"name": "calculatedHeight",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The height at which the element will be rendered. In most cases this will be the same as\n"
								},
								{
									"kind": "code",
									"text": "`height`"
								},
								{
									"kind": "text",
									"text": ". However, in some cases the engine may calculate a different height for the element,\nsuch as when the element is under the control of a "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "LayoutGroupComponent"
								},
								{
									"kind": "text",
									"text": ". In these\nscenarios, "
								},
								{
									"kind": "code",
									"text": "`calculatedHeight`"
								},
								{
									"kind": "text",
									"text": " may be smaller or larger than the height that was set in the\neditor."
								}
							]
						},
						"parameters": [
							{
								"id": 574,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.calculatedHeight"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.calculatedHeight"
					}
				},
				{
					"id": 567,
					"name": "calculatedWidth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14688,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14689,
							"character": 8
						}
					],
					"getSignature": {
						"id": 568,
						"name": "calculatedWidth",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.calculatedWidth"
						}
					},
					"setSignature": {
						"id": 569,
						"name": "calculatedWidth",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The width at which the element will be rendered. In most cases this will be the same as\n"
								},
								{
									"kind": "code",
									"text": "`width`"
								},
								{
									"kind": "text",
									"text": ". However, in some cases the engine may calculate a different width for the element,\nsuch as when the element is under the control of a "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "LayoutGroupComponent"
								},
								{
									"kind": "text",
									"text": ". In these\nscenarios, "
								},
								{
									"kind": "code",
									"text": "`calculatedWidth`"
								},
								{
									"kind": "text",
									"text": " may be smaller or larger than the width that was set in the\neditor."
								}
							]
						},
						"parameters": [
							{
								"id": 570,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.calculatedWidth"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.calculatedWidth"
					}
				},
				{
					"id": 575,
					"name": "canvasCorners",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14708,
							"character": 8
						}
					],
					"getSignature": {
						"id": 576,
						"name": "canvasCorners",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "An array of 4 "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Vec2"
								},
								{
									"kind": "text",
									"text": "s that represent the bottom left, bottom right, top right and top\nleft corners of the component in canvas pixels. Only works for screen space element\ncomponents."
								}
							]
						},
						"type": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							}
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.canvasCorners"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.canvasCorners"
					}
				},
				{
					"id": 377,
					"name": "color",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14507,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14508,
							"character": 8
						}
					],
					"getSignature": {
						"id": 378,
						"name": "color",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Color",
							"qualifiedName": "Color",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.color"
						}
					},
					"setSignature": {
						"id": 379,
						"name": "color",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 380,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Color",
									"qualifiedName": "Color",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.color"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.color"
					}
				},
				{
					"id": 767,
					"name": "data",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7573,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.data"
					}
				},
				{
					"id": 577,
					"name": "drawOrder",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14715,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14716,
							"character": 8
						}
					],
					"getSignature": {
						"id": 578,
						"name": "drawOrder",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.drawOrder"
						}
					},
					"setSignature": {
						"id": 579,
						"name": "drawOrder",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The draw order of the component. A higher value means that the component will be rendered on\ntop of other components."
								}
							]
						},
						"parameters": [
							{
								"id": 580,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.drawOrder"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.drawOrder"
					}
				},
				{
					"id": 381,
					"name": "enableMarkup",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14510,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14511,
							"character": 8
						}
					],
					"getSignature": {
						"id": 382,
						"name": "enableMarkup",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.enableMarkup"
						}
					},
					"setSignature": {
						"id": 383,
						"name": "enableMarkup",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 384,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.enableMarkup"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.enableMarkup"
					}
				},
				{
					"id": 747,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7544,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7545,
							"character": 8
						}
					],
					"getSignature": {
						"id": 748,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.enabled"
						}
					},
					"setSignature": {
						"id": 749,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 750,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.enabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.enabled"
					}
				},
				{
					"id": 625,
					"name": "fitMode",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14831,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14832,
							"character": 8
						}
					],
					"getSignature": {
						"id": 626,
						"name": "fitMode",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.fitMode"
						}
					},
					"setSignature": {
						"id": 627,
						"name": "fitMode",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set how the content should be fitted and preserve the aspect ratio of the source texture or sprite.\nOnly works for "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ELEMENTTYPE_IMAGE"
								},
								{
									"kind": "text",
									"text": " types. Can be:\n\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FITMODE_STRETCH"
								},
								{
									"kind": "text",
									"text": ": Fit the content exactly to Element's bounding box.\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FITMODE_CONTAIN"
								},
								{
									"kind": "text",
									"text": ": Fit the content within the Element's bounding box while preserving its Aspect Ratio.\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FITMODE_COVER"
								},
								{
									"kind": "text",
									"text": ": Fit the content to cover the entire Element's bounding box while preserving its Aspect Ratio."
								}
							]
						},
						"parameters": [
							{
								"id": 628,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.fitMode"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.fitMode"
					}
				},
				{
					"id": 385,
					"name": "font",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14513,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14514,
							"character": 8
						}
					],
					"getSignature": {
						"id": 386,
						"name": "font",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"name": "Font",
									"qualifiedName": "Font",
									"package": "playcanvas"
								},
								{
									"type": "reference",
									"name": "CanvasFont",
									"qualifiedName": "CanvasFont",
									"package": "playcanvas"
								}
							]
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.font"
						}
					},
					"setSignature": {
						"id": 387,
						"name": "font",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 388,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "Font",
											"qualifiedName": "Font",
											"package": "playcanvas"
										},
										{
											"type": "reference",
											"name": "CanvasFont",
											"qualifiedName": "CanvasFont",
											"package": "playcanvas"
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.font"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.font"
					}
				},
				{
					"id": 389,
					"name": "fontAsset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14516,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14517,
							"character": 8
						}
					],
					"getSignature": {
						"id": 390,
						"name": "fontAsset",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.fontAsset"
						}
					},
					"setSignature": {
						"id": 391,
						"name": "fontAsset",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 392,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.fontAsset"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.fontAsset"
					}
				},
				{
					"id": 393,
					"name": "fontSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14519,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14520,
							"character": 8
						}
					],
					"getSignature": {
						"id": 394,
						"name": "fontSize",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.fontSize"
						}
					},
					"setSignature": {
						"id": 395,
						"name": "fontSize",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 396,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.fontSize"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.fontSize"
					}
				},
				{
					"id": 581,
					"name": "height",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14725,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14726,
							"character": 8
						}
					],
					"getSignature": {
						"id": 582,
						"name": "height",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.height"
						}
					},
					"setSignature": {
						"id": 583,
						"name": "height",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The height of the element as set in the editor. Note that in some cases this may not reflect\nthe true height at which the element is rendered, such as when the element is under the\ncontrol of a "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "LayoutGroupComponent"
								},
								{
									"kind": "text",
									"text": ". See "
								},
								{
									"kind": "code",
									"text": "`calculatedHeight`"
								},
								{
									"kind": "text",
									"text": " in order to ensure you are\nreading the true height at which the element will be rendered."
								}
							]
						},
						"parameters": [
							{
								"id": 584,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.height"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.height"
					}
				},
				{
					"id": 397,
					"name": "key",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14522,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14523,
							"character": 8
						}
					],
					"getSignature": {
						"id": 398,
						"name": "key",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.key"
						}
					},
					"setSignature": {
						"id": 399,
						"name": "key",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 400,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.key"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.key"
					}
				},
				{
					"id": 585,
					"name": "layers",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14733,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14734,
							"character": 8
						}
					],
					"getSignature": {
						"id": 586,
						"name": "layers",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.layers"
						}
					},
					"setSignature": {
						"id": 587,
						"name": "layers",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "An array of layer IDs ("
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Layer#id"
								},
								{
									"kind": "text",
									"text": ") to which this element should belong. Don't push,\npop, splice or modify this array, if you want to change it - set a new one instead."
								}
							]
						},
						"parameters": [
							{
								"id": 588,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.layers"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.layers"
					}
				},
				{
					"id": 589,
					"name": "left",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14741,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14742,
							"character": 8
						}
					],
					"getSignature": {
						"id": 590,
						"name": "left",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.left"
						}
					},
					"setSignature": {
						"id": 591,
						"name": "left",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The distance from the left edge of the anchor. Can be used in combination with a split\nanchor to make the component's left edge always be 'left' units away from the left."
								}
							]
						},
						"parameters": [
							{
								"id": 592,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.left"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.left"
					}
				},
				{
					"id": 401,
					"name": "lineHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14525,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14526,
							"character": 8
						}
					],
					"getSignature": {
						"id": 402,
						"name": "lineHeight",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.lineHeight"
						}
					},
					"setSignature": {
						"id": 403,
						"name": "lineHeight",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 404,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.lineHeight"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.lineHeight"
					}
				},
				{
					"id": 593,
					"name": "margin",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14750,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14751,
							"character": 8
						}
					],
					"getSignature": {
						"id": 594,
						"name": "margin",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Vec4",
							"qualifiedName": "Vec4",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.margin"
						}
					},
					"setSignature": {
						"id": 595,
						"name": "margin",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The distance from the left, bottom, right and top edges of the anchor. For example if we are\nusing a split anchor like [0,0,1,1] and the margin is [0,0,0,0] then the component will be\nthe same width and height as its parent."
								}
							]
						},
						"parameters": [
							{
								"id": 596,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Vec4",
									"qualifiedName": "Vec4",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.margin"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.margin"
					}
				},
				{
					"id": 405,
					"name": "mask",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14528,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14529,
							"character": 8
						}
					],
					"getSignature": {
						"id": 406,
						"name": "mask",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.mask"
						}
					},
					"setSignature": {
						"id": 407,
						"name": "mask",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 408,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.mask"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.mask"
					}
				},
				{
					"id": 597,
					"name": "maskedBy",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPrivate": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14758,
							"character": 16
						}
					],
					"getSignature": {
						"id": 598,
						"name": "maskedBy",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isPrivate": true,
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Get the entity that is currently masking this element."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.maskedBy"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.maskedBy"
					}
				},
				{
					"id": 409,
					"name": "material",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14531,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14532,
							"character": 8
						}
					],
					"getSignature": {
						"id": 410,
						"name": "material",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Material",
							"qualifiedName": "Material",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.material"
						}
					},
					"setSignature": {
						"id": 411,
						"name": "material",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 412,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Material",
									"qualifiedName": "Material",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.material"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.material"
					}
				},
				{
					"id": 413,
					"name": "materialAsset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14534,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14535,
							"character": 8
						}
					],
					"getSignature": {
						"id": 414,
						"name": "materialAsset",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.materialAsset"
						}
					},
					"setSignature": {
						"id": 415,
						"name": "materialAsset",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 416,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.materialAsset"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.materialAsset"
					}
				},
				{
					"id": 417,
					"name": "maxFontSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14537,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14538,
							"character": 8
						}
					],
					"getSignature": {
						"id": 418,
						"name": "maxFontSize",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.maxFontSize"
						}
					},
					"setSignature": {
						"id": 419,
						"name": "maxFontSize",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 420,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.maxFontSize"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.maxFontSize"
					}
				},
				{
					"id": 421,
					"name": "maxLines",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14540,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14541,
							"character": 8
						}
					],
					"getSignature": {
						"id": 422,
						"name": "maxLines",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.maxLines"
						}
					},
					"setSignature": {
						"id": 423,
						"name": "maxLines",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 424,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.maxLines"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.maxLines"
					}
				},
				{
					"id": 425,
					"name": "minFontSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14543,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14544,
							"character": 8
						}
					],
					"getSignature": {
						"id": 426,
						"name": "minFontSize",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.minFontSize"
						}
					},
					"setSignature": {
						"id": 427,
						"name": "minFontSize",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 428,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.minFontSize"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.minFontSize"
					}
				},
				{
					"id": 429,
					"name": "opacity",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14546,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14547,
							"character": 8
						}
					],
					"getSignature": {
						"id": 430,
						"name": "opacity",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.opacity"
						}
					},
					"setSignature": {
						"id": 431,
						"name": "opacity",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 432,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.opacity"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.opacity"
					}
				},
				{
					"id": 433,
					"name": "outlineColor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14549,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14550,
							"character": 8
						}
					],
					"getSignature": {
						"id": 434,
						"name": "outlineColor",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Color",
							"qualifiedName": "Color",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.outlineColor"
						}
					},
					"setSignature": {
						"id": 435,
						"name": "outlineColor",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 436,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Color",
									"qualifiedName": "Color",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.outlineColor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.outlineColor"
					}
				},
				{
					"id": 437,
					"name": "outlineThickness",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14552,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14553,
							"character": 8
						}
					],
					"getSignature": {
						"id": 438,
						"name": "outlineThickness",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.outlineThickness"
						}
					},
					"setSignature": {
						"id": 439,
						"name": "outlineThickness",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 440,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.outlineThickness"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.outlineThickness"
					}
				},
				{
					"id": 599,
					"name": "pivot",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14765,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14766,
							"character": 8
						}
					],
					"getSignature": {
						"id": 600,
						"name": "pivot",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Vec2",
							"qualifiedName": "Vec2",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.pivot"
						}
					},
					"setSignature": {
						"id": 601,
						"name": "pivot",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The position of the pivot of the component relative to its anchor. Each value ranges from 0\nto 1 where [0,0] is the bottom left and [1,1] is the top right."
								}
							]
						},
						"parameters": [
							{
								"id": 602,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Vec2",
									"qualifiedName": "Vec2",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.pivot"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.pivot"
					}
				},
				{
					"id": 441,
					"name": "pixelsPerUnit",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14555,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14556,
							"character": 8
						}
					],
					"getSignature": {
						"id": 442,
						"name": "pixelsPerUnit",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.pixelsPerUnit"
						}
					},
					"setSignature": {
						"id": 443,
						"name": "pixelsPerUnit",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 444,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.pixelsPerUnit"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.pixelsPerUnit"
					}
				},
				{
					"id": 445,
					"name": "rangeEnd",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14558,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14559,
							"character": 8
						}
					],
					"getSignature": {
						"id": 446,
						"name": "rangeEnd",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.rangeEnd"
						}
					},
					"setSignature": {
						"id": 447,
						"name": "rangeEnd",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 448,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.rangeEnd"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.rangeEnd"
					}
				},
				{
					"id": 449,
					"name": "rangeStart",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14561,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14562,
							"character": 8
						}
					],
					"getSignature": {
						"id": 450,
						"name": "rangeStart",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.rangeStart"
						}
					},
					"setSignature": {
						"id": 451,
						"name": "rangeStart",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 452,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.rangeStart"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.rangeStart"
					}
				},
				{
					"id": 453,
					"name": "rect",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14564,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14565,
							"character": 8
						}
					],
					"getSignature": {
						"id": 454,
						"name": "rect",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Vec4",
							"qualifiedName": "Vec4",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.rect"
						}
					},
					"setSignature": {
						"id": 455,
						"name": "rect",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 456,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Vec4",
									"qualifiedName": "Vec4",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.rect"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.rect"
					}
				},
				{
					"id": 603,
					"name": "right",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14773,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14774,
							"character": 8
						}
					],
					"getSignature": {
						"id": 604,
						"name": "right",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.right"
						}
					},
					"setSignature": {
						"id": 605,
						"name": "right",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The distance from the right edge of the anchor. Can be used in combination with a split\nanchor to make the component's right edge always be 'right' units away from the right."
								}
							]
						},
						"parameters": [
							{
								"id": 606,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.right"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.right"
					}
				},
				{
					"id": 457,
					"name": "rtlReorder",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14567,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14568,
							"character": 8
						}
					],
					"getSignature": {
						"id": 458,
						"name": "rtlReorder",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.rtlReorder"
						}
					},
					"setSignature": {
						"id": 459,
						"name": "rtlReorder",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 460,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.rtlReorder"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.rtlReorder"
					}
				},
				{
					"id": 607,
					"name": "screenCorners",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14781,
							"character": 8
						}
					],
					"getSignature": {
						"id": 608,
						"name": "screenCorners",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "An array of 4 "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Vec3"
								},
								{
									"kind": "text",
									"text": "s that represent the bottom left, bottom right, top right and top\nleft corners of the component relative to its parent "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ScreenComponent"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"type": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							}
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.screenCorners"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.screenCorners"
					}
				},
				{
					"id": 461,
					"name": "shadowColor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14570,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14571,
							"character": 8
						}
					],
					"getSignature": {
						"id": 462,
						"name": "shadowColor",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Color",
							"qualifiedName": "Color",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.shadowColor"
						}
					},
					"setSignature": {
						"id": 463,
						"name": "shadowColor",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 464,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Color",
									"qualifiedName": "Color",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.shadowColor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.shadowColor"
					}
				},
				{
					"id": 465,
					"name": "shadowOffset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14573,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14574,
							"character": 8
						}
					],
					"getSignature": {
						"id": 466,
						"name": "shadowOffset",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.shadowOffset"
						}
					},
					"setSignature": {
						"id": 467,
						"name": "shadowOffset",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 468,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.shadowOffset"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.shadowOffset"
					}
				},
				{
					"id": 469,
					"name": "spacing",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14576,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14577,
							"character": 8
						}
					],
					"getSignature": {
						"id": 470,
						"name": "spacing",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.spacing"
						}
					},
					"setSignature": {
						"id": 471,
						"name": "spacing",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 472,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.spacing"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.spacing"
					}
				},
				{
					"id": 473,
					"name": "sprite",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14579,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14580,
							"character": 8
						}
					],
					"getSignature": {
						"id": 474,
						"name": "sprite",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Sprite",
							"qualifiedName": "Sprite",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.sprite"
						}
					},
					"setSignature": {
						"id": 475,
						"name": "sprite",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 476,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Sprite",
									"qualifiedName": "Sprite",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.sprite"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.sprite"
					}
				},
				{
					"id": 477,
					"name": "spriteAsset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14582,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14583,
							"character": 8
						}
					],
					"getSignature": {
						"id": 478,
						"name": "spriteAsset",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.spriteAsset"
						}
					},
					"setSignature": {
						"id": 479,
						"name": "spriteAsset",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 480,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.spriteAsset"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.spriteAsset"
					}
				},
				{
					"id": 481,
					"name": "spriteFrame",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14585,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14586,
							"character": 8
						}
					],
					"getSignature": {
						"id": 482,
						"name": "spriteFrame",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.spriteFrame"
						}
					},
					"setSignature": {
						"id": 483,
						"name": "spriteFrame",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 484,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.spriteFrame"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.spriteFrame"
					}
				},
				{
					"id": 485,
					"name": "text",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14588,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14589,
							"character": 8
						}
					],
					"getSignature": {
						"id": 486,
						"name": "text",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.text"
						}
					},
					"setSignature": {
						"id": 487,
						"name": "text",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 488,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.text"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.text"
					}
				},
				{
					"id": 611,
					"name": "textHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14793,
							"character": 8
						}
					],
					"getSignature": {
						"id": 612,
						"name": "textHeight",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The height of the text rendered by the component. Only works for "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ELEMENTTYPE_TEXT"
								},
								{
									"kind": "text",
									"text": " types."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.textHeight"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.textHeight"
					}
				},
				{
					"id": 609,
					"name": "textWidth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14787,
							"character": 8
						}
					],
					"getSignature": {
						"id": 610,
						"name": "textWidth",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The width of the text rendered by the component. Only works for "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ELEMENTTYPE_TEXT"
								},
								{
									"kind": "text",
									"text": " types."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.textWidth"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.textWidth"
					}
				},
				{
					"id": 489,
					"name": "texture",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14591,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14592,
							"character": 8
						}
					],
					"getSignature": {
						"id": 490,
						"name": "texture",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Texture",
							"qualifiedName": "Texture",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.texture"
						}
					},
					"setSignature": {
						"id": 491,
						"name": "texture",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 492,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Texture",
									"qualifiedName": "Texture",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.texture"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.texture"
					}
				},
				{
					"id": 493,
					"name": "textureAsset",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14594,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14595,
							"character": 8
						}
					],
					"getSignature": {
						"id": 494,
						"name": "textureAsset",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.textureAsset"
						}
					},
					"setSignature": {
						"id": 495,
						"name": "textureAsset",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 496,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.textureAsset"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.textureAsset"
					}
				},
				{
					"id": 613,
					"name": "top",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14800,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14801,
							"character": 8
						}
					],
					"getSignature": {
						"id": 614,
						"name": "top",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.top"
						}
					},
					"setSignature": {
						"id": 615,
						"name": "top",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The distance from the top edge of the anchor. Can be used in combination with a split anchor\nto make the component's bottom edge always be 'bottom' units away from the bottom."
								}
							]
						},
						"parameters": [
							{
								"id": 616,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.top"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.top"
					}
				},
				{
					"id": 617,
					"name": "type",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14812,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14813,
							"character": 8
						}
					],
					"getSignature": {
						"id": 618,
						"name": "type",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.type"
						}
					},
					"setSignature": {
						"id": 619,
						"name": "type",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The type of the ElementComponent. Can be:\n\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ELEMENTTYPE_GROUP"
								},
								{
									"kind": "text",
									"text": ": The component can be used as a layout mechanism to create groups of\nElementComponents e.g. panels.\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ELEMENTTYPE_IMAGE"
								},
								{
									"kind": "text",
									"text": ": The component will render an image\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ELEMENTTYPE_TEXT"
								},
								{
									"kind": "text",
									"text": ": The component will render text"
								}
							]
						},
						"parameters": [
							{
								"id": 620,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.type"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.type"
					}
				},
				{
					"id": 497,
					"name": "unicodeConverter",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14597,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14598,
							"character": 8
						}
					],
					"getSignature": {
						"id": 498,
						"name": "unicodeConverter",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.unicodeConverter"
						}
					},
					"setSignature": {
						"id": 499,
						"name": "unicodeConverter",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 500,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.unicodeConverter"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.unicodeConverter"
					}
				},
				{
					"id": 621,
					"name": "useInput",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14819,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14820,
							"character": 8
						}
					],
					"getSignature": {
						"id": 622,
						"name": "useInput",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.useInput"
						}
					},
					"setSignature": {
						"id": 623,
						"name": "useInput",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "If true then the component will receive Mouse or Touch input events."
								}
							]
						},
						"parameters": [
							{
								"id": 624,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.useInput"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.useInput"
					}
				},
				{
					"id": 629,
					"name": "width",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14841,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14842,
							"character": 8
						}
					],
					"getSignature": {
						"id": 630,
						"name": "width",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.width"
						}
					},
					"setSignature": {
						"id": 631,
						"name": "width",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The width of the element as set in the editor. Note that in some cases this may not reflect\nthe true width at which the element is rendered, such as when the element is under the\ncontrol of a "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "LayoutGroupComponent"
								},
								{
									"kind": "text",
									"text": ". See "
								},
								{
									"kind": "code",
									"text": "`calculatedWidth`"
								},
								{
									"kind": "text",
									"text": " in order to ensure you are\nreading the true width at which the element will be rendered."
								}
							]
						},
						"parameters": [
							{
								"id": 632,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.width"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.width"
					}
				},
				{
					"id": 633,
					"name": "worldCorners",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14849,
							"character": 8
						}
					],
					"getSignature": {
						"id": 634,
						"name": "worldCorners",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "An array of 4 "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Vec3"
								},
								{
									"kind": "text",
									"text": "s that represent the bottom left, bottom right, top right and top\nleft corners of the component in world space. Only works for 3D element components."
								}
							]
						},
						"type": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							}
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.worldCorners"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.worldCorners"
					}
				},
				{
					"id": 501,
					"name": "wrapLines",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14600,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14601,
							"character": 8
						}
					],
					"getSignature": {
						"id": 502,
						"name": "wrapLines",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.wrapLines"
						}
					},
					"setSignature": {
						"id": 503,
						"name": "wrapLines",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 504,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.ElementComponent.wrapLines"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.wrapLines"
					}
				},
				{
					"id": 660,
					"name": "_bindScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14860,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 661,
							"name": "_bindScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 662,
									"name": "screen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._bindScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._bindScreen"
					}
				},
				{
					"id": 691,
					"name": "_calculateLocalAnchors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14873,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 692,
							"name": "_calculateLocalAnchors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._calculateLocalAnchors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._calculateLocalAnchors"
					}
				},
				{
					"id": 709,
					"name": "_calculateSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14879,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 710,
							"name": "_calculateSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 711,
									"name": "propagateCalculatedWidth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 712,
									"name": "propagateCalculatedHeight",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._calculateSize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._calculateSize"
					}
				},
				{
					"id": 656,
					"name": "_dirtifyMask",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14858,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 657,
							"name": "_dirtifyMask",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._dirtifyMask"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._dirtifyMask"
					}
				},
				{
					"id": 745,
					"name": "_dirtyBatch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14892,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 746,
							"name": "_dirtyBatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._dirtyBatch"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._dirtyBatch"
					}
				},
				{
					"id": 728,
					"name": "_flagChildrenAsDirty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14885,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 729,
							"name": "_flagChildrenAsDirty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._flagChildrenAsDirty"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._flagChildrenAsDirty"
					}
				},
				{
					"id": 743,
					"name": "_isScreenCulled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14891,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 744,
							"name": "_isScreenCulled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._isScreenCulled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._isScreenCulled"
					}
				},
				{
					"id": 741,
					"name": "_isScreenSpace",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14890,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 742,
							"name": "_isScreenSpace",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._isScreenSpace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._isScreenSpace"
					}
				},
				{
					"id": 653,
					"name": "_onInsert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14857,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 654,
							"name": "_onInsert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 655,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._onInsert"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._onInsert"
					}
				},
				{
					"id": 658,
					"name": "_onPrerender",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14859,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 659,
							"name": "_onPrerender",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._onPrerender"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._onPrerender"
					}
				},
				{
					"id": 689,
					"name": "_onScreenRemove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14872,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 690,
							"name": "_onScreenRemove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._onScreenRemove"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._onScreenRemove"
					}
				},
				{
					"id": 684,
					"name": "_onScreenResize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14870,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 685,
							"name": "_onScreenResize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 686,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._onScreenResize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._onScreenResize"
					}
				},
				{
					"id": 687,
					"name": "_onScreenSpaceChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14871,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 688,
							"name": "_onScreenSpaceChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._onScreenSpaceChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._onScreenSpaceChange"
					}
				},
				{
					"id": 679,
					"name": "_parseUpToScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14866,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 680,
							"name": "_parseUpToScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 681,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"children": [
										{
											"id": 683,
											"name": "mask",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
													"line": 14868,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 682,
											"name": "screen",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
													"line": 14867,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												683,
												682
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
											"line": 14866,
											"character": 24
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._parseUpToScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._parseUpToScreen"
					}
				},
				{
					"id": 635,
					"name": "_patch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14850,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 636,
							"name": "_patch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._patch"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._patch"
					}
				},
				{
					"id": 724,
					"name": "_setCalculatedHeight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14884,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 725,
							"name": "_setCalculatedHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 726,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 727,
									"name": "updateMargins",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setCalculatedHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setCalculatedHeight"
					}
				},
				{
					"id": 720,
					"name": "_setCalculatedWidth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14883,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 721,
							"name": "_setCalculatedWidth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 722,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 723,
									"name": "updateMargins",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setCalculatedWidth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setCalculatedWidth"
					}
				},
				{
					"id": 717,
					"name": "_setHeight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14882,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 718,
							"name": "_setHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 719,
									"name": "h",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setHeight"
					}
				},
				{
					"id": 644,
					"name": "_setLocalPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14853,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 645,
							"name": "_setLocalPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 646,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 647,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 648,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setLocalPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setLocalPosition"
					}
				},
				{
					"id": 672,
					"name": "_setMaskedBy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14864,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 673,
							"name": "_setMaskedBy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 674,
									"name": "mask",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setMaskedBy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setMaskedBy"
					}
				},
				{
					"id": 639,
					"name": "_setPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14852,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 640,
							"name": "_setPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 641,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 642,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 643,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setPosition"
					}
				},
				{
					"id": 714,
					"name": "_setWidth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14881,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 715,
							"name": "_setWidth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 716,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._setWidth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._setWidth"
					}
				},
				{
					"id": 649,
					"name": "_sync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14854,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 650,
							"name": "_sync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._sync"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._sync"
					}
				},
				{
					"id": 663,
					"name": "_unbindScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14861,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 664,
							"name": "_unbindScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 665,
									"name": "screen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._unbindScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._unbindScreen"
					}
				},
				{
					"id": 637,
					"name": "_unpatch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14851,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 638,
							"name": "_unpatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._unpatch"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._unpatch"
					}
				},
				{
					"id": 675,
					"name": "_updateMask",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14865,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 676,
							"name": "_updateMask",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 677,
									"name": "currentMask",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 678,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._updateMask"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._updateMask"
					}
				},
				{
					"id": 666,
					"name": "_updateScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14862,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 667,
							"name": "_updateScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 668,
									"name": "screen",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._updateScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._updateScreen"
					}
				},
				{
					"id": 730,
					"name": "addModelToLayers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14886,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 731,
							"name": "addModelToLayers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 732,
									"name": "model",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.addModelToLayers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.addModelToLayers"
					}
				},
				{
					"id": 753,
					"name": "buildAccessors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7561,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 754,
							"name": "buildAccessors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 755,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.buildAccessors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.buildAccessors"
					}
				},
				{
					"id": 779,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 780,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fire an event, all additional arguments are passed on to the event listener."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.fire('test', 'This is the message');\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 781,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of event to fire."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 782,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "First argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 783,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Second argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 784,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Third argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 785,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fourth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 786,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fifth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 787,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sixth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 788,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Seventh argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 789,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Eighth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.fire"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.fire"
					}
				},
				{
					"id": 736,
					"name": "getMaskOffset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14888,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 737,
							"name": "getMaskOffset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.getMaskOffset"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.getMaskOffset"
					}
				},
				{
					"id": 693,
					"name": "getOffsetPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14874,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 694,
							"name": "getOffsetPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 695,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 696,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.getOffsetPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.getOffsetPosition"
					}
				},
				{
					"id": 345,
					"name": "getPixelAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/elementComponent.ts",
							"line": 127,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 346,
							"name": "getPixelAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "根据屏幕位置获得element的像素值"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "element在此屏幕坐标的像素值"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 347,
									"name": "screenPoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "屏幕坐标"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 348,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 349,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/extensions/elementComponent.ts",
															"line": 127,
															"character": 30
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 350,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/extensions/elementComponent.ts",
															"line": 127,
															"character": 41
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														349,
														350
													]
												}
											],
											"sources": [
												{
													"fileName": "src/extensions/elementComponent.ts",
													"line": 127,
													"character": 28
												}
											]
										}
									}
								},
								{
									"id": 351,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "CameraComponent",
										"qualifiedName": "CameraComponent",
										"package": "playcanvas"
									}
								},
								{
									"id": 352,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "颜色值（不传则创建新的颜色）"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Color",
										"qualifiedName": "Color",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Color",
								"qualifiedName": "Color",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 795,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 130,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 796,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Test if there are any handlers bound to an event name."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the object has handlers bound to the specified event name."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.on('test', function () { }); // bind an event to 'test'\nobj.hasEvent('test'); // returns true\nobj.hasEvent('hello'); // returns false\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 797,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event to test."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.hasEvent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.hasEvent"
					}
				},
				{
					"id": 738,
					"name": "isVisibleForCamera",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14889,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 739,
							"name": "isVisibleForCamera",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 740,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.isVisibleForCamera"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.isVisibleForCamera"
					}
				},
				{
					"id": 774,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 775,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Detach an event handler from an event. If callback is not provided then all callbacks are\nunbound from the event, if scope is not provided then all events with the callback will be\nunbound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar handler = function () {\n};\nobj.on('test', handler);\n\nobj.off(); // Removes all events\nobj.off('test'); // Removes all events called 'test'\nobj.off('test', handler); // Removes all handler functions, called 'test'\nobj.off('test', handler, this); // Removes all handler functions, called 'test' with scope this\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 776,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to unbind."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 777,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to be unbound."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 778,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scope that was used as the this when the event is fired."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.off"
					}
				},
				{
					"id": 769,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 770,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attach an event handler to an event."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.on('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 771,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to bind the callback to."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 772,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 773,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object to use as 'this' when the event is fired, defaults to\ncurrent this."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.on"
					}
				},
				{
					"id": 763,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7564,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 764,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onDisable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onDisable"
					}
				},
				{
					"id": 761,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7563,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 762,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onEnable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onEnable"
					}
				},
				{
					"id": 701,
					"name": "onLayerAdded",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14876,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 702,
							"name": "onLayerAdded",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 703,
									"name": "layer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onLayerAdded"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onLayerAdded"
					}
				},
				{
					"id": 704,
					"name": "onLayerRemoved",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14877,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 705,
							"name": "onLayerRemoved",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 706,
									"name": "layer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onLayerRemoved"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onLayerRemoved"
					}
				},
				{
					"id": 697,
					"name": "onLayersChanged",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14875,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 698,
							"name": "onLayersChanged",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 699,
									"name": "oldComp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 700,
									"name": "newComp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onLayersChanged"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onLayersChanged"
					}
				},
				{
					"id": 765,
					"name": "onPostStateChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7565,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 766,
							"name": "onPostStateChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onPostStateChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onPostStateChange"
					}
				},
				{
					"id": 707,
					"name": "onRemove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14878,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 708,
							"name": "onRemove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onRemove"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onRemove"
					}
				},
				{
					"id": 756,
					"name": "onSetEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7562,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 757,
							"name": "onSetEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 758,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 759,
									"name": "oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 760,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.onSetEnabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.onSetEnabled"
					}
				},
				{
					"id": 790,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 119,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 791,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attach an event handler to an event. This handler will be removed after being fired once."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.once('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\nobj.fire('test', 1, 2); // not going to get handled\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 792,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to bind the callback to."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 793,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 794,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object to use as 'this' when the event is fired, defaults to\ncurrent this."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.once"
					}
				},
				{
					"id": 733,
					"name": "removeModelFromLayers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14887,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 734,
							"name": "removeModelFromLayers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 735,
									"name": "model",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.removeModelFromLayers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.removeModelFromLayers"
					}
				},
				{
					"id": 353,
					"name": "setPosFromWorld",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/elementComponent.ts",
							"line": 147,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 354,
							"name": "setPosFromWorld",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "根据世界坐标设置element的屏幕坐标（element的anchor必需为[0,0,0,0]才能保证位置正确）"
									}
								]
							},
							"parameters": [
								{
									"id": 355,
									"name": "pos",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "世界坐标"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 356,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "当前相机，默认为第一个场景相机"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "CameraComponent",
										"qualifiedName": "CameraComponent",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 669,
					"name": "syncMask",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 14863,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 670,
							"name": "syncMask",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 671,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent.syncMask"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent.syncMask"
					}
				},
				{
					"id": 334,
					"name": "_buildAccessors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7535,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 335,
							"name": "_buildAccessors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 336,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 337,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.ElementComponent._buildAccessors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.ElementComponent._buildAccessors"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						338
					]
				},
				{
					"title": "Properties",
					"children": [
						535,
						506,
						517,
						516,
						537,
						536,
						505,
						342,
						512,
						510,
						521,
						524,
						523,
						651,
						652,
						531,
						532,
						530,
						511,
						528,
						534,
						507,
						513,
						539,
						540,
						514,
						538,
						518,
						508,
						520,
						515,
						519,
						713,
						529,
						527,
						533,
						509,
						522,
						525,
						526
					]
				},
				{
					"title": "Accessors",
					"children": [
						547,
						541,
						543,
						545,
						549,
						551,
						553,
						357,
						555,
						361,
						365,
						369,
						373,
						559,
						563,
						343,
						571,
						567,
						575,
						377,
						767,
						577,
						381,
						747,
						625,
						385,
						389,
						393,
						581,
						397,
						585,
						589,
						401,
						593,
						405,
						597,
						409,
						413,
						417,
						421,
						425,
						429,
						433,
						437,
						599,
						441,
						445,
						449,
						453,
						603,
						457,
						607,
						461,
						465,
						469,
						473,
						477,
						481,
						485,
						611,
						609,
						489,
						493,
						613,
						617,
						497,
						621,
						629,
						633,
						501
					]
				},
				{
					"title": "Methods",
					"children": [
						660,
						691,
						709,
						656,
						745,
						728,
						743,
						741,
						653,
						658,
						689,
						684,
						687,
						679,
						635,
						724,
						720,
						717,
						644,
						672,
						639,
						714,
						649,
						663,
						637,
						675,
						666,
						730,
						753,
						779,
						736,
						693,
						345,
						795,
						738,
						774,
						769,
						763,
						761,
						701,
						704,
						697,
						765,
						707,
						756,
						790,
						733,
						353,
						669,
						334
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/elementComponent.ts",
					"line": 70,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ElementComponent",
					"qualifiedName": "ElementComponent",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 798,
			"name": "Entity_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 799,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21791,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 800,
							"name": "new Entity_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new Entity."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar entity = new pc.Entity();\n\n// Add a Component to the Entity\nentity.addComponent(\"camera\", {\n    fov: 45,\n    nearClip: 1,\n    farClip: 10000\n});\n\n// Add the Entity into the scene graph\napp.root.addChild(entity);\n\n// Move the entity\nentity.translate(10, 0, 0);\n\n// Or translate it by setting its position directly\nvar p = entity.getPosition();\nentity.setPosition(p.x + 10, p.y, p.z);\n\n// Change the entity's rotation in local space\nvar e = entity.getLocalEulerAngles();\nentity.setLocalEulerAngles(e.x, e.y + 90, e.z);\n\n// Or use rotateLocal\nentity.rotateLocal(0, 90, 0);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 801,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The non-unique name of the entity, default is \"Untitled\"."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 802,
									"name": "app",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The application the entity belongs to, default is the current application."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "AppBase",
										"qualifiedName": "AppBase",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 798,
								"name": "Entity_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.constructor"
					}
				},
				{
					"id": 806,
					"name": "anim",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AnimComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21798,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "AnimComponent",
						"qualifiedName": "AnimComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.anim"
					}
				},
				{
					"id": 807,
					"name": "animation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AnimationComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21805,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "AnimationComponent",
						"qualifiedName": "AnimationComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.animation"
					}
				},
				{
					"id": 808,
					"name": "audiolistener",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "AudioListenerComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21812,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "AudioListenerComponent",
						"qualifiedName": "AudioListenerComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.audiolistener"
					}
				},
				{
					"id": 809,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ButtonComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21819,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ButtonComponent",
						"qualifiedName": "ButtonComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.button"
					}
				},
				{
					"id": 810,
					"name": "camera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21826,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "CameraComponent",
						"qualifiedName": "CameraComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.camera"
					}
				},
				{
					"id": 811,
					"name": "collision",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CollisionComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21833,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "CollisionComponent",
						"qualifiedName": "CollisionComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.collision"
					}
				},
				{
					"id": 812,
					"name": "element",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ElementComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21840,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ElementComponent",
						"qualifiedName": "ElementComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.element"
					}
				},
				{
					"id": 813,
					"name": "layoutchild",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LayoutChildComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21847,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LayoutChildComponent",
						"qualifiedName": "LayoutChildComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.layoutchild"
					}
				},
				{
					"id": 814,
					"name": "layoutgroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LayoutGroupComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21854,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LayoutGroupComponent",
						"qualifiedName": "LayoutGroupComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.layoutgroup"
					}
				},
				{
					"id": 815,
					"name": "light",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "LightComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21861,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "LightComponent",
						"qualifiedName": "LightComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.light"
					}
				},
				{
					"id": 816,
					"name": "model",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ModelComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21868,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ModelComponent",
						"qualifiedName": "ModelComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.model"
					}
				},
				{
					"id": 855,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The non-unique name of a graph node. Defaults to 'Untitled'."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9209,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.name"
					}
				},
				{
					"id": 817,
					"name": "particlesystem",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ParticleSystemComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21875,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ParticleSystemComponent",
						"qualifiedName": "ParticleSystemComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.particlesystem"
					}
				},
				{
					"id": 818,
					"name": "render",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "RenderComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21882,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "RenderComponent",
						"qualifiedName": "RenderComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.render"
					}
				},
				{
					"id": 819,
					"name": "rigidbody",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "RigidBodyComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21889,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "RigidBodyComponent",
						"qualifiedName": "RigidBodyComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.rigidbody"
					}
				},
				{
					"id": 820,
					"name": "screen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ScreenComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21896,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ScreenComponent",
						"qualifiedName": "ScreenComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.screen"
					}
				},
				{
					"id": 821,
					"name": "script",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ScriptComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21903,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ScriptComponent",
						"qualifiedName": "ScriptComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.script"
					}
				},
				{
					"id": 822,
					"name": "scrollbar",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ScrollbarComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21910,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ScrollbarComponent",
						"qualifiedName": "ScrollbarComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.scrollbar"
					}
				},
				{
					"id": 823,
					"name": "scrollview",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ScrollViewComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21917,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ScrollViewComponent",
						"qualifiedName": "ScrollViewComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.scrollview"
					}
				},
				{
					"id": 824,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SoundComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21924,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "SoundComponent",
						"qualifiedName": "SoundComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.sound"
					}
				},
				{
					"id": 825,
					"name": "sprite",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SpriteComponent"
							},
							{
								"kind": "text",
								"text": " attached to this entity."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21931,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "SpriteComponent",
						"qualifiedName": "SpriteComponent",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.sprite"
					}
				},
				{
					"id": 856,
					"name": "tags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Interface for tagging graph nodes. Tag based searches can be performed using the\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GraphNode#findByTag"
							},
							{
								"kind": "text",
								"text": " function."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9216,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Tags",
						"qualifiedName": "Tags",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.tags"
					}
				},
				{
					"id": 874,
					"name": "children",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9404,
							"character": 8
						}
					],
					"getSignature": {
						"id": 875,
						"name": "children",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A read-only property to get the children of this graph node."
								}
							]
						},
						"type": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"name": "GraphNode",
								"qualifiedName": "GraphNode",
								"package": "playcanvas"
							}
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Entity.children"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.children"
					}
				},
				{
					"id": 864,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9379,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9380,
							"character": 8
						}
					],
					"getSignature": {
						"id": 865,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Entity.enabled"
						}
					},
					"setSignature": {
						"id": 866,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Enable or disable a GraphNode. If one of the GraphNode's parents is disabled there will be\nno other side effects. If all the parents are enabled then the new value will activate or\ndeactivate all the enabled children of the GraphNode."
								}
							]
						},
						"parameters": [
							{
								"id": 867,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Entity.enabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.enabled"
					}
				},
				{
					"id": 862,
					"name": "forward",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9371,
							"character": 8
						}
					],
					"getSignature": {
						"id": 863,
						"name": "forward",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The normalized local space negative Z-axis vector of the graph node in world space."
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Vec3",
							"qualifiedName": "Vec3",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Entity.forward"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.forward"
					}
				},
				{
					"id": 876,
					"name": "graphDepth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9412,
							"character": 8
						}
					],
					"getSignature": {
						"id": 877,
						"name": "graphDepth",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A read-only property to get the depth of this child within the graph. Note that for\nperformance reasons this is only recalculated when a node is added to a new parent, i.e. It\nis not recalculated when a node is simply removed from the graph."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Entity.graphDepth"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.graphDepth"
					}
				},
				{
					"id": 868,
					"name": "parent",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9386,
							"character": 8
						}
					],
					"getSignature": {
						"id": 869,
						"name": "parent",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A read-only property to get a parent graph node."
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "GraphNode",
							"qualifiedName": "GraphNode",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Entity.parent"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.parent"
					}
				},
				{
					"id": 870,
					"name": "path",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9392,
							"character": 8
						}
					],
					"getSignature": {
						"id": 871,
						"name": "path",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A read-only property to get the path of the graph node relative to the root of the hierarchy."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Entity.path"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.path"
					}
				},
				{
					"id": 858,
					"name": "right",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9359,
							"character": 8
						}
					],
					"getSignature": {
						"id": 859,
						"name": "right",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The normalized local space X-axis vector of the graph node in world space."
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Vec3",
							"qualifiedName": "Vec3",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Entity.right"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.right"
					}
				},
				{
					"id": 872,
					"name": "root",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9398,
							"character": 8
						}
					],
					"getSignature": {
						"id": 873,
						"name": "root",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "A read-only property to get highest graph node from current node."
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "GraphNode",
							"qualifiedName": "GraphNode",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Entity.root"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.root"
					}
				},
				{
					"id": 860,
					"name": "up",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9365,
							"character": 8
						}
					],
					"getSignature": {
						"id": 861,
						"name": "up",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The normalized local space Y-axis vector of the graph node in world space."
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Vec3",
							"qualifiedName": "Vec3",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Entity.up"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.up"
					}
				},
				{
					"id": 984,
					"name": "_sync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9899,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 985,
							"name": "_sync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity._sync"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity._sync"
					}
				},
				{
					"id": 971,
					"name": "addChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9839,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 972,
							"name": "addChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a new child to the child list and update the parent value of the child node."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar e = new pc.Entity(app);\nthis.entity.addChild(e);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 973,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The new child to add."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GraphNode",
										"qualifiedName": "GraphNode",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.addChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.addChild"
					}
				},
				{
					"id": 832,
					"name": "addComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 22009,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 833,
							"name": "addComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new component and add it to the entity. Use this to add functionality to the entity\nlike rendering a model, playing sounds and so on."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The new Component that was attached to the entity or null if there\nwas an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar entity = new pc.Entity();\n\n// Add a light component with default properties\nentity.addComponent(\"light\");\n\n// Add a camera component with some specified properties\nentity.addComponent(\"camera\", {\n    fov: 45,\n    clearColor: new pc.Color(1, 0, 0)\n});\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 834,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the component to add. Valid strings are:\n\n- \"anim\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "AnimComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"animation\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "AnimationComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"audiolistener\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "AudioListenerComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"button\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ButtonComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"camera\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CameraComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"collision\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CollisionComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"element\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ElementComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"layoutchild\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "LayoutChildComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"layoutgroup\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "LayoutGroupComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"light\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "LightComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"model\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ModelComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"particlesystem\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ParticleSystemComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"render\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "RenderComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"rigidbody\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "RigidBodyComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"screen\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ScreenComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"script\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ScriptComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"scrollbar\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ScrollbarComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"scrollview\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ScrollViewComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"sound\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "SoundComponent"
											},
											{
												"kind": "text",
												"text": "\n- \"sprite\" - see "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "SpriteComponent"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 835,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The initialization data for the specific component type. Refer to\neach specific component's API reference page for details on valid values for this parameter."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Component",
								"qualifiedName": "Component",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.addComponent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.addComponent"
					}
				},
				{
					"id": 878,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9436,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 879,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Clone a graph node."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A clone of the specified graph node."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "GraphNode",
								"qualifiedName": "GraphNode",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.clone"
					}
				},
				{
					"id": 853,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 22075,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 854,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove all components from the Entity and detach it from the Entity hierarchy. Then\nrecursively destroy all ancestor Entities."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar firstChild = this.entity.children[0];\nfirstChild.destroy(); // delete child, all components and remove from hierarchy\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.destroy"
					}
				},
				{
					"id": 883,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9468,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 884,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search the graph node and all of its descendants for the nodes that satisfy some search\ncriteria."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The array of graph nodes that match the search criteria."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "// Finds all nodes that have a model component and have "
											},
											{
												"kind": "code",
												"text": "`door`"
											},
											{
												"kind": "text",
												"text": " in their lower-cased name\nvar doors = house.find(function (node) {\n    return node.model && node.name.toLowerCase().indexOf('door') !== -1;\n});"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Finds all nodes that have the name property set to 'Test'\nvar entities = parent.find('name', 'Test');\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 885,
									"name": "attr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This can either be a function or a string. If it's a\nfunction, it is executed for each descendant node to test if node satisfies the search\nlogic. Returning true from the function will include the node into the results. If it's a\nstring then it represents the name of a field or a method of the node. If this is the name\nof a field then the value passed as the second argument will be checked for equality. If\nthis is the name of a function then the return value of the function will be checked for\nequality against the valued passed as the second argument to this function."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "FindNodeCallback",
												"qualifiedName": "FindNodeCallback",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 886,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the first argument (attr) is a property name then this value\nwill be checked against the value of the property."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "GraphNode",
									"qualifiedName": "GraphNode",
									"package": "playcanvas"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.find"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.find"
					}
				},
				{
					"id": 850,
					"name": "findByGuid",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 22066,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 851,
							"name": "findByGuid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find a descendant of this entity with the GUID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The entity with the matching GUID or null if no entity is found."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 852,
									"name": "guid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The GUID to search for."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Entity",
								"qualifiedName": "Entity",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByGuid"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByGuid"
					}
				},
				{
					"id": 894,
					"name": "findByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9523,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 895,
							"name": "findByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the first node found in the graph with the name. The search is depth first."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The first node to be found matching the supplied name. Returns\nnull if no node is found."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 896,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the graph."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphNode",
								"qualifiedName": "GraphNode",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByName"
					}
				},
				{
					"id": 897,
					"name": "findByPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9539,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 898,
							"name": "findByPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the first node found in the graph by its full path in the graph. The full path has this\nform 'parent/child/sub-child'. The search is depth first."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The first node to be found matching the supplied path. Returns\nnull if no node is found."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// String form\nvar grandchild = this.entity.findByPath('child/grandchild');\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Array form\nvar grandchild = this.entity.findByPath(['child', 'grandchild']);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 899,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The full path of the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "GraphNode"
											},
											{
												"kind": "text",
												"text": " as either a string or\narray of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "GraphNode"
											},
											{
												"kind": "text",
												"text": " names."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphNode",
								"qualifiedName": "GraphNode",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByPath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByPath"
					}
				},
				{
					"id": 891,
					"name": "findByTag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9515,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 892,
							"name": "findByTag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return all graph nodes that satisfy the search query. Query can be simply a string, or comma\nseparated strings, to have inclusive results of assets that match at least one query. A\nquery that consists of an array of tags can be used to match graph nodes that have each tag\nof array."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A list of all graph nodes that match the query."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "// Return all graph nodes that tagged by "
											},
											{
												"kind": "code",
												"text": "`animal`"
											},
											{
												"kind": "text",
												"text": "\nvar animals = node.findByTag(\"animal\");"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "// Return all graph nodes that tagged by "
											},
											{
												"kind": "code",
												"text": "`bird`"
											},
											{
												"kind": "text",
												"text": " OR "
											},
											{
												"kind": "code",
												"text": "`mammal`"
											},
											{
												"kind": "text",
												"text": "\nvar birdsAndMammals = node.findByTag(\"bird\", \"mammal\");"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "// Return all assets that tagged by "
											},
											{
												"kind": "code",
												"text": "`carnivore`"
											},
											{
												"kind": "text",
												"text": " AND "
											},
											{
												"kind": "code",
												"text": "`mammal`"
											},
											{
												"kind": "text",
												"text": "\nvar meatEatingMammals = node.findByTag([\"carnivore\", \"mammal\"]);"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "// Return all assets that tagged by ("
											},
											{
												"kind": "code",
												"text": "`carnivore`"
											},
											{
												"kind": "text",
												"text": " AND "
											},
											{
												"kind": "code",
												"text": "`mammal`"
											},
											{
												"kind": "text",
												"text": ") OR ("
											},
											{
												"kind": "code",
												"text": "`carnivore`"
											},
											{
												"kind": "text",
												"text": " AND "
											},
											{
												"kind": "code",
												"text": "`reptile`"
											},
											{
												"kind": "text",
												"text": ")\nvar meatEatingMammalsAndReptiles = node.findByTag([\"carnivore\", \"mammal\"], [\"carnivore\", \"reptile\"]);"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 893,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "GraphNode",
									"qualifiedName": "GraphNode",
									"package": "playcanvas"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByTag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByTag"
					}
				},
				{
					"id": 839,
					"name": "findComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 22031,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 840,
							"name": "findComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search the entity and all of its descendants for the first component of specified type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A component of specified type, if the entity or any of its descendants\nhas one. Returns undefined otherwise."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Get the first found light component in the hierarchy tree that starts with this entity\nvar light = entity.findComponent(\"light\");\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 841,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the component type to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Component",
								"qualifiedName": "Component",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findComponent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findComponent"
					}
				},
				{
					"id": 842,
					"name": "findComponents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 22042,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 843,
							"name": "findComponents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search the entity and all of its descendants for all components of specified type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "All components of specified type in the entity or any of its\ndescendants. Returns empty array if none found."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Get all light components in the hierarchy tree that starts with this entity\nvar lights = entity.findComponents(\"light\");\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 844,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the component type to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Component",
									"qualifiedName": "Component",
									"package": "playcanvas"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findComponents"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findComponents"
					}
				},
				{
					"id": 887,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9493,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 888,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search the graph node and all of its descendants for the first node that satisfies some\nsearch criteria."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A graph node that match the search criteria. Returns null if no\nnode is found."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "// Find the first node that is called "
											},
											{
												"kind": "code",
												"text": "`head`"
											},
											{
												"kind": "text",
												"text": " and has a model component\nvar head = player.findOne(function (node) {\n    return node.model && node.name === 'head';\n});"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Finds the first node that has the name property set to 'Test'\nvar node = parent.findOne('name', 'Test');\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 889,
									"name": "attr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This can either be a function or a string. If it's a\nfunction, it is executed for each descendant node to test if node satisfies the search\nlogic. Returning true from the function will result in that node being returned from\nfindOne. If it's a string then it represents the name of a field or a method of the node. If\nthis is the name of a field then the value passed as the second argument will be checked for\nequality. If this is the name of a function then the return value of the function will be\nchecked for equality against the valued passed as the second argument to this function."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "FindNodeCallback",
												"qualifiedName": "FindNodeCallback",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 890,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the first argument (attr) is a property name then this value\nwill be checked against the value of the property."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "GraphNode",
								"qualifiedName": "GraphNode",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findOne"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findOne"
					}
				},
				{
					"id": 1026,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1027,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fire an event, all additional arguments are passed on to the event listener."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.fire('test', 'This is the message');\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1028,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of event to fire."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1029,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "First argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1030,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Second argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1031,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Third argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1032,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fourth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1033,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fifth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1034,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sixth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1035,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Seventh argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1036,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Eighth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.fire"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.fire"
					}
				},
				{
					"id": 900,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9552,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 901,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Executes a provided function once on this graph node and all of its descendants."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Log the path and name of each node in descendant tree starting with \"parent\"\nparent.forEach(function (node) {\n    console.log(node.path + \"/\" + node.name);\n});\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 902,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The function to execute on the graph node and each\ndescendant."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "ForEachNodeCallback",
										"qualifiedName": "ForEachNodeCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 903,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional value to use as this when executing callback function."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.forEach"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.forEach"
					}
				},
				{
					"id": 910,
					"name": "getEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9587,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 911,
							"name": "getEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the world space rotation for the specified GraphNode in Euler angle form. The rotation\nis returned as euler angles in a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Vec3"
									},
									{
										"kind": "text",
										"text": ". The value returned by this function should be\nconsidered read-only. In order to set the world-space rotation of the graph node, use\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GraphNode#setEulerAngles"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The world space rotation of the graph node in Euler angle form."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar angles = this.entity.getEulerAngles();\nangles.y = 180; // rotate the entity around Y by 180 degrees\nthis.entity.setEulerAngles(angles);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getEulerAngles"
					}
				},
				{
					"id": 912,
					"name": "getLocalEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9599,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 913,
							"name": "getLocalEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the rotation in local space for the specified GraphNode. The rotation is returned as\neuler angles in a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Vec3"
									},
									{
										"kind": "text",
										"text": ". The returned vector should be considered read-only. To\nupdate the local rotation, use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GraphNode#setLocalEulerAngles"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The local space rotation of the graph node as euler angles in XYZ order."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar angles = this.entity.getLocalEulerAngles();\nangles.y = 180;\nthis.entity.setLocalEulerAngles(angles);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalEulerAngles"
					}
				},
				{
					"id": 914,
					"name": "getLocalPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9611,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 915,
							"name": "getLocalPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the position in local space for the specified GraphNode. The position is returned as a\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Vec3"
									},
									{
										"kind": "text",
										"text": ". The returned vector should be considered read-only. To update the local\nposition, use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GraphNode#setLocalPosition"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The local space position of the graph node."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar position = this.entity.getLocalPosition();\nposition.x += 1; // move the entity 1 unit along x.\nthis.entity.setLocalPosition(position);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalPosition"
					}
				},
				{
					"id": 916,
					"name": "getLocalRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9621,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 917,
							"name": "getLocalRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the rotation in local space for the specified GraphNode. The rotation is returned as a\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Quat"
									},
									{
										"kind": "text",
										"text": ". The returned quaternion should be considered read-only. To update the local\nrotation, use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GraphNode#setLocalRotation"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The local space rotation of the graph node as a quaternion."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar rotation = this.entity.getLocalRotation();\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalRotation"
					}
				},
				{
					"id": 918,
					"name": "getLocalScale",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9633,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 919,
							"name": "getLocalScale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the scale in local space for the specified GraphNode. The scale is returned as a\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Vec3"
									},
									{
										"kind": "text",
										"text": ". The returned vector should be considered read-only. To update the local scale,\nuse "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GraphNode#setLocalScale"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The local space scale of the graph node."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar scale = this.entity.getLocalScale();\nscale.x = 100;\nthis.entity.setLocalScale(scale);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalScale"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalScale"
					}
				},
				{
					"id": 920,
					"name": "getLocalTransform",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9642,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 921,
							"name": "getLocalTransform",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the local transform matrix for this graph node. This matrix is the transform relative to\nthe node's parent's world transformation matrix."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The node's local transformation matrix."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar transform = this.entity.getLocalTransform();\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Mat4",
								"qualifiedName": "Mat4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalTransform"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalTransform"
					}
				},
				{
					"id": 922,
					"name": "getPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9654,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 923,
							"name": "getPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the world space position for the specified GraphNode. The position is returned as a\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Vec3"
									},
									{
										"kind": "text",
										"text": ". The value returned by this function should be considered read-only. In order\nto set the world-space position of the graph node, use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GraphNode#setPosition"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The world space position of the graph node."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar position = this.entity.getPosition();\nposition.x = 10;\nthis.entity.setPosition(position);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getPosition"
					}
				},
				{
					"id": 924,
					"name": "getRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9664,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 925,
							"name": "getRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the world space rotation for the specified GraphNode. The rotation is returned as a\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Quat"
									},
									{
										"kind": "text",
										"text": ". The value returned by this function should be considered read-only. In order\nto set the world-space rotation of the graph node, use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GraphNode#setRotation"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The world space rotation of the graph node as a quaternion."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar rotation = this.entity.getRotation();\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getRotation"
					}
				},
				{
					"id": 928,
					"name": "getWorldTransform",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9686,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 929,
							"name": "getWorldTransform",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the world transformation matrix for this graph node."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The node's world transformation matrix."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar transform = this.entity.getWorldTransform();\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Mat4",
								"qualifiedName": "Mat4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getWorldTransform"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getWorldTransform"
					}
				},
				{
					"id": 1042,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 130,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1043,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Test if there are any handlers bound to an event name."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the object has handlers bound to the specified event name."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.on('test', function () { }); // bind an event to 'test'\nobj.hasEvent('test'); // returns true\nobj.hasEvent('hello'); // returns false\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1044,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event to test."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.hasEvent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.hasEvent"
					}
				},
				{
					"id": 977,
					"name": "insertChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9861,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 978,
							"name": "insertChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Insert a new child to the child list at the specified index and update the parent value of\nthe child node."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar e = new pc.Entity(app);\nthis.entity.insertChild(e, 1);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 979,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The new child to insert."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GraphNode",
										"qualifiedName": "GraphNode",
										"package": "playcanvas"
									}
								},
								{
									"id": 980,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index in the child list of the parent where the new node will be\ninserted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.insertChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.insertChild"
					}
				},
				{
					"id": 907,
					"name": "isAncestorOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9574,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 908,
							"name": "isAncestorOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if node is ancestor for another node."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "If node is ancestor for another node."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nif (body.isAncestorOf(foot)) {\n    // foot is within body's hierarchy\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 909,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential descendant of node."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GraphNode",
										"qualifiedName": "GraphNode",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.isAncestorOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.isAncestorOf"
					}
				},
				{
					"id": 904,
					"name": "isDescendantOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9563,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 905,
							"name": "isDescendantOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if node is descendant of another node."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "If node is descendant of another node."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nif (roof.isDescendantOf(house)) {\n    // roof is descendant of house entity\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 906,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential ancestor of node."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GraphNode",
										"qualifiedName": "GraphNode",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.isDescendantOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.isDescendantOf"
					}
				},
				{
					"id": 988,
					"name": "lookAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9934,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 989,
							"name": "lookAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reorients the graph node so that the negative z-axis points towards the target. This\nfunction has two valid signatures. Either pass 3D vectors for the look at coordinate and up\nvector, or pass numbers to represent the vectors."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Look at another entity, using the (default) positive y-axis for up\nvar position = otherEntity.getPosition();\nthis.entity.lookAt(position);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Look at another entity, using the negative world y-axis for up\nvar position = otherEntity.getPosition();\nthis.entity.lookAt(position, pc.Vec3.DOWN);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Look at the world space origin, using the (default) positive y-axis for up\nthis.entity.lookAt(0, 0, 0);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Look at world-space coordinate [10, 10, 10], using the negative world y-axis for up\nthis.entity.lookAt(10, 10, 10, 0, -1, 0);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 990,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If passing a 3D vector, this is the world-space coordinate to look at.\nOtherwise, it is the x-component of the world-space coordinate to look at."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 991,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If passing a 3D vector, this is the world-space up vector for look at\ntransform. Otherwise, it is the y-component of the world-space coordinate to look at."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 992,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Z-component of the world-space coordinate to look at."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 993,
									"name": "ux",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "X-component of the up vector for the look at transform."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 994,
									"name": "uy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Y-component of the up vector for the look at transform."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 995,
									"name": "uz",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Z-component of the up vector for the look at transform."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.lookAt"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.lookAt"
					}
				},
				{
					"id": 1021,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1022,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Detach an event handler from an event. If callback is not provided then all callbacks are\nunbound from the event, if scope is not provided then all events with the callback will be\nunbound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar handler = function () {\n};\nobj.on('test', handler);\n\nobj.off(); // Removes all events\nobj.off('test'); // Removes all events called 'test'\nobj.off('test', handler); // Removes all handler functions, called 'test'\nobj.off('test', handler, this); // Removes all handler functions, called 'test' with scope this\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1023,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to unbind."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1024,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to be unbound."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 1025,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scope that was used as the this when the event is fired."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.off"
					}
				},
				{
					"id": 1016,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1017,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attach an event handler to an event."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.on('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1018,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to bind the callback to."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1019,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 1020,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object to use as 'this' when the event is fired, defaults to\ncurrent this."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.on"
					}
				},
				{
					"id": 1037,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 119,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1038,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attach an event handler to an event. This handler will be removed after being fired once."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.once('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\nobj.fire('test', 1, 2); // not going to get handled\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1039,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to bind the callback to."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1040,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 1041,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object to use as 'this' when the event is fired, defaults to\ncurrent this."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.once"
					}
				},
				{
					"id": 981,
					"name": "removeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9898,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 982,
							"name": "removeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove the node from the child list and update the parent value of the child."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar child = this.entity.children[0];\nthis.entity.removeChild(child);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 983,
									"name": "child",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The node to remove."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GraphNode",
										"qualifiedName": "GraphNode",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.removeChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.removeChild"
					}
				},
				{
					"id": 836,
					"name": "removeComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 22020,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 837,
							"name": "removeComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove a component from the Entity."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar entity = new pc.Entity();\nentity.addComponent(\"light\"); // add new light component\n\nentity.removeComponent(\"light\"); // remove light component\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 838,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the Component type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.removeComponent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.removeComponent"
					}
				},
				{
					"id": 930,
					"name": "reparent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9693,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 931,
							"name": "reparent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove graph node from current parent and add as child to new parent."
									}
								]
							},
							"parameters": [
								{
									"id": 932,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "New parent to attach graph node to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GraphNode",
										"qualifiedName": "GraphNode",
										"package": "playcanvas"
									}
								},
								{
									"id": 933,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The child index where the child node should be placed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.reparent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.reparent"
					}
				},
				{
					"id": 803,
					"name": "reparentAndKeepTransform",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/entity.ts",
							"line": 22,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 804,
							"name": "reparentAndKeepTransform",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "改变父节点并保持物体的transform"
									}
								]
							},
							"parameters": [
								{
									"id": 805,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "父节点"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Entity",
										"qualifiedName": "Entity",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1006,
					"name": "rotate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9988,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1007,
							"name": "rotate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rotates the graph node in world-space by the specified Euler angles. Eulers are specified in\ndegrees in XYZ order. This function has two valid signatures: you can either pass a 3D\nvector or 3 numbers to specify the world-space rotation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Rotate via 3 numbers\nthis.entity.rotate(0, 90, 0);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Rotate via vector\nvar r = new pc.Vec3(0, 90, 0);\nthis.entity.rotate(r);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1008,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3-dimensional vector holding world-space rotation or\nrotation around world-space x-axis in degrees."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 1009,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around world-space y-axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1010,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around world-space z-axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.rotate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.rotate"
					}
				},
				{
					"id": 1011,
					"name": "rotateLocal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10006,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1012,
							"name": "rotateLocal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rotates the graph node in local-space by the specified Euler angles. Eulers are specified in\ndegrees in XYZ order. This function has two valid signatures: you can either pass a 3D\nvector or 3 numbers to specify the local-space rotation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Rotate via 3 numbers\nthis.entity.rotateLocal(0, 90, 0);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Rotate via vector\nvar r = new pc.Vec3(0, 90, 0);\nthis.entity.rotateLocal(r);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1013,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3-dimensional vector holding local-space rotation or\nrotation around local-space x-axis in degrees."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 1014,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around local-space y-axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1015,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around local-space z-axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.rotateLocal"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.rotateLocal"
					}
				},
				{
					"id": 966,
					"name": "setEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9830,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 967,
							"name": "setEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the world-space rotation of the specified graph node using euler angles. Eulers are\ninterpreted in XYZ order. Eulers must be specified in degrees. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the world-space euler\nrotation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set rotation of 90 degrees around world-space y-axis via 3 numbers\nthis.entity.setEulerAngles(0, 90, 0);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set rotation of 90 degrees around world-space y-axis via a vector\nvar angles = new pc.Vec3(0, 90, 0);\nthis.entity.setEulerAngles(angles);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 968,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3-dimensional vector holding eulers or rotation around world-space\nx-axis in degrees."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 969,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around world-space y-axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 970,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around world-space z-axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setEulerAngles"
					}
				},
				{
					"id": 934,
					"name": "setLocalEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9712,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 935,
							"name": "setLocalEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the local-space rotation of the specified graph node using euler angles. Eulers are\ninterpreted in XYZ order. Eulers must be specified in degrees. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the local-space euler\nrotation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set rotation of 90 degrees around y-axis via 3 numbers\nthis.entity.setLocalEulerAngles(0, 90, 0);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set rotation of 90 degrees around y-axis via a vector\nvar angles = new pc.Vec3(0, 90, 0);\nthis.entity.setLocalEulerAngles(angles);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 936,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3-dimensional vector holding eulers or rotation around local-space\nx-axis in degrees."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 937,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around local-space y-axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 938,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Rotation around local-space z-axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalEulerAngles"
					}
				},
				{
					"id": 939,
					"name": "setLocalPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9730,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 940,
							"name": "setLocalPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the local-space position of the specified graph node. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the local-space\nposition."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set via 3 numbers\nthis.entity.setLocalPosition(0, 10, 0);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set via vector\nvar pos = new pc.Vec3(0, 10, 0);\nthis.entity.setLocalPosition(pos);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 941,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3-dimensional vector holding local-space position or\nx-coordinate of local-space position."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 942,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Y-coordinate of local-space position."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 943,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Z-coordinate of local-space position."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalPosition"
					}
				},
				{
					"id": 944,
					"name": "setLocalRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9749,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 945,
							"name": "setLocalRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the local-space rotation of the specified graph node. This function has two valid\nsignatures: you can either pass a quaternion or 3 numbers to specify the local-space\nrotation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set via 4 numbers\nthis.entity.setLocalRotation(0, 0, 0, 1);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set via quaternion\nvar q = pc.Quat();\nthis.entity.setLocalRotation(q);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 946,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Quaternion holding local-space rotation or x-component of\nlocal-space quaternion rotation."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Quat",
												"qualifiedName": "Quat",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 947,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Y-component of local-space quaternion rotation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 948,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Z-component of local-space quaternion rotation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 949,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "W-component of local-space quaternion rotation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalRotation"
					}
				},
				{
					"id": 950,
					"name": "setLocalScale",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9766,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 951,
							"name": "setLocalScale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the local-space scale factor of the specified graph node. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the local-space scale."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set via 3 numbers\nthis.entity.setLocalScale(10, 10, 10);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set via vector\nvar scale = new pc.Vec3(10, 10, 10);\nthis.entity.setLocalScale(scale);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 952,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3-dimensional vector holding local-space scale or x-coordinate\nof local-space scale."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 953,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Y-coordinate of local-space scale."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 954,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Z-coordinate of local-space scale."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalScale"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalScale"
					}
				},
				{
					"id": 955,
					"name": "setPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9792,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 956,
							"name": "setPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the world-space position of the specified graph node. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the world-space\nposition."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set via 3 numbers\nthis.entity.setPosition(0, 10, 0);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set via vector\nvar position = new pc.Vec3(0, 10, 0);\nthis.entity.setPosition(position);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 957,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3-dimensional vector holding world-space position or\nx-coordinate of world-space position."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 958,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Y-coordinate of world-space position."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 959,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Z-coordinate of world-space position."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setPosition"
					}
				},
				{
					"id": 960,
					"name": "setRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9811,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 961,
							"name": "setRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the world-space rotation of the specified graph node. This function has two valid\nsignatures: you can either pass a quaternion or 3 numbers to specify the world-space\nrotation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set via 4 numbers\nthis.entity.setRotation(0, 0, 0, 1);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Set via quaternion\nvar q = pc.Quat();\nthis.entity.setRotation(q);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 962,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Quaternion holding world-space rotation or x-component of\nworld-space quaternion rotation."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Quat",
												"qualifiedName": "Quat",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 963,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Y-component of world-space quaternion rotation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 964,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Z-component of world-space quaternion rotation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 965,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "W-component of world-space quaternion rotation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setRotation"
					}
				},
				{
					"id": 996,
					"name": "translate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9952,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 997,
							"name": "translate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Translates the graph node in world-space by the specified translation vector. This function\nhas two valid signatures: you can either pass a 3D vector or 3 numbers to specify the\nworld-space translation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Translate via 3 numbers\nthis.entity.translate(10, 0, 0);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Translate via vector\nvar t = new pc.Vec3(10, 0, 0);\nthis.entity.translate(t);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 998,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3-dimensional vector holding world-space translation or\nx-coordinate of world-space translation."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 999,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Y-coordinate of world-space translation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1000,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Z-coordinate of world-space translation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.translate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.translate"
					}
				},
				{
					"id": 1001,
					"name": "translateLocal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9970,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1002,
							"name": "translateLocal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Translates the graph node in local-space by the specified translation vector. This function\nhas two valid signatures: you can either pass a 3D vector or 3 numbers to specify the\nlocal-space translation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Translate via 3 numbers\nthis.entity.translateLocal(10, 0, 0);\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Translate via vector\nvar t = new pc.Vec3(10, 0, 0);\nthis.entity.translateLocal(t);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1003,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "3-dimensional vector holding local-space translation or\nx-coordinate of local-space translation."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 1004,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Y-coordinate of local-space translation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1005,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Z-coordinate of local-space translation."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.translateLocal"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.translateLocal"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						799
					]
				},
				{
					"title": "Properties",
					"children": [
						806,
						807,
						808,
						809,
						810,
						811,
						812,
						813,
						814,
						815,
						816,
						855,
						817,
						818,
						819,
						820,
						821,
						822,
						823,
						824,
						825,
						856
					]
				},
				{
					"title": "Accessors",
					"children": [
						874,
						864,
						862,
						876,
						868,
						870,
						858,
						872,
						860
					]
				},
				{
					"title": "Methods",
					"children": [
						984,
						971,
						832,
						878,
						853,
						883,
						850,
						894,
						897,
						891,
						839,
						842,
						887,
						1026,
						900,
						910,
						912,
						914,
						916,
						918,
						920,
						922,
						924,
						928,
						1042,
						977,
						907,
						904,
						988,
						1021,
						1016,
						1037,
						981,
						836,
						930,
						803,
						1006,
						1011,
						966,
						934,
						939,
						944,
						950,
						955,
						960,
						996,
						1001
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/entity.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Entity",
					"qualifiedName": "Entity",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 2396,
			"name": "MaterialController",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2436,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 2437,
							"name": "new MaterialController",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2396,
								"name": "MaterialController"
							}
						}
					]
				},
				{
					"id": 2397,
					"name": "processNodeDeep",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/utils/func/materialController.ts",
							"line": 47,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 2398,
							"name": "processNodeDeep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "递归处理实例上的所有模型和meshInstance"
									}
								]
							},
							"parameters": [
								{
									"id": 2399,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "物体实例"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"qualifiedName": "Entity",
												"package": "playcanvas"
											},
											{
												"type": "reference",
												"name": "GraphNode",
												"qualifiedName": "GraphNode",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 2400,
									"name": "childNodeCallback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "节点回调"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2401,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/func/materialController.ts",
													"line": 47,
													"character": 86
												}
											],
											"signatures": [
												{
													"id": 2402,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2403,
															"name": "childNode",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Entity",
																		"qualifiedName": "Entity",
																		"package": "playcanvas"
																	},
																	{
																		"type": "reference",
																		"name": "GraphNode",
																		"qualifiedName": "GraphNode",
																		"package": "playcanvas"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 2404,
									"name": "modelCallback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "模型回调"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2405,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/func/materialController.ts",
													"line": 47,
													"character": 149
												}
											],
											"signatures": [
												{
													"id": 2406,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2407,
															"name": "model",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "RenderComponent",
																		"qualifiedName": "RenderComponent",
																		"package": "playcanvas"
																	},
																	{
																		"type": "reference",
																		"name": "ModelComponent",
																		"qualifiedName": "ModelComponent",
																		"package": "playcanvas"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 2408,
									"name": "meshInstanceCallback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "meshInstance回调"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2409,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/func/materialController.ts",
													"line": 47,
													"character": 229
												}
											],
											"signatures": [
												{
													"id": 2410,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2411,
															"name": "meshInstance",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "MeshInstance",
																"qualifiedName": "MeshInstance",
																"package": "playcanvas"
															}
														},
														{
															"id": 2412,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2433,
					"name": "recoverAllMats",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/utils/func/materialController.ts",
							"line": 168,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 2434,
							"name": "recoverAllMats",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "尝试恢复所有材质"
									}
								]
							},
							"parameters": [
								{
									"id": 2435,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "节点"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"qualifiedName": "Entity",
												"package": "playcanvas"
											},
											{
												"type": "reference",
												"name": "GraphNode",
												"qualifiedName": "GraphNode",
												"package": "playcanvas"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2430,
					"name": "saveAllMats",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/utils/func/materialController.ts",
							"line": 155,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 2431,
							"name": "saveAllMats",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "保存所有原有材质"
									}
								]
							},
							"parameters": [
								{
									"id": 2432,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "节点"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"qualifiedName": "Entity",
												"package": "playcanvas"
											},
											{
												"type": "reference",
												"name": "GraphNode",
												"qualifiedName": "GraphNode",
												"package": "playcanvas"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2418,
					"name": "setChunksDeep",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/utils/func/materialController.ts",
							"line": 107,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 2419,
							"name": "setChunksDeep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "递归改变材质chunks或设置batchGroupId"
									}
								]
							},
							"parameters": [
								{
									"id": 2420,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "节点"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"qualifiedName": "Entity",
												"package": "playcanvas"
											},
											{
												"type": "reference",
												"name": "GraphNode",
												"qualifiedName": "GraphNode",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 2421,
									"name": "chunks",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "chunk描述"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2422,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/func/materialController.ts",
													"line": 107,
													"character": 72
												}
											],
											"indexSignature": {
												"id": 2423,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 2424,
														"name": "index",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									}
								},
								{
									"id": 2425,
									"name": "batchGroupId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "batchGroup的Id"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2413,
					"name": "setMatsDeep",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/utils/func/materialController.ts",
							"line": 86,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 2414,
							"name": "setMatsDeep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "递归设置所有节点的材质或添加batchGroup"
									}
								]
							},
							"parameters": [
								{
									"id": 2415,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "节点"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"qualifiedName": "Entity",
												"package": "playcanvas"
											},
											{
												"type": "reference",
												"name": "GraphNode",
												"qualifiedName": "GraphNode",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 2416,
									"name": "mat",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "材质"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Material",
										"qualifiedName": "Material",
										"package": "playcanvas"
									}
								},
								{
									"id": 2417,
									"name": "batchGroupId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "batchGroup的Id"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2426,
					"name": "toggleWireFrame",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/utils/func/materialController.ts",
							"line": 132,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 2427,
							"name": "toggleWireFrame",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "开关模型网格显示模式"
									}
								]
							},
							"parameters": [
								{
									"id": 2428,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "节点"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"qualifiedName": "Entity",
												"package": "playcanvas"
											},
											{
												"type": "reference",
												"name": "GraphNode",
												"qualifiedName": "GraphNode",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 2429,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "启用状态"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2436
					]
				},
				{
					"title": "Methods",
					"children": [
						2397,
						2433,
						2430,
						2418,
						2413,
						2426
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/func/materialController.ts",
					"line": 38,
					"character": 13
				}
			]
		},
		{
			"id": 1045,
			"name": "MeshInstance_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1051,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10918,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1052,
							"name": "new MeshInstance_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new MeshInstance instance."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Create a mesh instance pointing to a 1x1x1 'cube' mesh\nvar mesh = pc.createBox(graphicsDevice);\nvar material = new pc.StandardMaterial();\n\nvar meshInstance = new pc.MeshInstance(mesh, material);\n\nvar entity = new pc.Entity();\nentity.addComponent('render', {\n    meshInstances: [meshInstance]\n});\n\n// Add the entity to the scene hierarchy\nthis.app.scene.root.addChild(entity);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1053,
									"name": "mesh",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The graphics mesh to instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Mesh",
										"qualifiedName": "Mesh",
										"package": "playcanvas"
									}
								},
								{
									"id": 1054,
									"name": "material",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The material to use for this mesh instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Material",
										"qualifiedName": "Material",
										"package": "playcanvas"
									}
								},
								{
									"id": 1055,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The graph node defining the transform for this instance. This\nparameter is optional when used with "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "RenderComponent"
											},
											{
												"kind": "text",
												"text": " and will use the node the\ncomponent is attached to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GraphNode",
										"qualifiedName": "GraphNode",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1045,
								"name": "MeshInstance_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.constructor"
					}
				},
				{
					"id": 1109,
					"name": "_aabb",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11043,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._aabb"
					}
				},
				{
					"id": 1092,
					"name": "_aabbVer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11001,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._aabbVer"
					}
				},
				{
					"id": 1086,
					"name": "_calculateSortDistance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10977,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._calculateSortDistance"
					}
				},
				{
					"id": 1060,
					"name": "_key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10924,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._key"
					}
				},
				{
					"id": 1110,
					"name": "_layer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11044,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._layer"
					}
				},
				{
					"id": 1072,
					"name": "_lightHash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10944,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._lightHash"
					}
				},
				{
					"id": 1066,
					"name": "_mesh",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10935,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Mesh",
						"qualifiedName": "Mesh",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._mesh"
					}
				},
				{
					"id": 1081,
					"name": "_noDepthDrawGl1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10960,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._noDepthDrawGl1"
					}
				},
				{
					"id": 1079,
					"name": "_receiveShadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10958,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._receiveShadow"
					}
				},
				{
					"id": 1080,
					"name": "_screenSpace",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10959,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._screenSpace"
					}
				},
				{
					"id": 1061,
					"name": "_shader",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10925,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._shader"
					}
				},
				{
					"id": 1071,
					"name": "_shaderDefs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10943,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._shaderDefs"
					}
				},
				{
					"id": 1063,
					"name": "_staticLightList",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10927,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._staticLightList"
					}
				},
				{
					"id": 1064,
					"name": "_staticSource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10928,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._staticSource"
					}
				},
				{
					"id": 1084,
					"name": "_updateAabb",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10975,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._updateAabb"
					}
				},
				{
					"id": 1085,
					"name": "_updateAabbFunc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10976,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._updateAabbFunc"
					}
				},
				{
					"id": 1078,
					"name": "castShadow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10957,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.castShadow"
					}
				},
				{
					"id": 1082,
					"name": "cull",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls whether the mesh instance can be culled by frustum culling\n("
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CameraComponent#frustumCulling"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10967,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.cull"
					}
				},
				{
					"id": 1093,
					"name": "drawOrder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use this value to affect rendering order of mesh instances. Only used when mesh\ninstances are added to a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Layer"
							},
							{
								"kind": "text",
								"text": " with "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Layer#opaqueSortMode"
							},
							{
								"kind": "text",
								"text": " or\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Layer#transparentSortMode"
							},
							{
								"kind": "text",
								"text": " (depending on the material) set to\n"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "SORTMODE_MANUAL"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11010,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.drawOrder"
					}
				},
				{
					"id": 1100,
					"name": "flipFaces",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11022,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.flipFaces"
					}
				},
				{
					"id": 1087,
					"name": "instancingData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10988,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "InstancingData",
						"qualifiedName": "InstancingData",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.instancingData"
					}
				},
				{
					"id": 1062,
					"name": "isStatic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10926,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.isStatic"
					}
				},
				{
					"id": 1095,
					"name": "isVisibleFunc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11018,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.isVisibleFunc"
					}
				},
				{
					"id": 1065,
					"name": "node",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The graph node defining the transform for this instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10934,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "GraphNode",
						"qualifiedName": "GraphNode",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.node"
					}
				},
				{
					"id": 1096,
					"name": "parameters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11019,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1097,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.parameters"
					}
				},
				{
					"id": 1099,
					"name": "stencilBack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11021,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.stencilBack"
					}
				},
				{
					"id": 1098,
					"name": "stencilFront",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11020,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.stencilFront"
					}
				},
				{
					"id": 1073,
					"name": "visible",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable rendering for this mesh instance. Use visible property to enable/disable\nrendering without overhead of removing from scene. But note that the mesh instance is\nstill in the hierarchy and still in the draw call list."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10952,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.visible"
					}
				},
				{
					"id": 1094,
					"name": "visibleThisFrame",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Read this value in "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Layer#onPostCull"
							},
							{
								"kind": "text",
								"text": " to determine if the object is actually going\nto be rendered."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11017,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.visibleThisFrame"
					}
				},
				{
					"id": 1046,
					"name": "lightmapParamNames",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10893,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.lightmapParamNames"
					}
				},
				{
					"id": 1088,
					"name": "aabb",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10999,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11000,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1089,
						"name": "aabb",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.aabb"
						}
					},
					"setSignature": {
						"id": 1090,
						"name": "aabb",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The world space axis-aligned bounding box for this mesh instance."
								}
							]
						},
						"parameters": [
							{
								"id": 1091,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.aabb"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.aabb"
					}
				},
				{
					"id": 1111,
					"name": "calculateSortDistance",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11054,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11055,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1112,
						"name": "calculateSortDistance",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.calculateSortDistance"
						}
					},
					"setSignature": {
						"id": 1113,
						"name": "calculateSortDistance",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "In some circumstances mesh instances are sorted by a distance calculation to determine their\nrendering order. Set this callback to override the default distance calculation, which gives\nthe dot product of the camera forward vector and the vector between the camera position and\nthe center of the mesh instance's axis-aligned bounding box. This option can be particularly\nuseful for rendering transparent meshes in a better order than default."
								}
							]
						},
						"parameters": [
							{
								"id": 1114,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.calculateSortDistance"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.calculateSortDistance"
					}
				},
				{
					"id": 1139,
					"name": "instancingCount",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11089,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11090,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1140,
						"name": "instancingCount",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.instancingCount"
						}
					},
					"setSignature": {
						"id": 1141,
						"name": "instancingCount",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Number of instances when using hardware instancing to render the mesh."
								}
							]
						},
						"parameters": [
							{
								"id": 1142,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.instancingCount"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.instancingCount"
					}
				},
				{
					"id": 1131,
					"name": "key",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11074,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11075,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1132,
						"name": "key",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.key"
						}
					},
					"setSignature": {
						"id": 1133,
						"name": "key",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 1134,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.key"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.key"
					}
				},
				{
					"id": 1074,
					"name": "layer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10953,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10954,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1075,
						"name": "layer",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.layer"
						}
					},
					"setSignature": {
						"id": 1076,
						"name": "layer",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 1077,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.layer"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.layer"
					}
				},
				{
					"id": 1135,
					"name": "mask",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11082,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11083,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1136,
						"name": "mask",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.mask"
						}
					},
					"setSignature": {
						"id": 1137,
						"name": "mask",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Mask controlling which "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "LightComponent"
								},
								{
									"kind": "text",
									"text": "s light this mesh instance, which\n"
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "CameraComponent"
								},
								{
									"kind": "text",
									"text": " sees it and in which "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "Layer"
								},
								{
									"kind": "text",
									"text": " it is rendered. Defaults to 1."
								}
							]
						},
						"parameters": [
							{
								"id": 1138,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.mask"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.mask"
					}
				},
				{
					"id": 1067,
					"name": "material",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10941,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10942,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1068,
						"name": "material",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Material",
							"qualifiedName": "Material",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.material"
						}
					},
					"setSignature": {
						"id": 1069,
						"name": "material",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The material used by this mesh instance."
								}
							]
						},
						"parameters": [
							{
								"id": 1070,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Material",
									"qualifiedName": "Material",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.material"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.material"
					}
				},
				{
					"id": 1105,
					"name": "mesh",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11041,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11042,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1106,
						"name": "mesh",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "Mesh",
							"qualifiedName": "Mesh",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.mesh"
						}
					},
					"setSignature": {
						"id": 1107,
						"name": "mesh",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The graphics mesh being instanced."
								}
							]
						},
						"parameters": [
							{
								"id": 1108,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "Mesh",
									"qualifiedName": "Mesh",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.mesh"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.mesh"
					}
				},
				{
					"id": 1123,
					"name": "morphInstance",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11070,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11071,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1124,
						"name": "morphInstance",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "MorphInstance",
							"qualifiedName": "MorphInstance",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.morphInstance"
						}
					},
					"setSignature": {
						"id": 1125,
						"name": "morphInstance",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The morph instance managing morphing of this mesh instance, or null if morphing is not used."
								}
							]
						},
						"parameters": [
							{
								"id": 1126,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "MorphInstance",
									"qualifiedName": "MorphInstance",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.morphInstance"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.morphInstance"
					}
				},
				{
					"id": 1115,
					"name": "receiveShadow",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11056,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11057,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1116,
						"name": "receiveShadow",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.receiveShadow"
						}
					},
					"setSignature": {
						"id": 1117,
						"name": "receiveShadow",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 1118,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.receiveShadow"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.receiveShadow"
					}
				},
				{
					"id": 1101,
					"name": "renderStyle",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11034,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11035,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1102,
						"name": "renderStyle",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.renderStyle"
						}
					},
					"setSignature": {
						"id": 1103,
						"name": "renderStyle",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The render style of the mesh instance. Can be:\n\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "RENDERSTYLE_SOLID"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "RENDERSTYLE_WIREFRAME"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "RENDERSTYLE_POINTS"
								},
								{
									"kind": "text",
									"text": "\n\nDefaults to "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "RENDERSTYLE_SOLID"
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"parameters": [
							{
								"id": 1104,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.renderStyle"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.renderStyle"
					}
				},
				{
					"id": 1127,
					"name": "screenSpace",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11072,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11073,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1128,
						"name": "screenSpace",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.screenSpace"
						}
					},
					"setSignature": {
						"id": 1129,
						"name": "screenSpace",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 1130,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.screenSpace"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.screenSpace"
					}
				},
				{
					"id": 1119,
					"name": "skinInstance",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11063,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11064,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1120,
						"name": "skinInstance",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "reference",
							"name": "SkinInstance",
							"qualifiedName": "SkinInstance",
							"package": "playcanvas"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.skinInstance"
						}
					},
					"setSignature": {
						"id": 1121,
						"name": "skinInstance",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The skin instance managing skinning of this mesh instance, or null if skinning is not used."
								}
							]
						},
						"parameters": [
							{
								"id": 1122,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "reference",
									"name": "SkinInstance",
									"qualifiedName": "SkinInstance",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.MeshInstance.skinInstance"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.skinInstance"
					}
				},
				{
					"id": 1145,
					"name": "_isVisible",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11092,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1146,
							"name": "_isVisible",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1147,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance._isVisible"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._isVisible"
					}
				},
				{
					"id": 1183,
					"name": "_setupSkinUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11130,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1184,
							"name": "_setupSkinUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance._setupSkinUpdate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._setupSkinUpdate"
					}
				},
				{
					"id": 1153,
					"name": "clearParameters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11101,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1154,
							"name": "clearParameters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.clearParameters"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.clearParameters"
					}
				},
				{
					"id": 1170,
					"name": "deleteParameter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11126,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1171,
							"name": "deleteParameter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Deletes a shader parameter on a mesh instance."
									}
								]
							},
							"parameters": [
								{
									"id": 1172,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the parameter to delete."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.deleteParameter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.deleteParameter"
					}
				},
				{
					"id": 1143,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11091,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1144,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.destroy"
					}
				},
				{
					"id": 1158,
					"name": "getParameter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11109,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1159,
							"name": "getParameter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the specified shader parameter from a mesh instance."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The named parameter."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1160,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the parameter to query."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.getParameter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.getParameter"
					}
				},
				{
					"id": 1155,
					"name": "getParameters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1156,
							"name": "getParameters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1157,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.getParameters"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.getParameters"
					}
				},
				{
					"id": 1056,
					"name": "intersectsRay",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/meshInstance.ts",
							"line": 112,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1057,
							"name": "intersectsRay",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "检测射线与此meshInstance的交点"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "交点集合"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1058,
									"name": "worldRay",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "要求交的射线"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Ray",
										"qualifiedName": "Ray",
										"package": "playcanvas"
									}
								},
								{
									"id": 1059,
									"name": "intersects",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "交点集合（不传则创建新的数组）"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "intersect"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "intersect"
								}
							}
						}
					]
				},
				{
					"id": 1180,
					"name": "setCustomAabb",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11129,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1181,
							"name": "setCustomAabb",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1182,
									"name": "aabb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setCustomAabb"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setCustomAabb"
					}
				},
				{
					"id": 1150,
					"name": "setInstancing",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11100,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1151,
							"name": "setInstancing",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets up "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "MeshInstance"
									},
									{
										"kind": "text",
										"text": " to be rendered using Hardware Instancing."
									}
								]
							},
							"parameters": [
								{
									"id": 1152,
									"name": "vertexBuffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Vertex buffer to hold per-instance vertex data\n(usually world matrices). Pass null to turn off hardware instancing."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "VertexBuffer",
										"qualifiedName": "VertexBuffer",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setInstancing"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setInstancing"
					}
				},
				{
					"id": 1177,
					"name": "setLightmapped",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11128,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1178,
							"name": "setLightmapped",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1179,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setLightmapped"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setLightmapped"
					}
				},
				{
					"id": 1161,
					"name": "setParameter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11119,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1162,
							"name": "setParameter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets a shader parameter on a mesh instance. Note that this parameter will take precedence\nover parameter of the same name if set on Material this mesh instance uses for rendering."
									}
								]
							},
							"parameters": [
								{
									"id": 1163,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the parameter to set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1164,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value for the specified parameter."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"type": "reference",
												"name": "Texture",
												"qualifiedName": "Texture",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 1165,
									"name": "passFlags",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mask describing which passes the material should be included\nin."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setParameter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setParameter"
					}
				},
				{
					"id": 1173,
					"name": "setParameters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11127,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1174,
							"name": "setParameters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1175,
									"name": "device",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1176,
									"name": "passFlag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setParameters"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setParameters"
					}
				},
				{
					"id": 1166,
					"name": "setRealtimeLightmap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11120,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1167,
							"name": "setRealtimeLightmap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1168,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1169,
									"name": "texture",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.setRealtimeLightmap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.setRealtimeLightmap"
					}
				},
				{
					"id": 1148,
					"name": "updateKey",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11093,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1149,
							"name": "updateKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance.updateKey"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance.updateKey"
					}
				},
				{
					"id": 1047,
					"name": "_prepareRenderStyleForArray",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10894,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1048,
							"name": "_prepareRenderStyleForArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1049,
									"name": "meshInstances",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1050,
									"name": "renderStyle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.MeshInstance._prepareRenderStyleForArray"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.MeshInstance._prepareRenderStyleForArray"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1051
					]
				},
				{
					"title": "Properties",
					"children": [
						1109,
						1092,
						1086,
						1060,
						1110,
						1072,
						1066,
						1081,
						1079,
						1080,
						1061,
						1071,
						1063,
						1064,
						1084,
						1085,
						1078,
						1082,
						1093,
						1100,
						1087,
						1062,
						1095,
						1065,
						1096,
						1099,
						1098,
						1073,
						1094,
						1046
					]
				},
				{
					"title": "Accessors",
					"children": [
						1088,
						1111,
						1139,
						1131,
						1074,
						1135,
						1067,
						1105,
						1123,
						1115,
						1101,
						1127,
						1119
					]
				},
				{
					"title": "Methods",
					"children": [
						1145,
						1183,
						1153,
						1170,
						1143,
						1158,
						1155,
						1056,
						1180,
						1150,
						1177,
						1161,
						1173,
						1166,
						1148,
						1047
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/meshInstance.ts",
					"line": 104,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "MeshInstance",
					"qualifiedName": "MeshInstance",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 2188,
			"name": "MouseInputer",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2189,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L45"
						}
					],
					"signatures": [
						{
							"id": 2190,
							"name": "new MouseInputer",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2191,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 2240,
										"name": "MouseInputOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2188,
								"name": "MouseInputer"
							},
							"overwrites": {
								"type": "reference",
								"id": 2555,
								"name": "Tool.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2554,
						"name": "Tool.constructor"
					}
				},
				{
					"id": 2213,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "AppBase",
						"qualifiedName": "AppBase",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2564,
						"name": "Tool.app"
					}
				},
				{
					"id": 2214,
					"name": "eventHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 2132,
								"name": "InputEventsMap"
							}
						],
						"name": "ExEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2565,
						"name": "Tool.eventHandler"
					}
				},
				{
					"id": 2196,
					"name": "isDragging",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 43,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2193,
					"name": "mouseDownVec",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 39,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L39"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					}
				},
				{
					"id": 2194,
					"name": "mouseMoveVec",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 40,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L40"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					}
				},
				{
					"id": 2195,
					"name": "mouseUpVec",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 41,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L41"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					}
				},
				{
					"id": 2215,
					"name": "toolOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 2240,
						"name": "MouseInputOptions"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2567,
						"name": "Tool.toolOptions"
					}
				},
				{
					"id": 2192,
					"name": "toolOptionsDefault",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 35,
							"character": 14,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L35"
						}
					],
					"type": {
						"type": "reference",
						"id": 2240,
						"name": "MouseInputOptions"
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"id": 2566,
						"name": "Tool.toolOptionsDefault"
					}
				},
				{
					"id": 2216,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 43,
							"character": 15
						},
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 52,
							"character": 15
						}
					],
					"getSignature": {
						"id": 2217,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "获得工具的启用状态"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"setSignature": {
						"id": 2218,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "设置工具启用状态（触发启用和禁用时的额外操作）"
								}
							]
						},
						"parameters": [
							{
								"id": 2219,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2569,
						"name": "Tool.enabled"
					}
				},
				{
					"id": 2220,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 63,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2221,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "添加事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2222,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 2132,
											"name": "InputEventsMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 2223,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1872,
										"name": "K"
									}
								},
								{
									"id": 2224,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 1872,
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 2132,
											"name": "InputEventsMap"
										}
									}
								},
								{
									"id": 2225,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2574,
								"name": "Tool.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2573,
						"name": "Tool.addListener"
					}
				},
				{
					"id": 2211,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 131,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L131"
						}
					],
					"signatures": [
						{
							"id": 2212,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2594,
								"name": "Tool.onDisable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2593,
						"name": "Tool.onDisable"
					}
				},
				{
					"id": 2209,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 123,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L123"
						}
					],
					"signatures": [
						{
							"id": 2210,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2592,
								"name": "Tool.onEnable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2591,
						"name": "Tool.onEnable"
					}
				},
				{
					"id": 2197,
					"name": "onMouseDown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 56,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L56"
						}
					],
					"signatures": [
						{
							"id": 2198,
							"name": "onMouseDown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2199,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MouseEvent$1",
										"qualifiedName": "MouseEvent$1",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2200,
					"name": "onMouseMove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 68,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L68"
						}
					],
					"signatures": [
						{
							"id": 2201,
							"name": "onMouseMove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2202,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MouseEvent$1",
										"qualifiedName": "MouseEvent$1",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2203,
					"name": "onMouseUp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 92,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L92"
						}
					],
					"signatures": [
						{
							"id": 2204,
							"name": "onMouseUp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2205,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MouseEvent$1",
										"qualifiedName": "MouseEvent$1",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2206,
					"name": "onMouseWheel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 118,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L118"
						}
					],
					"signatures": [
						{
							"id": 2207,
							"name": "onMouseWheel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2208,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "MouseEvent$1",
										"qualifiedName": "MouseEvent$1",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2226,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 74,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2227,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "移除事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2228,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 2132,
											"name": "InputEventsMap"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 2229,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1878,
										"name": "K"
									}
								},
								{
									"id": 2230,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 1878,
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 2132,
											"name": "InputEventsMap"
										}
									}
								},
								{
									"id": 2231,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "Tool.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2579,
						"name": "Tool.removeListener"
					}
				},
				{
					"id": 2232,
					"name": "setOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 83,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2233,
							"name": "setOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "设置选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2234,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2240,
										"name": "MouseInputOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "Tool.setOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2585,
						"name": "Tool.setOptions"
					}
				},
				{
					"id": 2235,
					"name": "updateOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 96,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2236,
							"name": "updateOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "更新选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2237,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2238,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2239,
													"name": "clickError",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/input/mouseInput.ts",
															"line": 30,
															"character": 37,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L30"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2239
													]
												}
											],
											"sources": [
												{
													"fileName": "src/utils/helpers/toolBase.ts",
													"line": 96,
													"character": 34
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "Tool.updateOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2588,
						"name": "Tool.updateOptions"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2189
					]
				},
				{
					"title": "Properties",
					"children": [
						2213,
						2214,
						2196,
						2193,
						2194,
						2195,
						2215,
						2192
					]
				},
				{
					"title": "Accessors",
					"children": [
						2216
					]
				},
				{
					"title": "Methods",
					"children": [
						2220,
						2211,
						2209,
						2197,
						2200,
						2203,
						2206,
						2226,
						2232,
						2235
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/input/mouseInput.ts",
					"line": 32,
					"character": 13,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L32"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2553,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2240,
							"name": "MouseInputOptions"
						},
						{
							"type": "reference",
							"id": 2132,
							"name": "InputEventsMap"
						}
					],
					"name": "Tool"
				}
			]
		},
		{
			"id": 1794,
			"name": "OrbitCamera",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1795,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 94,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L94"
						}
					],
					"signatures": [
						{
							"id": 1796,
							"name": "new OrbitCamera",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "创建观测相机"
									}
								]
							},
							"parameters": [
								{
									"id": 1797,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "观测相机选项"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2052,
										"name": "OrbitCameraOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1794,
								"name": "OrbitCamera"
							},
							"overwrites": {
								"type": "reference",
								"id": 2555,
								"name": "Tool.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2554,
						"name": "Tool.constructor"
					}
				},
				{
					"id": 1806,
					"name": "_distance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 79,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L79"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1804,
					"name": "_pitch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 77,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L77"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1809,
					"name": "_pivotPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 84,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L84"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					}
				},
				{
					"id": 1802,
					"name": "_yaw",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 75,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L75"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1863,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "AppBase",
						"qualifiedName": "AppBase",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2564,
						"name": "Tool.app"
					}
				},
				{
					"id": 1810,
					"name": "cameraForward",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 85,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L85"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					}
				},
				{
					"id": 1864,
					"name": "eventHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "ExEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2565,
						"name": "Tool.eventHandler"
					}
				},
				{
					"id": 1808,
					"name": "inputHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 82,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"name": "AvailableInputHandler"
					}
				},
				{
					"id": 1801,
					"name": "isLooking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 73,
							"character": 11,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L73"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1800,
					"name": "isPaning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 72,
							"character": 11,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L72"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1799,
					"name": "isRotating",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 71,
							"character": 11,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L71"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1813,
					"name": "modelsAABB",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 88,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L88"
						}
					],
					"type": {
						"type": "reference",
						"name": "BoundingBox",
						"qualifiedName": "BoundingBox",
						"package": "playcanvas"
					}
				},
				{
					"id": 1812,
					"name": "quatWithoutYaw",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 87,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L87"
						}
					],
					"type": {
						"type": "reference",
						"name": "Quat",
						"qualifiedName": "Quat",
						"package": "playcanvas"
					}
				},
				{
					"id": 1807,
					"name": "targetDistance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 80,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L80"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1805,
					"name": "targetPitch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 78,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1803,
					"name": "targetYaw",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 76,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1865,
					"name": "toolOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 2052,
						"name": "OrbitCameraOptions"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2567,
						"name": "Tool.toolOptions"
					}
				},
				{
					"id": 1798,
					"name": "toolOptionsDefault",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 55,
							"character": 14,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L55"
						}
					],
					"type": {
						"type": "reference",
						"id": 2052,
						"name": "OrbitCameraOptions"
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"id": 2566,
						"name": "Tool.toolOptionsDefault"
					}
				},
				{
					"id": 1811,
					"name": "yawOffset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 86,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L86"
						}
					],
					"type": {
						"type": "reference",
						"name": "Quat",
						"qualifiedName": "Quat",
						"package": "playcanvas"
					}
				},
				{
					"id": 1830,
					"name": "device",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 179,
							"character": 15,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L179"
						},
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 183,
							"character": 15,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L183"
						}
					],
					"getSignature": {
						"id": 1831,
						"name": "device",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "输入设备"
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "AvailableDevices"
						}
					},
					"setSignature": {
						"id": 1832,
						"name": "device",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"parameters": [
							{
								"id": 1833,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "AvailableDevices"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 1822,
					"name": "distance",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 155,
							"character": 15,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L155"
						},
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 159,
							"character": 15,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L159"
						}
					],
					"getSignature": {
						"id": 1823,
						"name": "distance",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "离焦点的距离"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 1824,
						"name": "distance",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"parameters": [
							{
								"id": 1825,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 1866,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 43,
							"character": 15
						},
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 52,
							"character": 15
						}
					],
					"getSignature": {
						"id": 1867,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "获得工具的启用状态"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"setSignature": {
						"id": 1868,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "设置工具启用状态（触发启用和禁用时的额外操作）"
								}
							]
						},
						"parameters": [
							{
								"id": 1869,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2569,
						"name": "Tool.enabled"
					}
				},
				{
					"id": 1818,
					"name": "pitch",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 143,
							"character": 15,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L143"
						},
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 147,
							"character": 15,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L147"
						}
					],
					"getSignature": {
						"id": 1819,
						"name": "pitch",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "俯视角"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 1820,
						"name": "pitch",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"parameters": [
							{
								"id": 1821,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 1826,
					"name": "pivotPoint",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 167,
							"character": 15,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L167"
						},
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 171,
							"character": 15,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L171"
						}
					],
					"getSignature": {
						"id": 1827,
						"name": "pivotPoint",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "焦点坐标"
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Vec3",
							"qualifiedName": "Vec3",
							"package": "playcanvas"
						}
					},
					"setSignature": {
						"id": 1828,
						"name": "pivotPoint",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"parameters": [
							{
								"id": 1829,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "reference",
									"name": "Vec3",
									"qualifiedName": "Vec3",
									"package": "playcanvas"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 1814,
					"name": "yaw",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 121,
							"character": 15,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L121"
						},
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 125,
							"character": 15,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L125"
						}
					],
					"getSignature": {
						"id": 1815,
						"name": "yaw",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "航向角"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 1816,
						"name": "yaw",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"parameters": [
							{
								"id": 1817,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 1870,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 63,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1871,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "添加事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1872,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 1873,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1872,
										"name": "K"
									}
								},
								{
									"id": 1874,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 1875,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2574,
								"name": "Tool.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2573,
						"name": "Tool.addListener"
					}
				},
				{
					"id": 1848,
					"name": "buildAABB",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 302,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L302"
						}
					],
					"signatures": [
						{
							"id": 1849,
							"name": "buildAABB",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "构建AABB"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "模型添加的数量"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1850,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选中模型"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"qualifiedName": "Entity",
												"package": "playcanvas"
											},
											{
												"type": "reference",
												"name": "GraphNode",
												"qualifiedName": "GraphNode",
												"package": "playcanvas"
											},
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"name": "Entity",
															"qualifiedName": "Entity",
															"package": "playcanvas"
														},
														{
															"type": "reference",
															"name": "GraphNode",
															"qualifiedName": "GraphNode",
															"package": "playcanvas"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 1851,
									"name": "modelsAdded",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "已添加模型数量"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1855,
					"name": "calcPitch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 370,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L370"
						}
					],
					"signatures": [
						{
							"id": 1856,
							"name": "calcPitch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "根据旋转和航向角获得俯视角"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "俯视角"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1857,
									"name": "quat",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "旋转"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Quat",
										"qualifiedName": "Quat",
										"package": "playcanvas"
									}
								},
								{
									"id": 1858,
									"name": "yaw",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "航向角"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1852,
					"name": "calcYaw",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 356,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L356"
						}
					],
					"signatures": [
						{
							"id": 1853,
							"name": "calcYaw",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "根据旋转获得航向角"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "航向角"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1854,
									"name": "quat",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "旋转"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Quat",
										"qualifiedName": "Quat",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1844,
					"name": "checkAspectRatio",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 278,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L278"
						}
					],
					"signatures": [
						{
							"id": 1845,
							"name": "checkAspectRatio",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "根据宽高设置fov模式"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1834,
					"name": "focus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 215,
							"character": 11,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L215"
						}
					],
					"signatures": [
						{
							"id": 1835,
							"name": "focus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "聚焦"
									}
								]
							},
							"parameters": [
								{
									"id": 1836,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "聚焦物体"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Entity",
												"qualifiedName": "Entity",
												"package": "playcanvas"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Entity",
													"qualifiedName": "Entity",
													"package": "playcanvas"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1861,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 407,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L407"
						}
					],
					"signatures": [
						{
							"id": 1862,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2594,
								"name": "Tool.onDisable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2593,
						"name": "Tool.onDisable"
					}
				},
				{
					"id": 1859,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 385,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L385"
						}
					],
					"signatures": [
						{
							"id": 1860,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2592,
								"name": "Tool.onEnable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2591,
						"name": "Tool.onEnable"
					}
				},
				{
					"id": 1846,
					"name": "removeInertia",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 289,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L289"
						}
					],
					"signatures": [
						{
							"id": 1847,
							"name": "removeInertia",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "清除缓动"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1876,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 74,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1877,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "移除事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1878,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 1879,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1878,
										"name": "K"
									}
								},
								{
									"id": 1880,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 1881,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "Tool.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2579,
						"name": "Tool.removeListener"
					}
				},
				{
					"id": 1882,
					"name": "setOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 83,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1883,
							"name": "setOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "设置选项"
									}
								]
							},
							"parameters": [
								{
									"id": 1884,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2052,
										"name": "OrbitCameraOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "Tool.setOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2585,
						"name": "Tool.setOptions"
					}
				},
				{
					"id": 1837,
					"name": "stopInertia",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 235,
							"character": 11,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L235"
						}
					],
					"signatures": [
						{
							"id": 1838,
							"name": "stopInertia",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "结束目标缓动"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1839,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 246,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L246"
						}
					],
					"signatures": [
						{
							"id": 1840,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "更新相机"
									}
								]
							},
							"parameters": [
								{
									"id": 1841,
									"name": "dt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "帧间隔"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1885,
					"name": "updateOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 96,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1886,
							"name": "updateOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "更新选项"
									}
								]
							},
							"parameters": [
								{
									"id": 1887,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1888,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1890,
													"name": "device",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 28,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L28"
														}
													],
													"type": {
														"type": "reference",
														"name": "AvailableDevices"
													}
												},
												{
													"id": 1901,
													"name": "distanceCondition",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 37,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L37"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1902,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/camera/orbitCamera.ts",
																	"line": 37,
																	"character": 24,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L37"
																}
															],
															"signatures": [
																{
																	"id": 1903,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1897,
													"name": "distanceMax",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 35,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L35"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1896,
													"name": "distanceMin",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 34,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L34"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1892,
													"name": "distanceSensitivity",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 30,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L30"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1893,
													"name": "inertiaFactor",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 31,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L31"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1907,
													"name": "lookCondition",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 39,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L39"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1908,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/camera/orbitCamera.ts",
																	"line": 39,
																	"character": 20,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L39"
																}
															],
															"signatures": [
																{
																	"id": 1909,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1889,
													"name": "mainCamra",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 27,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L27"
														}
													],
													"type": {
														"type": "reference",
														"name": "CameraComponent",
														"qualifiedName": "CameraComponent",
														"package": "playcanvas"
													}
												},
												{
													"id": 1891,
													"name": "orbitSensitivity",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 29,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L29"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1904,
													"name": "panCondition",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 38,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L38"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1905,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/camera/orbitCamera.ts",
																	"line": 38,
																	"character": 19,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L38"
																}
															],
															"signatures": [
																{
																	"id": 1906,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															]
														}
													}
												},
												{
													"id": 1895,
													"name": "pitchMax",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 33,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L33"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1894,
													"name": "pitchMin",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 32,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L32"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1898,
													"name": "rotateCondition",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 36,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L36"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1899,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/camera/orbitCamera.ts",
																	"line": 36,
																	"character": 22,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L36"
																}
															],
															"signatures": [
																{
																	"id": 1900,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1890,
														1901,
														1897,
														1896,
														1892,
														1893,
														1907,
														1889,
														1891,
														1904,
														1895,
														1894,
														1898
													]
												}
											],
											"sources": [
												{
													"fileName": "src/utils/helpers/toolBase.ts",
													"line": 96,
													"character": 34
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "Tool.updateOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2588,
						"name": "Tool.updateOptions"
					}
				},
				{
					"id": 1842,
					"name": "updatePosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 259,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L259"
						}
					],
					"signatures": [
						{
							"id": 1843,
							"name": "updatePosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "更新相机位置"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1795
					]
				},
				{
					"title": "Properties",
					"children": [
						1806,
						1804,
						1809,
						1802,
						1863,
						1810,
						1864,
						1808,
						1801,
						1800,
						1799,
						1813,
						1812,
						1807,
						1805,
						1803,
						1865,
						1798,
						1811
					]
				},
				{
					"title": "Accessors",
					"children": [
						1830,
						1822,
						1866,
						1818,
						1826,
						1814
					]
				},
				{
					"title": "Methods",
					"children": [
						1870,
						1848,
						1855,
						1852,
						1844,
						1834,
						1861,
						1859,
						1846,
						1876,
						1882,
						1837,
						1839,
						1885,
						1842
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/camera/orbitCamera.ts",
					"line": 52,
					"character": 13,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L52"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2553,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2052,
							"name": "OrbitCameraOptions"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Tool"
				}
			]
		},
		{
			"id": 1914,
			"name": "OrbitCameraInput_Mouse",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "观测相机鼠标输入"
					}
				]
			},
			"children": [
				{
					"id": 1915,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 442,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L442"
						}
					],
					"signatures": [
						{
							"id": 1916,
							"name": "new OrbitCameraInput_Mouse",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1917,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1910,
										"name": "OrbitCameraInputOption"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1914,
								"name": "OrbitCameraInput_Mouse"
							},
							"overwrites": {
								"type": "reference",
								"id": 2555,
								"name": "Tool.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2554,
						"name": "Tool.constructor"
					}
				},
				{
					"id": 1948,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "AppBase",
						"qualifiedName": "AppBase",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2564,
						"name": "Tool.app"
					}
				},
				{
					"id": 1949,
					"name": "eventHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "ExEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2565,
						"name": "Tool.eventHandler"
					}
				},
				{
					"id": 1922,
					"name": "fromWorldPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 437,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L437"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					}
				},
				{
					"id": 1920,
					"name": "isLookButtonDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 434,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L434"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1921,
					"name": "isPanButtonDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 435,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L435"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1919,
					"name": "isRotateButtonDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 433,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L433"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1925,
					"name": "lastPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 440,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L440"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					}
				},
				{
					"id": 1923,
					"name": "toWorldPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 438,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L438"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					}
				},
				{
					"id": 1950,
					"name": "toolOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 1910,
						"name": "OrbitCameraInputOption"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2567,
						"name": "Tool.toolOptions"
					}
				},
				{
					"id": 1918,
					"name": "toolOptionsDefault",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 427,
							"character": 14,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L427"
						}
					],
					"type": {
						"type": "reference",
						"id": 1910,
						"name": "OrbitCameraInputOption"
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"id": 2566,
						"name": "Tool.toolOptionsDefault"
					}
				},
				{
					"id": 1924,
					"name": "worldDiff",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 439,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L439"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					}
				},
				{
					"id": 1951,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 43,
							"character": 15
						},
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 52,
							"character": 15
						}
					],
					"getSignature": {
						"id": 1952,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "获得工具的启用状态"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"setSignature": {
						"id": 1953,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "设置工具启用状态（触发启用和禁用时的额外操作）"
								}
							]
						},
						"parameters": [
							{
								"id": 1954,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2569,
						"name": "Tool.enabled"
					}
				},
				{
					"id": 1955,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 63,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1956,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "添加事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1957,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 1958,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1872,
										"name": "K"
									}
								},
								{
									"id": 1959,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 1960,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2574,
								"name": "Tool.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2573,
						"name": "Tool.addListener"
					}
				},
				{
					"id": 1946,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 566,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L566"
						}
					],
					"signatures": [
						{
							"id": 1947,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2594,
								"name": "Tool.onDisable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2593,
						"name": "Tool.onDisable"
					}
				},
				{
					"id": 1944,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 558,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L558"
						}
					],
					"signatures": [
						{
							"id": 1945,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2592,
								"name": "Tool.onEnable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2591,
						"name": "Tool.onEnable"
					}
				},
				{
					"id": 1926,
					"name": "onMouseDown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 463,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L463"
						}
					],
					"signatures": [
						{
							"id": 1927,
							"name": "onMouseDown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "鼠标按下事件监听"
									}
								]
							},
							"parameters": [
								{
									"id": 1928,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "鼠标按下事件"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "MouseEvent$1",
										"qualifiedName": "MouseEvent$1",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1929,
					"name": "onMouseMove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 493,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L493"
						}
					],
					"signatures": [
						{
							"id": 1930,
							"name": "onMouseMove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "鼠标移动事件监听"
									}
								]
							},
							"parameters": [
								{
									"id": 1931,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "鼠标移动事件"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "MouseEvent",
										"qualifiedName": "MouseEvent",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1932,
					"name": "onMouseUp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 511,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L511"
						}
					],
					"signatures": [
						{
							"id": 1933,
							"name": "onMouseUp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "鼠标抬起事件监听"
									}
								]
							},
							"parameters": [
								{
									"id": 1934,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "鼠标抬起事件"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "MouseEvent",
										"qualifiedName": "MouseEvent",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1935,
					"name": "onMouseWheel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 535,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L535"
						}
					],
					"signatures": [
						{
							"id": 1936,
							"name": "onMouseWheel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "鼠标滚轮事件监听"
									}
								]
							},
							"parameters": [
								{
									"id": 1937,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "鼠标滚轮事件"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "MouseEvent$1",
										"qualifiedName": "MouseEvent$1",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1938,
					"name": "pan",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 548,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L548"
						}
					],
					"signatures": [
						{
							"id": 1939,
							"name": "pan",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "移动鼠标时平移相机视角"
									}
								]
							},
							"parameters": [
								{
									"id": 1940,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "鼠标移动事件"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1941,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1942,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 548,
															"character": 25,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L548"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1943,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 548,
															"character": 36,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L548"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1942,
														1943
													]
												}
											],
											"sources": [
												{
													"fileName": "src/tools/camera/orbitCamera.ts",
													"line": 548,
													"character": 23,
													"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L548"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1961,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 74,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1962,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "移除事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 1963,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 1964,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1878,
										"name": "K"
									}
								},
								{
									"id": 1965,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 1966,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "Tool.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2579,
						"name": "Tool.removeListener"
					}
				},
				{
					"id": 1967,
					"name": "setOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 83,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1968,
							"name": "setOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "设置选项"
									}
								]
							},
							"parameters": [
								{
									"id": 1969,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1910,
										"name": "OrbitCameraInputOption"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "Tool.setOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2585,
						"name": "Tool.setOptions"
					}
				},
				{
					"id": 1970,
					"name": "updateOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 96,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1971,
							"name": "updateOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "更新选项"
									}
								]
							},
							"parameters": [
								{
									"id": 1972,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1973,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1976,
													"name": "distanceSensitivity",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 48,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L48"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1974,
													"name": "orbitCamera",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 46,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L46"
														}
													],
													"type": {
														"type": "reference",
														"id": 1794,
														"name": "OrbitCamera"
													}
												},
												{
													"id": 1975,
													"name": "orbitSensitivity",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 47,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L47"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1976,
														1974,
														1975
													]
												}
											],
											"sources": [
												{
													"fileName": "src/utils/helpers/toolBase.ts",
													"line": 96,
													"character": 34
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "Tool.updateOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2588,
						"name": "Tool.updateOptions"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1915
					]
				},
				{
					"title": "Properties",
					"children": [
						1948,
						1949,
						1922,
						1920,
						1921,
						1919,
						1925,
						1923,
						1950,
						1918,
						1924
					]
				},
				{
					"title": "Accessors",
					"children": [
						1951
					]
				},
				{
					"title": "Methods",
					"children": [
						1955,
						1946,
						1944,
						1926,
						1929,
						1932,
						1935,
						1938,
						1961,
						1967,
						1970
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/camera/orbitCamera.ts",
					"line": 424,
					"character": 13,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L424"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2553,
					"typeArguments": [
						{
							"type": "reference",
							"id": 1910,
							"name": "OrbitCameraInputOption"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Tool"
				}
			]
		},
		{
			"id": 1977,
			"name": "OrbitCameraInput_TouchScreen",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "观测相机触摸屏输入"
					}
				]
			},
			"children": [
				{
					"id": 1978,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 597,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L597"
						}
					],
					"signatures": [
						{
							"id": 1979,
							"name": "new OrbitCameraInput_TouchScreen",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1980,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1910,
										"name": "OrbitCameraInputOption"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1977,
								"name": "OrbitCameraInput_TouchScreen"
							},
							"overwrites": {
								"type": "reference",
								"id": 2555,
								"name": "Tool.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2554,
						"name": "Tool.constructor"
					}
				},
				{
					"id": 2023,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "AppBase",
						"qualifiedName": "AppBase",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2564,
						"name": "Tool.app"
					}
				},
				{
					"id": 2024,
					"name": "eventHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "ExEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2565,
						"name": "Tool.eventHandler"
					}
				},
				{
					"id": 1982,
					"name": "fromWorldPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 589,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L589"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					}
				},
				{
					"id": 1988,
					"name": "lastPinchDistance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 595,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L595"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1987,
					"name": "lastPinchMidPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 594,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L594"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					}
				},
				{
					"id": 1986,
					"name": "lastTouchPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 593,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L593"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					}
				},
				{
					"id": 1985,
					"name": "pinchMidPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 592,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L592"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					}
				},
				{
					"id": 1983,
					"name": "toWorldPoint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 590,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L590"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					}
				},
				{
					"id": 2025,
					"name": "toolOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 1910,
						"name": "OrbitCameraInputOption"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2567,
						"name": "Tool.toolOptions"
					}
				},
				{
					"id": 1981,
					"name": "toolOptionsDefault",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 583,
							"character": 14,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L583"
						}
					],
					"type": {
						"type": "reference",
						"id": 1910,
						"name": "OrbitCameraInputOption"
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"id": 2566,
						"name": "Tool.toolOptionsDefault"
					}
				},
				{
					"id": 1984,
					"name": "worldDiff",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 591,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L591"
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					}
				},
				{
					"id": 2026,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 43,
							"character": 15
						},
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 52,
							"character": 15
						}
					],
					"getSignature": {
						"id": 2027,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "获得工具的启用状态"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"setSignature": {
						"id": 2028,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "设置工具启用状态（触发启用和禁用时的额外操作）"
								}
							]
						},
						"parameters": [
							{
								"id": 2029,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2569,
						"name": "Tool.enabled"
					}
				},
				{
					"id": 2030,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 63,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2031,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "添加事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2032,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 2033,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1872,
										"name": "K"
									}
								},
								{
									"id": 2034,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 2035,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2574,
								"name": "Tool.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2573,
						"name": "Tool.addListener"
					}
				},
				{
					"id": 1998,
					"name": "calcMidPoint",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 701,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L701"
						}
					],
					"signatures": [
						{
							"id": 1999,
							"name": "calcMidPoint",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "计算中点"
									}
								]
							},
							"parameters": [
								{
									"id": 2000,
									"name": "pointA",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "起点"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2001,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2002,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 701,
															"character": 35,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L701"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2003,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 701,
															"character": 46,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L701"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2002,
														2003
													]
												}
											],
											"sources": [
												{
													"fileName": "src/tools/camera/orbitCamera.ts",
													"line": 701,
													"character": 33,
													"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L701"
												}
											]
										}
									}
								},
								{
									"id": 2004,
									"name": "pointB",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "终点"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2005,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2006,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 701,
															"character": 69,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L701"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2007,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 701,
															"character": 80,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L701"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2006,
														2007
													]
												}
											],
											"sources": [
												{
													"fileName": "src/tools/camera/orbitCamera.ts",
													"line": 701,
													"character": 67,
													"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L701"
												}
											]
										}
									}
								},
								{
									"id": 2008,
									"name": "result",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "中心点"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2009,
					"name": "getPinchDistance",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 715,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L715"
						}
					],
					"signatures": [
						{
							"id": 2010,
							"name": "getPinchDistance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "获得两点距离"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "两点距离"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2011,
									"name": "pointA",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "原始点"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2012,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2013,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 715,
															"character": 39,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L715"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2014,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 715,
															"character": 50,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L715"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2013,
														2014
													]
												}
											],
											"sources": [
												{
													"fileName": "src/tools/camera/orbitCamera.ts",
													"line": 715,
													"character": 37,
													"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L715"
												}
											]
										}
									}
								},
								{
									"id": 2015,
									"name": "pointB",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "目标点"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2016,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2017,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 715,
															"character": 73,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L715"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2018,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 715,
															"character": 84,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L715"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2017,
														2018
													]
												}
											],
											"sources": [
												{
													"fileName": "src/tools/camera/orbitCamera.ts",
													"line": 715,
													"character": 71,
													"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L715"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 2021,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 731,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L731"
						}
					],
					"signatures": [
						{
							"id": 2022,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2594,
								"name": "Tool.onDisable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2593,
						"name": "Tool.onDisable"
					}
				},
				{
					"id": 2019,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 723,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L723"
						}
					],
					"signatures": [
						{
							"id": 2020,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2592,
								"name": "Tool.onEnable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2591,
						"name": "Tool.onEnable"
					}
				},
				{
					"id": 1992,
					"name": "onTouchMove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 638,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L638"
						}
					],
					"signatures": [
						{
							"id": 1993,
							"name": "onTouchMove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "触屏移动事件回调"
									}
								]
							},
							"parameters": [
								{
									"id": 1994,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "触屏移动事件"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "TouchEvent$1",
										"qualifiedName": "TouchEvent$1",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1989,
					"name": "onTouchStartEndCancel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 621,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L621"
						}
					],
					"signatures": [
						{
							"id": 1990,
							"name": "onTouchStartEndCancel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "触屏操作开始，结束，取消事件回调"
									}
								]
							},
							"parameters": [
								{
									"id": 1991,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "触屏开始，结束，取消事件"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "TouchEvent$1",
										"qualifiedName": "TouchEvent$1",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1995,
					"name": "pan",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 676,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L676"
						}
					],
					"signatures": [
						{
							"id": 1996,
							"name": "pan",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "根据触屏中心点位置平移相机"
									}
								]
							},
							"parameters": [
								{
									"id": 1997,
									"name": "midPoint",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "触屏中心点"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2036,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 74,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2037,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "移除事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2038,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 2039,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1878,
										"name": "K"
									}
								},
								{
									"id": 2040,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 2041,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "Tool.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2579,
						"name": "Tool.removeListener"
					}
				},
				{
					"id": 2042,
					"name": "setOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 83,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2043,
							"name": "setOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "设置选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2044,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1910,
										"name": "OrbitCameraInputOption"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2586,
								"name": "Tool.setOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2585,
						"name": "Tool.setOptions"
					}
				},
				{
					"id": 2045,
					"name": "updateOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 96,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2046,
							"name": "updateOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "更新选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2047,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2048,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2051,
													"name": "distanceSensitivity",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 48,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L48"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2049,
													"name": "orbitCamera",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 46,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L46"
														}
													],
													"type": {
														"type": "reference",
														"id": 1794,
														"name": "OrbitCamera"
													}
												},
												{
													"id": 2050,
													"name": "orbitSensitivity",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/camera/orbitCamera.ts",
															"line": 47,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L47"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2051,
														2049,
														2050
													]
												}
											],
											"sources": [
												{
													"fileName": "src/utils/helpers/toolBase.ts",
													"line": 96,
													"character": 34
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "Tool.updateOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2588,
						"name": "Tool.updateOptions"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1978
					]
				},
				{
					"title": "Properties",
					"children": [
						2023,
						2024,
						1982,
						1988,
						1987,
						1986,
						1985,
						1983,
						2025,
						1981,
						1984
					]
				},
				{
					"title": "Accessors",
					"children": [
						2026
					]
				},
				{
					"title": "Methods",
					"children": [
						2030,
						1998,
						2009,
						2021,
						2019,
						1992,
						1989,
						1995,
						2036,
						2042,
						2045
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/camera/orbitCamera.ts",
					"line": 580,
					"character": 13,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L580"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2553,
					"typeArguments": [
						{
							"type": "reference",
							"id": 1910,
							"name": "OrbitCameraInputOption"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Tool"
				}
			]
		},
		{
			"id": 2074,
			"name": "OutlineCamera",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2075,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 2076,
							"name": "new OutlineCamera",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 2077,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 2127,
										"name": "outlineCameraOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2074,
								"name": "OutlineCamera"
							},
							"overwrites": {
								"type": "reference",
								"id": 2555,
								"name": "Tool.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2554,
						"name": "Tool.constructor"
					}
				},
				{
					"id": 2108,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "AppBase",
						"qualifiedName": "AppBase",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2564,
						"name": "Tool.app"
					}
				},
				{
					"id": 2109,
					"name": "eventHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "ExEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2565,
						"name": "Tool.eventHandler"
					}
				},
				{
					"id": 2081,
					"name": "outlineCamera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 49,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L49"
						}
					],
					"type": {
						"type": "reference",
						"name": "CameraComponent",
						"qualifiedName": "CameraComponent",
						"package": "playcanvas"
					}
				},
				{
					"id": 2080,
					"name": "outlineEffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 48,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L48"
						}
					],
					"type": {
						"type": "reference",
						"id": 2613,
						"name": "PostEffectOutline"
					}
				},
				{
					"id": 2079,
					"name": "outlineLayer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 47,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L47"
						}
					],
					"type": {
						"type": "reference",
						"name": "Layer",
						"qualifiedName": "Layer",
						"package": "playcanvas"
					}
				},
				{
					"id": 2110,
					"name": "toolOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 2127,
						"name": "outlineCameraOptions"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2567,
						"name": "Tool.toolOptions"
					}
				},
				{
					"id": 2078,
					"name": "toolOptionsDefault",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 41,
							"character": 14,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L41"
						}
					],
					"type": {
						"type": "reference",
						"id": 2127,
						"name": "outlineCameraOptions"
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"id": 2566,
						"name": "Tool.toolOptionsDefault"
					}
				},
				{
					"id": 2111,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 43,
							"character": 15
						},
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 52,
							"character": 15
						}
					],
					"getSignature": {
						"id": 2112,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "获得工具的启用状态"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"setSignature": {
						"id": 2113,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "设置工具启用状态（触发启用和禁用时的额外操作）"
								}
							]
						},
						"parameters": [
							{
								"id": 2114,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2569,
						"name": "Tool.enabled"
					}
				},
				{
					"id": 2115,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 63,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2116,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "添加事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2117,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 2118,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1872,
										"name": "K"
									}
								},
								{
									"id": 2119,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 2120,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2574,
								"name": "Tool.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2573,
						"name": "Tool.addListener"
					}
				},
				{
					"id": 2098,
					"name": "createRenderTarget",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 153,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L153"
						}
					],
					"signatures": [
						{
							"id": 2099,
							"name": "createRenderTarget",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "创建大小为整个屏幕的renderTarget（用于后期）"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "可以覆盖整个屏幕的renderTarget"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "RenderTarget",
								"qualifiedName": "RenderTarget",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 2092,
					"name": "initEffect",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 111,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L111"
						}
					],
					"signatures": [
						{
							"id": 2093,
							"name": "initEffect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "初始化后期特效"
									}
								]
							},
							"parameters": [
								{
									"id": 2094,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "描边设置"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2095,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2096,
													"name": "color",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "描边颜色"
															}
														]
													},
													"sources": [
														{
															"fileName": "src/tools/camera/outlineCamera.ts",
															"line": 111,
															"character": 34,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L111"
														}
													],
													"type": {
														"type": "reference",
														"name": "Color",
														"qualifiedName": "Color",
														"package": "playcanvas"
													}
												},
												{
													"id": 2097,
													"name": "thickness",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "描边粗细"
															}
														]
													},
													"sources": [
														{
															"fileName": "src/tools/camera/outlineCamera.ts",
															"line": 111,
															"character": 51,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L111"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2096,
														2097
													]
												}
											],
											"sources": [
												{
													"fileName": "src/tools/camera/outlineCamera.ts",
													"line": 111,
													"character": 32,
													"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L111"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2106,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 194,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L194"
						}
					],
					"signatures": [
						{
							"id": 2107,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2594,
								"name": "Tool.onDisable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2593,
						"name": "Tool.onDisable"
					}
				},
				{
					"id": 2104,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 189,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L189"
						}
					],
					"signatures": [
						{
							"id": 2105,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2592,
								"name": "Tool.onEnable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2591,
						"name": "Tool.onEnable"
					}
				},
				{
					"id": 2102,
					"name": "onResize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 184,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L184"
						}
					],
					"signatures": [
						{
							"id": 2103,
							"name": "onResize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "窗口缩放时调用"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2121,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 74,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2122,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "移除事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2123,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 2124,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1878,
										"name": "K"
									}
								},
								{
									"id": 2125,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 2126,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "Tool.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2579,
						"name": "Tool.removeListener"
					}
				},
				{
					"id": 2100,
					"name": "resetEffect",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 175,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 2101,
							"name": "resetEffect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "重设特效，一般为窗口大小改变时调用"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2082,
					"name": "setOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 62,
							"character": 20,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L62"
						}
					],
					"signatures": [
						{
							"id": 2083,
							"name": "setOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "设置外边框相机选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2084,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "外边框相机选项"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2127,
										"name": "outlineCameraOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2586,
								"name": "Tool.setOptions"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2585,
						"name": "Tool.setOptions"
					}
				},
				{
					"id": 2088,
					"name": "toggleOutLine",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 85,
							"character": 11,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L85"
						}
					],
					"signatures": [
						{
							"id": 2089,
							"name": "toggleOutLine",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "开启或关闭描边特效"
									}
								]
							},
							"parameters": [
								{
									"id": 2090,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "节点"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Entity",
										"qualifiedName": "Entity",
										"package": "playcanvas"
									}
								},
								{
									"id": 2091,
									"name": "isOn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2085,
					"name": "updateOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 73,
							"character": 20,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 2086,
							"name": "updateOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "更新外边框相机选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2087,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "外边框相机选项"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2127,
										"name": "outlineCameraOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2589,
								"name": "Tool.updateOptions"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2588,
						"name": "Tool.updateOptions"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2075
					]
				},
				{
					"title": "Properties",
					"children": [
						2108,
						2109,
						2081,
						2080,
						2079,
						2110,
						2078
					]
				},
				{
					"title": "Accessors",
					"children": [
						2111
					]
				},
				{
					"title": "Methods",
					"children": [
						2115,
						2098,
						2092,
						2106,
						2104,
						2102,
						2121,
						2100,
						2082,
						2088,
						2085
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/camera/outlineCamera.ts",
					"line": 38,
					"character": 13,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L38"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2553,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2127,
							"name": "outlineCameraOptions"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Tool"
				}
			]
		},
		{
			"id": 2613,
			"name": "PostEffectOutline",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2614,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/postEffects/posteffectOutline.ts",
							"line": 34,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2615,
							"name": "new PostEffectOutline",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "创建描边特效"
									}
								]
							},
							"parameters": [
								{
									"id": 2616,
									"name": "graphicsDevice",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "当前app的graphicsDevice"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GraphicsDevice",
										"qualifiedName": "GraphicsDevice",
										"package": "playcanvas"
									}
								},
								{
									"id": 2617,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "描边设置"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "OutlineEffectOption"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2613,
								"name": "PostEffectOutline"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.PostEffect.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.PostEffect.constructor"
					}
				},
				{
					"id": 2619,
					"name": "colorData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/utils/postEffects/posteffectOutline.ts",
							"line": 23,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Float32Array",
						"qualifiedName": "Float32Array",
						"package": "typescript"
					}
				},
				{
					"id": 2632,
					"name": "depthMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7328,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.PostEffect.depthMap"
					}
				},
				{
					"id": 2628,
					"name": "device",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The graphics device of the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7307,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "GraphicsDevice",
						"qualifiedName": "GraphicsDevice",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.PostEffect.device"
					}
				},
				{
					"id": 2631,
					"name": "needsDepthBuffer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The property that should to be set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " (by the custom post effect) if a depth map\nis necessary (default is false)."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7327,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.PostEffect.needsDepthBuffer"
					}
				},
				{
					"id": 2620,
					"name": "outlineLayer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/utils/postEffects/posteffectOutline.ts",
							"line": 24,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Layer",
						"qualifiedName": "Layer",
						"package": "playcanvas"
					}
				},
				{
					"id": 2629,
					"name": "shader",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shader definition for the fullscreen quad. Needs to be set by the custom post effect\n(default is null). Used when calling "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "drawFullscreenQuad"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7314,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Shader",
						"qualifiedName": "Shader",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.PostEffect.shader"
					}
				},
				{
					"id": 2618,
					"name": "texture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/utils/postEffects/posteffectOutline.ts",
							"line": 22,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Texture",
						"qualifiedName": "Texture",
						"package": "playcanvas"
					}
				},
				{
					"id": 2630,
					"name": "vertexBuffer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The vertex buffer for the fullscreen quad. Used when calling "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "drawFullscreenQuad"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7320,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "VertexBuffer",
						"qualifiedName": "VertexBuffer",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.PostEffect.vertexBuffer"
					}
				},
				{
					"id": 2626,
					"name": "refresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/postEffects/posteffectOutline.ts",
							"line": 116,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2627,
							"name": "refresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "刷新特效，一般用于窗口尺寸改变时"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2621,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/postEffects/posteffectOutline.ts",
							"line": 100,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2622,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "渲染函数，由引擎自动每帧调用"
									}
								]
							},
							"parameters": [
								{
									"id": 2623,
									"name": "inputTarget",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "引擎输入renderTaget，为当前的渲染画面"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "RenderTarget",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas"
									}
								},
								{
									"id": 2624,
									"name": "outputTarget",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "引擎输出的renderTarget，即经过后期处理之后的画面"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "RenderTarget",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas"
									}
								},
								{
									"id": 2625,
									"name": "rect",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "引擎传入的矩形，用来表示整个屏幕的范围"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.PostEffect.render"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.PostEffect.render"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2614
					]
				},
				{
					"title": "Properties",
					"children": [
						2619,
						2632,
						2628,
						2631,
						2620,
						2629,
						2618,
						2630
					]
				},
				{
					"title": "Methods",
					"children": [
						2626,
						2621
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/postEffects/posteffectOutline.ts",
					"line": 20,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "PostEffect$1",
					"qualifiedName": "PostEffect$1",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 1185,
			"name": "Quat_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1188,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4189,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1189,
							"name": "new Quat_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new Quat instance."
									}
								]
							},
							"parameters": [
								{
									"id": 1190,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion's x component. Defaults to 0. If x is an array\nof length 4, the array will be used to populate all components."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1191,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion's y component. Defaults to 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1192,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion's z component. Defaults to 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1193,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion's w component. Defaults to 1."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1185,
								"name": "Quat_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.constructor"
					}
				},
				{
					"id": 1202,
					"name": "w",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The w component of the quaternion."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4213,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.w"
					}
				},
				{
					"id": 1199,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The x component of the quaternion."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4195,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.x"
					}
				},
				{
					"id": 1200,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The y component of the quaternion."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4201,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.y"
					}
				},
				{
					"id": 1201,
					"name": "z",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The z component of the quaternion."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4207,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.z"
					}
				},
				{
					"id": 1186,
					"name": "IDENTITY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant quaternion set to [0, 0, 0, 1] (the identity)."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4172,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Quat",
						"qualifiedName": "Quat",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.IDENTITY"
					}
				},
				{
					"id": 1187,
					"name": "ZERO",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant quaternion set to [0, 0, 0, 0]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4179,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Quat",
						"qualifiedName": "Quat",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.ZERO"
					}
				},
				{
					"id": 1203,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4224,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1204,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an identical copy of the specified quaternion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A quaternion containing the result of the cloning."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar q = new pc.Quat(-0.11, -0.15, -0.46, 0.87);\nvar qclone = q.clone();\n\nconsole.log(\"The result of the cloning is: \" + q.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.clone"
					}
				},
				{
					"id": 1205,
					"name": "conjugate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4225,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1206,
							"name": "conjugate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.conjugate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.conjugate"
					}
				},
				{
					"id": 1207,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4237,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1208,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Copies the contents of a source quaternion to a destination quaternion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar src = new pc.Quat();\nvar dst = new pc.Quat();\ndst.copy(src, src);\nconsole.log(\"The two quaternions are \" + (src.equals(dst) ? \"equal\" : \"different\"));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1209,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion to be copied."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Quat",
										"qualifiedName": "Quat",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.copy"
					}
				},
				{
					"id": 1210,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4248,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1211,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reports whether two quaternions are equal."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the quaternions are equal and false otherwise."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Quat();\nvar b = new pc.Quat();\nconsole.log(\"The two quaternions are \" + (a.equals(b) ? \"equal\" : \"different\"));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1212,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion to be compared against."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Quat",
										"qualifiedName": "Quat",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.equals"
					}
				},
				{
					"id": 1213,
					"name": "getAxisAngle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4266,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1214,
							"name": "getAxisAngle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets the rotation axis and angle for a given quaternion. If a quaternion is created with\n"
									},
									{
										"kind": "code",
										"text": "`setFromAxisAngle`"
									},
									{
										"kind": "text",
										"text": ", this method will return the same values as provided in the original\nparameter list OR functionally equivalent values."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Angle, in degrees, of the rotation."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar q = new pc.Quat();\nq.setFromAxisAngle(new pc.Vec3(0, 1, 0), 90);\nvar v = new pc.Vec3();\nvar angle = q.getAxisAngle(v);\n// Outputs 90\nconsole.log(angle);\n// Outputs [0, 1, 0]\nconsole.log(v.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1215,
									"name": "axis",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 3-dimensional vector to receive the axis of rotation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.getAxisAngle"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.getAxisAngle"
					}
				},
				{
					"id": 1216,
					"name": "getEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4274,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1217,
							"name": "getEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts the supplied quaternion to Euler angles."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The 3-dimensional vector holding the Euler angles that\ncorrespond to the supplied quaternion."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1218,
									"name": "eulers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 3-dimensional vector to receive the Euler angles."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.getEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.getEulerAngles"
					}
				},
				{
					"id": 1219,
					"name": "invert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4286,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1220,
							"name": "invert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates the inverse of the specified quaternion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Create a quaternion rotated 180 degrees around the y-axis\nvar rot = new pc.Quat().setFromEulerAngles(0, 180, 0);\n\n// Invert in place\nrot.invert();\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.invert"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.invert"
					}
				},
				{
					"id": 1221,
					"name": "length",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4297,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1222,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the magnitude of the specified quaternion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The magnitude of the specified quaternion."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar q = new pc.Quat(0, 0, 0, 5);\nvar len = q.length();\n// Outputs 5\nconsole.log(\"The length of the quaternion is: \" + len);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.length"
					}
				},
				{
					"id": 1223,
					"name": "lengthSq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4308,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1224,
							"name": "lengthSq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the magnitude squared of the specified quaternion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The magnitude of the specified quaternion."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar q = new pc.Quat(3, 4, 0);\nvar lenSq = q.lengthSq();\n// Outputs 25\nconsole.log(\"The length squared of the quaternion is: \" + lenSq);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.lengthSq"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.lengthSq"
					}
				},
				{
					"id": 1225,
					"name": "mul",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4324,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1226,
							"name": "mul",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of multiplying the specified quaternions together."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Quat().setFromEulerAngles(0, 30, 0);\nvar b = new pc.Quat().setFromEulerAngles(0, 60, 0);\n\n// a becomes a 90 degree rotation around the Y axis\n// In other words, a = a * b\na.mul(b);\n\nconsole.log(\"The result of the multiplication is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1227,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion used as the second multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Quat",
										"qualifiedName": "Quat",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.mul"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.mul"
					}
				},
				{
					"id": 1228,
					"name": "mul2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4342,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1229,
							"name": "mul2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of multiplying the specified quaternions together."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Quat().setFromEulerAngles(0, 30, 0);\nvar b = new pc.Quat().setFromEulerAngles(0, 60, 0);\nvar r = new pc.Quat();\n\n// r is set to a 90 degree rotation around the Y axis\n// In other words, r = a * b\nr.mul2(a, b);\n\nconsole.log(\"The result of the multiplication is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1230,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion used as the first multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Quat",
										"qualifiedName": "Quat",
										"package": "playcanvas"
									}
								},
								{
									"id": 1231,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion used as the second multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Quat",
										"qualifiedName": "Quat",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.mul2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.mul2"
					}
				},
				{
					"id": 1232,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4355,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1233,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the specified quaternion converted in place to a unit quaternion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The result of the normalization."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Quat(0, 0, 0, 5);\n\nv.normalize();\n\n// Outputs 0, 0, 0, 1\nconsole.log(\"The result of the vector normalization is: \" + v.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.normalize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.normalize"
					}
				},
				{
					"id": 1234,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4371,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1235,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the specified quaternion to the supplied numerical values."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar q = new pc.Quat();\nq.set(1, 0, 0, 0);\n\n// Outputs 1, 0, 0, 0\nconsole.log(\"The result of the vector set is: \" + q.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1236,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The x component of the quaternion."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1237,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The y component of the quaternion."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1238,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The z component of the quaternion."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1239,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The w component of the quaternion."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.set"
					}
				},
				{
					"id": 1240,
					"name": "setFromAxisAngle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4382,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1241,
							"name": "setFromAxisAngle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets a quaternion from an angular rotation around an axis."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar q = new pc.Quat();\nq.setFromAxisAngle(pc.Vec3.UP, 90);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1242,
									"name": "axis",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "World space axis around which to rotate."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1243,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle to rotate around the given axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.setFromAxisAngle"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.setFromAxisAngle"
					}
				},
				{
					"id": 1244,
					"name": "setFromEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4401,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1245,
							"name": "setFromEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets a quaternion from Euler angles specified in XYZ order."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Create a quaternion from 3 euler angles\nvar q = new pc.Quat();\nq.setFromEulerAngles(45, 90, 180);\n\n// Create the same quaternion from a vector containing the same 3 euler angles\nvar v = new pc.Vec3(45, 90, 180);\nvar r = new pc.Quat();\nr.setFromEulerAngles(v);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1246,
									"name": "ex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle to rotate around X axis in degrees. If ex is a Vec3, the\nthree angles will be read from it instead."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Vec3",
												"qualifiedName": "Vec3",
												"package": "playcanvas"
											}
										]
									}
								},
								{
									"id": 1247,
									"name": "ey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle to rotate around Y axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1248,
									"name": "ez",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle to rotate around Z axis in degrees."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.setFromEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.setFromEulerAngles"
					}
				},
				{
					"id": 1249,
					"name": "setFromMat4",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4415,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1250,
							"name": "setFromMat4",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts the specified 4x4 matrix to a quaternion. Note that since a quaternion is purely a\nrepresentation for orientation, only the translational part of the matrix is lost."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Create a 4x4 rotation matrix of 180 degrees around the y-axis\nvar rot = new pc.Mat4().setFromAxisAngle(pc.Vec3.UP, 180);\n\n// Convert to a quaternion\nvar q = new pc.Quat().setFromMat4(rot);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1251,
									"name": "m",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 4x4 matrix to convert."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Mat4",
										"qualifiedName": "Mat4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.setFromMat4"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.setFromMat4"
					}
				},
				{
					"id": 1194,
					"name": "setLookRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/quat.ts",
							"line": 25,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1195,
							"name": "setLookRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "根据朝向关系设置rotation"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "朝向rotation"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1196,
									"name": "position",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "起点"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1197,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "目标点"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1198,
									"name": "up",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "上方向"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 1252,
					"name": "slerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4435,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1253,
							"name": "slerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Performs a spherical interpolation between two quaternions. The result of the interpolation\nis written to the quaternion calling the function."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar q1 = new pc.Quat(-0.11, -0.15, -0.46, 0.87);\nvar q2 = new pc.Quat(-0.21, -0.21, -0.67, 0.68);\n\nvar result;\nresult = new pc.Quat().slerp(q1, q2, 0);   // Return q1\nresult = new pc.Quat().slerp(q1, q2, 0.5); // Return the midpoint interpolant\nresult = new pc.Quat().slerp(q1, q2, 1);   // Return q2\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1254,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion to interpolate from."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Quat",
										"qualifiedName": "Quat",
										"package": "playcanvas"
									}
								},
								{
									"id": 1255,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quaternion to interpolate to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Quat",
										"qualifiedName": "Quat",
										"package": "playcanvas"
									}
								},
								{
									"id": 1256,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value controlling the interpolation in relation to the two input\nquaternions. The value is in the range 0 to 1, 0 generating q1, 1 generating q2 and anything\nin between generating a spherical interpolation between the two."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Quat",
								"qualifiedName": "Quat",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.slerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.slerp"
					}
				},
				{
					"id": 1261,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4461,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1262,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts the quaternion to string form."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The quaternion in string form."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Quat(0, 0, 0, 1);\n// Outputs [0, 0, 0, 1]\nconsole.log(v.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.toString"
					}
				},
				{
					"id": 1257,
					"name": "transformVector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4451,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1258,
							"name": "transformVector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Transforms a 3-dimensional vector by the specified quaternion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The input vector v transformed by the current instance."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Create a 3-dimensional vector\nvar v = new pc.Vec3(1, 2, 3);\n\n// Create a 4x4 rotation matrix\nvar q = new pc.Quat().setFromEulerAngles(10, 20, 30);\n\nvar tv = q.transformVector(v);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1259,
									"name": "vec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 3-dimensional vector to be transformed."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1260,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional 3-dimensional vector to receive the result of the transformation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Quat.transformVector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Quat.transformVector"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1188
					]
				},
				{
					"title": "Properties",
					"children": [
						1202,
						1199,
						1200,
						1201,
						1186,
						1187
					]
				},
				{
					"title": "Methods",
					"children": [
						1203,
						1205,
						1207,
						1210,
						1213,
						1216,
						1219,
						1221,
						1223,
						1225,
						1228,
						1232,
						1234,
						1240,
						1244,
						1249,
						1194,
						1252,
						1261,
						1257
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/quat.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Quat",
					"qualifiedName": "Quat",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 1263,
			"name": "Ray_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1264,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4090,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1265,
							"name": "new Ray_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Ray instance. The ray is infinite, starting at a given origin and pointing in\na given direction."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Create a new ray starting at the position of this entity and pointing down\n// the entity's negative Z axis\nvar ray = new pc.Ray(this.entity.getPosition(), this.entity.forward);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1266,
									"name": "origin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The starting point of the ray. The constructor takes a reference of\nthis parameter. Defaults to the origin (0, 0, 0)."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1267,
									"name": "direction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The direction of the ray. The constructor takes a reference of\nthis parameter. Defaults to a direction down the world negative Z axis (0, 0, -1)."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1263,
								"name": "Ray_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Ray.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Ray.constructor"
					}
				},
				{
					"id": 1276,
					"name": "direction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The direction of the ray."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4102,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Ray.direction"
					}
				},
				{
					"id": 1275,
					"name": "origin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The starting point of the ray."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4096,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Ray.origin"
					}
				},
				{
					"id": 1268,
					"name": "intersectTriangle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/ray.ts",
							"line": 30,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1269,
							"name": "intersectTriangle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "获得射线和指定三角形的交点"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "射线和三角形的交点"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1270,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "三角形a点坐标"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1271,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "三角形b点坐标"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1272,
									"name": "c",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "三角形c点坐标"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1273,
									"name": "backfaceCulling",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "是否剔除背面"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1274,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "交点（不传则创建新的向量）"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 1277,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4110,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1278,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets origin and direction to the supplied vector values."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1279,
									"name": "origin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The starting point of the ray."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1280,
									"name": "direction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The direction of the ray."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Ray",
								"qualifiedName": "Ray",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Ray.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Ray.set"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1264
					]
				},
				{
					"title": "Properties",
					"children": [
						1276,
						1275
					]
				},
				{
					"title": "Methods",
					"children": [
						1268,
						1277
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/ray.ts",
					"line": 19,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Ray",
					"qualifiedName": "Ray",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 2465,
			"name": "ScriptTypeBase",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Base dummy duplicated pc.ScriptType class to be extended when defining.\r\nAll parameters and useful event-based methods made optional to avoid inadvertedly extending them or having to define them.\r\nCaveat is: tsconfig.json needs to be set to: \"strictNullChecks\": false"
					}
				],
				"blockTags": [
					{
						"tag": "@export",
						"content": []
					}
				]
			},
			"children": [
				{
					"id": 2466,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 2467,
							"name": "new ScriptTypeBase",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2465,
								"name": "ScriptTypeBase"
							}
						}
					]
				},
				{
					"id": 2514,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "pc.Application"
							},
							{
								"kind": "text",
								"text": " that the instance of this type\r\nbelongs to."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 238,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Application",
						"qualifiedName": "Application",
						"package": "playcanvas"
					}
				},
				{
					"id": 2484,
					"name": "attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@function",
								"content": []
							},
							{
								"tag": "@name",
								"content": [
									{
										"kind": "text",
										"text": "pc.EventHandler#on"
									}
								]
							},
							{
								"tag": "@description",
								"content": [
									{
										"kind": "text",
										"text": "Attach an event handler to an event."
									}
								]
							},
							{
								"tag": "@param",
								"name": "name",
								"content": [
									{
										"kind": "text",
										"text": "Name of the event to bind the callback to."
									}
								]
							},
							{
								"tag": "@param",
								"name": "callback",
								"content": [
									{
										"kind": "text",
										"text": "Function that is called when event is fired. Note the callback is limited to 8 arguments."
									}
								]
							},
							{
								"tag": "@param",
								"name": "scope",
								"content": [
									{
										"kind": "text",
										"text": "Object to use as 'this' when the event is fired, defaults to current this."
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Self for chaining."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nobj.on('test', function (a, b) {\r\n    console.log(a + b);\r\n});\r\nobj.fire('test', 1, 2); // prints 3 to the console\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 139,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "ScriptAttributes",
						"qualifiedName": "ScriptAttributes",
						"package": "playcanvas"
					}
				},
				{
					"id": 2468,
					"name": "attributesData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 84,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2469,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 84,
									"character": 21
								}
							],
							"indexSignature": {
								"id": 2470,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 2471,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 2442,
									"name": "AttributeParams"
								}
							}
						}
					}
				},
				{
					"id": 2516,
					"name": "enabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "True if the instance of this type is in running state. False\r\nwhen script is not running, because the Entity or any of its parents are disabled or the\r\nScript Component is disabled or the Script Instance is disabled. When disabled no update\r\nmethods will be called on each tick. initialize and postInitialize methods will run once\r\nwhen the script instance is in "
							},
							{
								"kind": "code",
								"text": "`enabled`"
							},
							{
								"kind": "text",
								"text": " state during app tick."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 250,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2515,
					"name": "entity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "pc.Entity"
							},
							{
								"kind": "text",
								"text": " that the instance of this type belongs to."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 242,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Entity",
						"qualifiedName": "Entity",
						"package": "playcanvas"
					}
				},
				{
					"id": 2495,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 204,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2496,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "pc.EventHandler#fire"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Fire an event, all additional arguments are passed on to the event listener."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.fire('test', 'This is the message');\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2497,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of event to fire."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2498,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "First argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2499,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Second argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2500,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Third argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2501,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fourth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2502,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fifth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2503,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Sixth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2504,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Seventh argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2505,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Eighth argument that is passed to the event handler."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 2511,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 232,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2512,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "pc.EventHandler#hasEvent"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Test if there are any handlers bound to an event name."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the object has handlers bound to the specified event name."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.on('test', function () { }); // bind an event to 'test'\r\nobj.hasEvent('test'); // returns true\r\nobj.hasEvent('hello'); // returns false\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2513,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event to test."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2472,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 94,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2473,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "pc.ScriptType#[initialize]"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Called when script is about to run for the first time."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2490,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 186,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2491,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "pc.EventHandler#off"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Detach an event handler from an event. If callback is not provided then all callbacks are unbound from the event,\r\nif scope is not provided then all events with the callback will be unbound."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar handler = function () {\r\n};\r\nobj.on('test', handler);\r\n\r\nobj.off(); // Removes all events\r\nobj.off('test'); // Removes all events called 'test'\r\nobj.off('test', handler); // Removes all handler functions, called 'test'\r\nobj.off('test', handler, this); // Removes all hander functions, called 'test' with scope this\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2492,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to unbind."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2493,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to be unbound."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 2494,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scope that was used as the this when the event is fired."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 2485,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 166,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2486,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "pc.ScriptType#[initialize]"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Called when script is about to run for the first time."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2487,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2488,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 2489,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 2506,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 220,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2507,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "pc.EventHandler#once"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Attach an event handler to an event. This handler will be removed after being fired once."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nobj.once('test', function (a, b) {\r\n    console.log(a + b);\r\n});\r\nobj.fire('test', 1, 2); // prints 3 to the console\r\nobj.fire('test', 1, 2); // not going to get handled\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2508,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Name of the event to bind the callback to."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2509,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function that is called when event is fired. Note the callback is limited to 8 arguments."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "HandleEventCallback",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas"
									}
								},
								{
									"id": 2510,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object to use as 'this' when the event is fired, defaults to current this."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "EventHandler",
								"qualifiedName": "EventHandler",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 2474,
					"name": "postInitialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 100,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2475,
							"name": "postInitialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "pc.ScriptType#[postInitialize]"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Called after all initialize methods are executed in the same tick or enabling chain of actions."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2479,
					"name": "postUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 114,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2480,
							"name": "postUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "pc.ScriptType#[postUpdate]"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Called for enabled (running state) scripts on each tick, after update."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2481,
									"name": "dt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The delta time in seconds since the last frame."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2482,
					"name": "swap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 122,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2483,
							"name": "swap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "pc.ScriptType#[swap]"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Called when a ScriptType that already exists in the registry\r\ngets redefined. If the new ScriptType has a "
											},
											{
												"kind": "code",
												"text": "`swap`"
											},
											{
												"kind": "text",
												"text": " method in its prototype,\r\nthen it will be executed to perform hot-reload at runtime."
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2476,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 107,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2477,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@function",
										"content": []
									},
									{
										"tag": "@name",
										"content": [
											{
												"kind": "text",
												"text": "pc.ScriptType#[update]"
											}
										]
									},
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "Called for enabled (running state) scripts on each tick."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2478,
									"name": "dt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The delta time in seconds since the last frame."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2466
					]
				},
				{
					"title": "Properties",
					"children": [
						2514,
						2484,
						2468,
						2516,
						2515
					]
				},
				{
					"title": "Methods",
					"children": [
						2495,
						2511,
						2472,
						2490,
						2485,
						2506,
						2474,
						2479,
						2482,
						2476
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/helpers/create-script-decorator.ts",
					"line": 81,
					"character": 13
				}
			]
		},
		{
			"id": 2296,
			"name": "Selector",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2297,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 61,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L61"
						}
					],
					"signatures": [
						{
							"id": 2298,
							"name": "new Selector",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "创建模型点选器"
									}
								]
							},
							"parameters": [
								{
									"id": 2299,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2354,
										"name": "SelectorOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2296,
								"name": "Selector"
							},
							"overwrites": {
								"type": "reference",
								"id": 2555,
								"name": "Tool.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2554,
						"name": "Tool.constructor"
					}
				},
				{
					"id": 2321,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "AppBase",
						"qualifiedName": "AppBase",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2564,
						"name": "Tool.app"
					}
				},
				{
					"id": 2322,
					"name": "eventHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SelectorEventsMap"
							}
						],
						"name": "ExEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2565,
						"name": "Tool.eventHandler"
					}
				},
				{
					"id": 2302,
					"name": "pickLayers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 54,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L54"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Layer",
							"qualifiedName": "Layer",
							"package": "playcanvas"
						}
					}
				},
				{
					"id": 2301,
					"name": "picker",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 53,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L53"
						}
					],
					"type": {
						"type": "reference",
						"name": "Picker",
						"qualifiedName": "Picker",
						"package": "playcanvas"
					}
				},
				{
					"id": 2303,
					"name": "preSelectedNode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 55,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L55"
						}
					],
					"type": {
						"type": "reference",
						"name": "GraphNode",
						"qualifiedName": "GraphNode",
						"package": "playcanvas"
					}
				},
				{
					"id": 2323,
					"name": "toolOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 2354,
						"name": "SelectorOptions"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2567,
						"name": "Tool.toolOptions"
					}
				},
				{
					"id": 2300,
					"name": "toolOptionsDefault",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 42,
							"character": 14,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L42"
						}
					],
					"type": {
						"type": "reference",
						"id": 2354,
						"name": "SelectorOptions"
					},
					"defaultValue": "...",
					"overwrites": {
						"type": "reference",
						"id": 2566,
						"name": "Tool.toolOptionsDefault"
					}
				},
				{
					"id": 2324,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 43,
							"character": 15
						},
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 52,
							"character": 15
						}
					],
					"getSignature": {
						"id": 2325,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "获得工具的启用状态"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"setSignature": {
						"id": 2326,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "设置工具启用状态（触发启用和禁用时的额外操作）"
								}
							]
						},
						"parameters": [
							{
								"id": 2327,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "Tool.enabled"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2569,
						"name": "Tool.enabled"
					}
				},
				{
					"id": 2328,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 63,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2329,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "添加事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2330,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": "select"
									}
								}
							],
							"parameters": [
								{
									"id": 2331,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1872,
										"name": "K"
									}
								},
								{
									"id": 2332,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 1872,
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "SelectorEventsMap"
										}
									}
								},
								{
									"id": 2333,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2574,
								"name": "Tool.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2573,
						"name": "Tool.addListener"
					}
				},
				{
					"id": 2313,
					"name": "getModelHasTag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 126,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L126"
						}
					],
					"signatures": [
						{
							"id": 2314,
							"name": "getModelHasTag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "从下至上找到含有某个标签的模型对象"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "包含标签的模型对象"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2315,
									"name": "model",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "模型"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GraphNode",
										"qualifiedName": "GraphNode",
										"package": "playcanvas"
									}
								},
								{
									"id": 2316,
									"name": "tag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "标签"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Entity",
								"qualifiedName": "Entity",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 2319,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 140,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L140"
						}
					],
					"signatures": [
						{
							"id": 2320,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2594,
								"name": "Tool.onDisable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2593,
						"name": "Tool.onDisable"
					}
				},
				{
					"id": 2317,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 135,
							"character": 23,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L135"
						}
					],
					"signatures": [
						{
							"id": 2318,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2592,
								"name": "Tool.onEnable"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2591,
						"name": "Tool.onEnable"
					}
				},
				{
					"id": 2307,
					"name": "pick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 88,
							"character": 12,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L88"
						}
					],
					"signatures": [
						{
							"id": 2308,
							"name": "pick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "点选模型"
									}
								]
							},
							"parameters": [
								{
									"id": 2309,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "输入事件"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2310,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2311,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "输入事件屏幕x坐标"
															}
														]
													},
													"sources": [
														{
															"fileName": "src/tools/selector/selector.ts",
															"line": 88,
															"character": 26,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L88"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2312,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "输入事件屏幕y坐标"
															}
														]
													},
													"sources": [
														{
															"fileName": "src/tools/selector/selector.ts",
															"line": 88,
															"character": 37,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L88"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2311,
														2312
													]
												}
											],
											"sources": [
												{
													"fileName": "src/tools/selector/selector.ts",
													"line": 88,
													"character": 24,
													"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L88"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2334,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 74,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2335,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "移除事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2336,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "literal",
										"value": "select"
									}
								}
							],
							"parameters": [
								{
									"id": 2337,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1878,
										"name": "K"
									}
								},
								{
									"id": 2338,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 1878,
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"name": "SelectorEventsMap"
										}
									}
								},
								{
									"id": 2339,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2580,
								"name": "Tool.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2579,
						"name": "Tool.removeListener"
					}
				},
				{
					"id": 2304,
					"name": "setOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 73,
							"character": 20,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 2305,
							"name": "setOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "设置模型点选器"
									}
								]
							},
							"parameters": [
								{
									"id": 2306,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2354,
										"name": "SelectorOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 2586,
								"name": "Tool.setOptions"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 2585,
						"name": "Tool.setOptions"
					}
				},
				{
					"id": 2340,
					"name": "updateOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 96,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2341,
							"name": "updateOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "更新选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2342,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2343,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2353,
													"name": "excludeLayers",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/selector/selector.ts",
															"line": 36,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L36"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "Layer",
															"qualifiedName": "Layer",
															"package": "playcanvas"
														}
													}
												},
												{
													"id": 2344,
													"name": "inputHandler",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/selector/selector.ts",
															"line": 29,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L29"
														}
													],
													"type": {
														"type": "reference",
														"id": 2553,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "reference",
																"id": 2132,
																"name": "InputEventsMap"
															}
														],
														"name": "Tool"
													}
												},
												{
													"id": 2346,
													"name": "pickAreaScale",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/selector/selector.ts",
															"line": 31,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L31"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2345,
													"name": "pickCamera",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/selector/selector.ts",
															"line": 30,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L30"
														}
													],
													"type": {
														"type": "reference",
														"name": "CameraComponent",
														"qualifiedName": "CameraComponent",
														"package": "playcanvas"
													}
												},
												{
													"id": 2350,
													"name": "pickCondition",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/selector/selector.ts",
															"line": 35,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L35"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 2351,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/selector/selector.ts",
																	"line": 35,
																	"character": 20,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L35"
																}
															],
															"signatures": [
																{
																	"id": 2352,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															]
														}
													}
												},
												{
													"id": 2348,
													"name": "pickNull",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/selector/selector.ts",
															"line": 33,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L33"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2349,
													"name": "pickSame",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/selector/selector.ts",
															"line": 34,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L34"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 2347,
													"name": "pickTag",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/tools/selector/selector.ts",
															"line": 32,
															"character": 4,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L32"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2353,
														2344,
														2346,
														2345,
														2350,
														2348,
														2349,
														2347
													]
												}
											],
											"sources": [
												{
													"fileName": "src/utils/helpers/toolBase.ts",
													"line": 96,
													"character": 34
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2589,
								"name": "Tool.updateOptions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 2588,
						"name": "Tool.updateOptions"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2297
					]
				},
				{
					"title": "Properties",
					"children": [
						2321,
						2322,
						2302,
						2301,
						2303,
						2323,
						2300
					]
				},
				{
					"title": "Accessors",
					"children": [
						2324
					]
				},
				{
					"title": "Methods",
					"children": [
						2328,
						2313,
						2319,
						2317,
						2307,
						2334,
						2304,
						2340
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/selector/selector.ts",
					"line": 40,
					"character": 13,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L40"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 2553,
					"typeArguments": [
						{
							"type": "reference",
							"id": 2354,
							"name": "SelectorOptions"
						},
						{
							"type": "reference",
							"name": "SelectorEventsMap"
						}
					],
					"name": "Tool"
				}
			]
		},
		{
			"id": 1281,
			"name": "Texture_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1290,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6236,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1291,
							"name": "new Texture_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new Texture instance."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// Create a 8x8x24-bit texture\nvar texture = new pc.Texture(graphicsDevice, {\n    width: 8,\n    height: 8,\n    format: pc.PIXELFORMAT_R8_G8_B8\n});\n\n// Fill the texture with a gradient\nvar pixels = texture.lock();\nvar count = 0;\nfor (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n        pixels[count++] = i * 32;\n        pixels[count++] = j * 32;\n        pixels[count++] = 255;\n    }\n}\ntexture.unlock();\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1292,
									"name": "graphicsDevice",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The graphics device used to manage this texture."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GraphicsDevice",
										"qualifiedName": "GraphicsDevice",
										"package": "playcanvas"
									}
								},
								{
									"id": 1293,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object for passing optional arguments."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1294,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1304,
													"name": "addressU",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The repeat mode to use in the U direction. Defaults to\n"
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "ADDRESS_REPEAT"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6246,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1305,
													"name": "addressV",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The repeat mode to use in the V direction. Defaults to\n"
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "ADDRESS_REPEAT"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6247,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1306,
													"name": "addressW",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The repeat mode to use in the W direction. Defaults to\n"
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "ADDRESS_REPEAT"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6248,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1303,
													"name": "anisotropy",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The level of anisotropic filtering to use. Defaults\nto 1."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6245,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1315,
													"name": "compareFunc",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Comparison function when compareOnRead is enabled\n(WebGL2 only). Can be:\n\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "FUNC_LESS"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "FUNC_LESSEQUAL"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "FUNC_GREATER"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "FUNC_GREATEREQUAL"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "FUNC_EQUAL"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "FUNC_NOTEQUAL"
															},
															{
																"kind": "text",
																"text": "\n\nDefaults to "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "FUNC_LESS"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6257,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1314,
													"name": "compareOnRead",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "When enabled, and if texture format is\n"
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_DEPTH"
															},
															{
																"kind": "text",
																"text": " or "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_DEPTHSTENCIL"
															},
															{
																"kind": "text",
																"text": ", hardware PCF is enabled for\nthis texture, and you can get filtered results of comparison using texture() in your shader\n(WebGL2 only). Defaults to false."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6256,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1308,
													"name": "cubemap",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Specifies whether the texture is to be a cubemap.\nDefaults to false."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6250,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1298,
													"name": "depth",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The number of depth slices in a 3D texture (WebGL2 only).\nDefaults to 1 (single 2D image)."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6240,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1311,
													"name": "fixCubemapSeams",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Specifies whether this cubemap texture requires\nspecial seam fixing shader code to look right. Defaults to false."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6253,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1312,
													"name": "flipY",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Specifies whether the texture should be flipped in the\nY-direction. Only affects textures with a source that is an image, canvas or video element.\nDoes not affect cubemaps, compressed textures or textures set from raw pixel data. Defaults\nto false."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6254,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1299,
													"name": "format",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The pixel format of the texture. Can be:\n\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_A8"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_L8"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_L8_A8"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_R5_G6_B5"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_R5_G5_B5_A1"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_R4_G4_B4_A4"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_R8_G8_B8"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_R8_G8_B8_A8"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_DXT1"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_DXT3"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_DXT5"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_RGB16F"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_RGBA16F"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_RGB32F"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_RGBA32F"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_ETC1"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_PVRTC_2BPP_RGB_1"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_PVRTC_2BPP_RGBA_1"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_PVRTC_4BPP_RGB_1"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_PVRTC_4BPP_RGBA_1"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_111110F"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_ASTC_4x4"
															},
															{
																"kind": "text",
																"text": ">/li>\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_ATC_RGB"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_ATC_RGBA"
															},
															{
																"kind": "text",
																"text": "\n\nDefaults to "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "PIXELFORMAT_R8_G8_B8_A8"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6241,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1297,
													"name": "height",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The height of the texture in pixels. Defaults to 4."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6239,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1302,
													"name": "magFilter",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The magnification filter type to use. Defaults to\n"
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "FILTER_LINEAR"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6244,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1301,
													"name": "minFilter",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The minification filter type to use. Defaults to\n"
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "FILTER_LINEAR_MIPMAP_LINEAR"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6243,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1307,
													"name": "mipmaps",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "When enabled try to generate or use mipmaps for this\ntexture. Default is true."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6249,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1295,
													"name": "name",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The name of the texture."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6237,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1313,
													"name": "premultiplyAlpha",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "If true, the alpha channel of the texture (if\npresent) is multiplied into the color channels. Defaults to false."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6255,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1300,
													"name": "projection",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The projection type of the texture, used when the\ntexture represents an environment. Can be:\n\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "TEXTUREPROJECTION_NONE"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "TEXTUREPROJECTION_CUBE"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "TEXTUREPROJECTION_EQUIRECT"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "TEXTUREPROJECTION_OCTAHEDRAL"
															},
															{
																"kind": "text",
																"text": "\n\nDefaults to "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "TEXTUREPROJECTION_CUBE"
															},
															{
																"kind": "text",
																"text": " if options.cubemap is specified, otherwise\n"
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "TEXTUREPROJECTION_NONE"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6242,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1310,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Specifies the image type, see "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "TEXTURETYPE_DEFAULT"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6252,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1309,
													"name": "volume",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Specifies whether the texture is to be a 3D volume\n(WebGL2 only). Defaults to false."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6251,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1296,
													"name": "width",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The width of the texture in pixels. Defaults to 4."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6238,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1304,
														1305,
														1306,
														1303,
														1315,
														1314,
														1308,
														1298,
														1311,
														1312,
														1299,
														1297,
														1302,
														1301,
														1307,
														1295,
														1313,
														1300,
														1310,
														1309,
														1296
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
													"line": 6236,
													"character": 58
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1281,
								"name": "Texture_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.constructor"
					}
				},
				{
					"id": 1346,
					"name": "_addressU",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6282,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._addressU"
					}
				},
				{
					"id": 1347,
					"name": "_addressV",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6283,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._addressV"
					}
				},
				{
					"id": 1348,
					"name": "_addressW",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6284,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._addressW"
					}
				},
				{
					"id": 1345,
					"name": "_anisotropy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6281,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._anisotropy"
					}
				},
				{
					"id": 1350,
					"name": "_compareFunc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6286,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._compareFunc"
					}
				},
				{
					"id": 1349,
					"name": "_compareOnRead",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6285,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._compareOnRead"
					}
				},
				{
					"id": 1353,
					"name": "_compressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6289,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._compressed"
					}
				},
				{
					"id": 1336,
					"name": "_cubemap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6272,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._cubemap"
					}
				},
				{
					"id": 1332,
					"name": "_depth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6268,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._depth"
					}
				},
				{
					"id": 1339,
					"name": "_flipY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6275,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._flipY"
					}
				},
				{
					"id": 1333,
					"name": "_format",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6269,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._format"
					}
				},
				{
					"id": 1356,
					"name": "_gpuSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6292,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._gpuSize"
					}
				},
				{
					"id": 1331,
					"name": "_height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6267,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._height"
					}
				},
				{
					"id": 1354,
					"name": "_invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6290,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._invalid"
					}
				},
				{
					"id": 1341,
					"name": "_isRenderTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6277,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._isRenderTarget"
					}
				},
				{
					"id": 1352,
					"name": "_levels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6288,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._levels"
					}
				},
				{
					"id": 1436,
					"name": "_levelsUpdated",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6497,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "boolean"
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._levelsUpdated"
					}
				},
				{
					"id": 1355,
					"name": "_lockedLevel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6291,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._lockedLevel"
					}
				},
				{
					"id": 1344,
					"name": "_magFilter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6280,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._magFilter"
					}
				},
				{
					"id": 1343,
					"name": "_minFilter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6279,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._minFilter"
					}
				},
				{
					"id": 1342,
					"name": "_mipmaps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6278,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._mipmaps"
					}
				},
				{
					"id": 1437,
					"name": "_mipmapsUploaded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6498,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._mipmapsUploaded"
					}
				},
				{
					"id": 1406,
					"name": "_needsMipmapsUpload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6414,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._needsMipmapsUpload"
					}
				},
				{
					"id": 1425,
					"name": "_needsUpload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6486,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._needsUpload"
					}
				},
				{
					"id": 1438,
					"name": "_parameterFlags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6499,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._parameterFlags"
					}
				},
				{
					"id": 1316,
					"name": "_pixelData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/texture.ts",
							"line": 37,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Uint8ClampedArray",
						"qualifiedName": "Uint8ClampedArray",
						"package": "typescript"
					}
				},
				{
					"id": 1340,
					"name": "_premultiplyAlpha",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6276,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._premultiplyAlpha"
					}
				},
				{
					"id": 1337,
					"name": "_volume",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6273,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._volume"
					}
				},
				{
					"id": 1330,
					"name": "_width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6266,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture._width"
					}
				},
				{
					"id": 1328,
					"name": "device",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6259,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "GraphicsDevice",
						"qualifiedName": "GraphicsDevice",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.device"
					}
				},
				{
					"id": 1338,
					"name": "fixCubemapSeams",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6274,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.fixCubemapSeams"
					}
				},
				{
					"id": 1357,
					"name": "impl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6293,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.impl"
					}
				},
				{
					"id": 1329,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the texture. Defaults to null."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6265,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.name"
					}
				},
				{
					"id": 1351,
					"name": "profilerHint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6287,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.profilerHint"
					}
				},
				{
					"id": 1335,
					"name": "projection",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6271,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.projection"
					}
				},
				{
					"id": 1334,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6270,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.type"
					}
				},
				{
					"id": 1374,
					"name": "addressU",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6343,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6344,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1375,
						"name": "addressU",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.addressU"
						}
					},
					"setSignature": {
						"id": 1376,
						"name": "addressU",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The addressing mode to be applied to the texture horizontally. Can be:\n\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ADDRESS_REPEAT"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ADDRESS_CLAMP_TO_EDGE"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ADDRESS_MIRRORED_REPEAT"
								}
							]
						},
						"parameters": [
							{
								"id": 1377,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.addressU"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.addressU"
					}
				},
				{
					"id": 1378,
					"name": "addressV",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6354,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6355,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1379,
						"name": "addressV",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.addressV"
						}
					},
					"setSignature": {
						"id": 1380,
						"name": "addressV",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The addressing mode to be applied to the texture vertically. Can be:\n\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ADDRESS_REPEAT"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ADDRESS_CLAMP_TO_EDGE"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ADDRESS_MIRRORED_REPEAT"
								}
							]
						},
						"parameters": [
							{
								"id": 1381,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.addressV"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.addressV"
					}
				},
				{
					"id": 1382,
					"name": "addressW",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6365,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6366,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1383,
						"name": "addressW",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.addressW"
						}
					},
					"setSignature": {
						"id": 1384,
						"name": "addressW",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The addressing mode to be applied to the 3D texture depth (WebGL2 only). Can be:\n\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ADDRESS_REPEAT"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ADDRESS_CLAMP_TO_EDGE"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "ADDRESS_MIRRORED_REPEAT"
								}
							]
						},
						"parameters": [
							{
								"id": 1385,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.addressW"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.addressW"
					}
				},
				{
					"id": 1394,
					"name": "anisotropy",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6396,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6397,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1395,
						"name": "anisotropy",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.anisotropy"
						}
					},
					"setSignature": {
						"id": 1396,
						"name": "anisotropy",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Integer value specifying the level of anisotropic to apply to the texture ranging from 1 (no\nanisotropic filtering) to the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "GraphicsDevice"
								},
								{
									"kind": "text",
									"text": " property maxAnisotropy."
								}
							]
						},
						"parameters": [
							{
								"id": 1397,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.anisotropy"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.anisotropy"
					}
				},
				{
					"id": 1398,
					"name": "autoMipmap",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6405,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6406,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1399,
						"name": "autoMipmap",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.autoMipmap"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.autoMipmap"
					}
				},
				{
					"id": 1390,
					"name": "compareFunc",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6388,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6389,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1391,
						"name": "compareFunc",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.compareFunc"
						}
					},
					"setSignature": {
						"id": 1392,
						"name": "compareFunc",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Comparison function when compareOnRead is enabled (WebGL2 only). Possible values:\n\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FUNC_LESS"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FUNC_LESSEQUAL"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FUNC_GREATER"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FUNC_GREATEREQUAL"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FUNC_EQUAL"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FUNC_NOTEQUAL"
								}
							]
						},
						"parameters": [
							{
								"id": 1393,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.compareFunc"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.compareFunc"
					}
				},
				{
					"id": 1386,
					"name": "compareOnRead",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6374,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6375,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1387,
						"name": "compareOnRead",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.compareOnRead"
						}
					},
					"setSignature": {
						"id": 1388,
						"name": "compareOnRead",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "When enabled, and if texture format is "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_DEPTH"
								},
								{
									"kind": "text",
									"text": " or\n"
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_DEPTHSTENCIL"
								},
								{
									"kind": "text",
									"text": ", hardware PCF is enabled for this texture, and you can get\nfiltered results of comparison using texture() in your shader (WebGL2 only)."
								}
							]
						},
						"parameters": [
							{
								"id": 1389,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.compareOnRead"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.compareOnRead"
					}
				},
				{
					"id": 1415,
					"name": "cubemap",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6469,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1416,
						"name": "cubemap",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Returns true if this texture is a cube map and false otherwise."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.cubemap"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.cubemap"
					}
				},
				{
					"id": 1411,
					"name": "depth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6432,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1412,
						"name": "depth",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The number of depth slices in a 3D texture (WebGL2 only)."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.depth"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.depth"
					}
				},
				{
					"id": 1432,
					"name": "encoding",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6495,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1433,
						"name": "encoding",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "srgb"
								},
								{
									"type": "literal",
									"value": "linear"
								},
								{
									"type": "literal",
									"value": "rgbm"
								},
								{
									"type": "literal",
									"value": "rgbe"
								}
							]
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.encoding"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.encoding"
					}
				},
				{
					"id": 1421,
					"name": "flipY",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6484,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6485,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1422,
						"name": "flipY",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.flipY"
						}
					},
					"setSignature": {
						"id": 1423,
						"name": "flipY",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Specifies whether the texture should be flipped in the Y-direction. Only affects textures\nwith a source that is an image, canvas or video element. Does not affect cubemaps,\ncompressed textures or textures set from raw pixel data. Defaults to true."
								}
							]
						},
						"parameters": [
							{
								"id": 1424,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.flipY"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.flipY"
					}
				},
				{
					"id": 1413,
					"name": "format",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6463,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1414,
						"name": "format",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The pixel format of the texture. Can be:\n\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_A8"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_L8"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_L8_A8"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_R5_G6_B5"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_R5_G5_B5_A1"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_R4_G4_B4_A4"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_R8_G8_B8"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_R8_G8_B8_A8"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_DXT1"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_DXT3"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_DXT5"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_RGB16F"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_RGBA16F"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_RGB32F"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_RGBA32F"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_ETC1"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_PVRTC_2BPP_RGB_1"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_PVRTC_2BPP_RGBA_1"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_PVRTC_4BPP_RGB_1"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_PVRTC_4BPP_RGBA_1"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_111110F"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_ASTC_4x4"
								},
								{
									"kind": "text",
									"text": ">/li>\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_ATC_RGB"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "PIXELFORMAT_ATC_RGBA"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.format"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.format"
					}
				},
				{
					"id": 1417,
					"name": "gpuSize",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6470,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1418,
						"name": "gpuSize",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.gpuSize"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.gpuSize"
					}
				},
				{
					"id": 1409,
					"name": "height",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6426,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1410,
						"name": "height",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The height of the texture in pixels."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.height"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.height"
					}
				},
				{
					"id": 1370,
					"name": "magFilter",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6332,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6333,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1371,
						"name": "magFilter",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.magFilter"
						}
					},
					"setSignature": {
						"id": 1372,
						"name": "magFilter",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The magnification filter to be applied to the texture. Can be:\n\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FILTER_NEAREST"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FILTER_LINEAR"
								}
							]
						},
						"parameters": [
							{
								"id": 1373,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.magFilter"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.magFilter"
					}
				},
				{
					"id": 1366,
					"name": "minFilter",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6322,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6323,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1367,
						"name": "minFilter",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.minFilter"
						}
					},
					"setSignature": {
						"id": 1368,
						"name": "minFilter",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The minification filter to be applied to the texture. Can be:\n\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FILTER_NEAREST"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FILTER_LINEAR"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FILTER_NEAREST_MIPMAP_NEAREST"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FILTER_NEAREST_MIPMAP_LINEAR"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FILTER_LINEAR_MIPMAP_NEAREST"
								},
								{
									"kind": "text",
									"text": "\n- "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "FILTER_LINEAR_MIPMAP_LINEAR"
								}
							]
						},
						"parameters": [
							{
								"id": 1369,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.minFilter"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.minFilter"
					}
				},
				{
					"id": 1402,
					"name": "mipmaps",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6412,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6413,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1403,
						"name": "mipmaps",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.mipmaps"
						}
					},
					"setSignature": {
						"id": 1404,
						"name": "mipmaps",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Defines if texture should generate/upload mipmaps if possible."
								}
							]
						},
						"parameters": [
							{
								"id": 1405,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.mipmaps"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.mipmaps"
					}
				},
				{
					"id": 1317,
					"name": "pixelData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/texture.ts",
							"line": 41,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1318,
						"name": "pixelData",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "该贴图的像素数据"
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Uint8ClampedArray",
							"qualifiedName": "Uint8ClampedArray",
							"package": "typescript"
						}
					}
				},
				{
					"id": 1430,
					"name": "pot",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6494,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1431,
						"name": "pot",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Returns true if all dimensions of the texture are power of two, and false otherwise."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.pot"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.pot"
					}
				},
				{
					"id": 1426,
					"name": "premultiplyAlpha",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6487,
							"character": 8
						},
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6488,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1427,
						"name": "premultiplyAlpha",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.premultiplyAlpha"
						}
					},
					"setSignature": {
						"id": 1428,
						"name": "premultiplyAlpha",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"id": 1429,
								"name": "arg",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {
									"isExternal": true
								},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.premultiplyAlpha"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.premultiplyAlpha"
					}
				},
				{
					"id": 1419,
					"name": "volume",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6476,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1420,
						"name": "volume",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Returns true if this texture is a 3D volume and false otherwise."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.volume"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.volume"
					}
				},
				{
					"id": 1407,
					"name": "width",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6420,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1408,
						"name": "width",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {
							"isExternal": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The width of the texture in pixels."
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"inheritedFrom": {
							"type": "reference",
							"name": "pc.Texture.width"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.width"
					}
				},
				{
					"id": 1358,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6297,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1359,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Frees resources associated with this texture."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.destroy"
					}
				},
				{
					"id": 1434,
					"name": "dirtyAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6496,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1435,
							"name": "dirtyAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.dirtyAll"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.dirtyAll"
					}
				},
				{
					"id": 1319,
					"name": "getPixelData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/texture.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1320,
							"name": "getPixelData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "获得该贴图的像素数据"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "贴图的像素数据"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Uint8ClampedArray",
								"qualifiedName": "Uint8ClampedArray",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1450,
					"name": "getSource",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6541,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1451,
							"name": "getSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the pixel data of the texture. If this is a cubemap then an array of 6 images will be\nreturned otherwise a single image."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The source image of this texture. Can be null if source not\nassigned for specific image level."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1452,
									"name": "mipLevel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative integer specifying the image level of detail.\nDefaults to 0, which represents the base image source. A level value of N, that is greater\nthan 0, represents the image source for the Nth mipmap reduction level."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "HTMLImageElement",
								"qualifiedName": "HTMLImageElement",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.getSource"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.getSource"
					}
				},
				{
					"id": 1439,
					"name": "lock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6515,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1440,
							"name": "lock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Locks a miplevel of the texture, returning a typed array to be filled with pixel data."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A typed array containing the pixel data of\nthe locked mip level."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1441,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional options object. Valid properties are as follows:"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1442,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 1444,
													"name": "face",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "If the texture is a cubemap, this is the index of the face\nto lock."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6517,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1443,
													"name": "level",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The mip level to lock with 0 being the top level. Defaults\nto 0."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6516,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1445,
													"name": "mode",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The lock mode. Can be:\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "TEXTURELOCK_READ"
															},
															{
																"kind": "text",
																"text": "\n- "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "TEXTURELOCK_WRITE"
															},
															{
																"kind": "text",
																"text": "\nDefaults to "
															},
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "TEXTURELOCK_WRITE"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 6518,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1444,
														1443,
														1445
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
													"line": 6515,
													"character": 19
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Uint8Array",
										"qualifiedName": "Uint8Array",
										"package": "typescript"
									},
									{
										"type": "reference",
										"name": "Uint16Array",
										"qualifiedName": "Uint16Array",
										"package": "typescript"
									},
									{
										"type": "reference",
										"name": "Float32Array",
										"qualifiedName": "Float32Array",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.lock"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.lock"
					}
				},
				{
					"id": 1446,
					"name": "setSource",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6530,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1447,
							"name": "setSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the pixel data of the texture from a canvas, image, video DOM element. If the texture is\na cubemap, the supplied source must be an array of 6 canvases, images or videos."
									}
								]
							},
							"parameters": [
								{
									"id": 1448,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A\ncanvas, image or video element, or an array of 6 canvas, image or video elements."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "HTMLCanvasElement",
												"qualifiedName": "HTMLCanvasElement",
												"package": "typescript"
											},
											{
												"type": "reference",
												"name": "HTMLImageElement",
												"qualifiedName": "HTMLImageElement",
												"package": "typescript"
											},
											{
												"type": "reference",
												"name": "HTMLVideoElement",
												"qualifiedName": "HTMLVideoElement",
												"package": "typescript"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "HTMLCanvasElement",
													"qualifiedName": "HTMLCanvasElement",
													"package": "typescript"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "HTMLImageElement",
													"qualifiedName": "HTMLImageElement",
													"package": "typescript"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "HTMLVideoElement",
													"qualifiedName": "HTMLVideoElement",
													"package": "typescript"
												}
											}
										]
									}
								},
								{
									"id": 1449,
									"name": "mipLevel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative integer specifying the image level of detail.\nDefaults to 0, which represents the base image source. A level value of N, that is greater\nthan 0, represents the image source for the Nth mipmap reduction level."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.setSource"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.setSource"
					}
				},
				{
					"id": 1321,
					"name": "texture2D",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/texture.ts",
							"line": 75,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1322,
							"name": "texture2D",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "根据uv读取贴图的颜色值"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"parameters": [
								{
									"id": 1323,
									"name": "uv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "uv值"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1324,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1325,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/extensions/texture.ts",
															"line": 75,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1326,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/extensions/texture.ts",
															"line": 75,
															"character": 31
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1325,
														1326
													]
												}
											],
											"sources": [
												{
													"fileName": "src/extensions/texture.ts",
													"line": 75,
													"character": 18
												}
											]
										}
									}
								},
								{
									"id": 1327,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "颜色值（不传则创建新的颜色）"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Color",
										"qualifiedName": "Color",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Color",
								"qualifiedName": "Color",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 1453,
					"name": "unlock",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6545,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1454,
							"name": "unlock",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unlocks the currently locked mip level and uploads it to VRAM."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.unlock"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.unlock"
					}
				},
				{
					"id": 1455,
					"name": "upload",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 6553,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1456,
							"name": "upload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Forces a reupload of the textures pixel data to graphics memory. Ordinarily, this function\nis called by internally by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Texture#setSource"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Texture#unlock"
									},
									{
										"kind": "text",
										"text": ". However, it\nstill needs to be called explicitly in the case where an HTMLVideoElement is set as the\nsource of the texture.  Normally, this is done once every frame before video textured\ngeometry is rendered."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Texture.upload"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Texture.upload"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1290
					]
				},
				{
					"title": "Properties",
					"children": [
						1346,
						1347,
						1348,
						1345,
						1350,
						1349,
						1353,
						1336,
						1332,
						1339,
						1333,
						1356,
						1331,
						1354,
						1341,
						1352,
						1436,
						1355,
						1344,
						1343,
						1342,
						1437,
						1406,
						1425,
						1438,
						1316,
						1340,
						1337,
						1330,
						1328,
						1338,
						1357,
						1329,
						1351,
						1335,
						1334
					]
				},
				{
					"title": "Accessors",
					"children": [
						1374,
						1378,
						1382,
						1394,
						1398,
						1390,
						1386,
						1415,
						1411,
						1432,
						1421,
						1413,
						1417,
						1409,
						1370,
						1366,
						1402,
						1317,
						1430,
						1426,
						1419,
						1407
					]
				},
				{
					"title": "Methods",
					"children": [
						1358,
						1434,
						1319,
						1450,
						1439,
						1446,
						1321,
						1453,
						1455
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/texture.ts",
					"line": 35,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Texture",
					"qualifiedName": "Texture",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 2553,
			"name": "Tool",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 2554,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 2555,
							"name": "new Tool",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "创建新的工具实例"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2559,
									"name": "Options",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2556,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/helpers/toolBase.ts",
													"line": 20,
													"character": 43
												}
											],
											"indexSignature": {
												"id": 2557,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 2558,
														"name": "index",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								},
								{
									"id": 2563,
									"name": "EventsMap",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2560,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/helpers/toolBase.ts",
													"line": 20,
													"character": 87
												}
											],
											"indexSignature": {
												"id": 2561,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 2562,
														"name": "index",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2553,
								"typeArguments": [
									{
										"type": "reference",
										"id": 2559,
										"name": "Options"
									},
									{
										"type": "reference",
										"id": 2563,
										"name": "EventsMap"
									}
								],
								"name": "Tool"
							}
						}
					]
				},
				{
					"id": 2568,
					"name": "_enabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 28,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2564,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "AppBase",
						"qualifiedName": "AppBase",
						"package": "playcanvas"
					}
				},
				{
					"id": 2565,
					"name": "eventHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 2563,
								"name": "EventsMap"
							}
						],
						"name": "ExEventHandler"
					}
				},
				{
					"id": 2567,
					"name": "toolOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 2559,
						"name": "Options"
					}
				},
				{
					"id": 2566,
					"name": "toolOptionsDefault",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 25,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"id": 2559,
						"name": "Options"
					}
				},
				{
					"id": 2569,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 43,
							"character": 15
						},
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 52,
							"character": 15
						}
					],
					"getSignature": {
						"id": 2570,
						"name": "enabled",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "获得工具的启用状态"
								}
							]
						},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					},
					"setSignature": {
						"id": 2571,
						"name": "enabled",
						"kind": 1048576,
						"kindString": "Set signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "设置工具启用状态（触发启用和禁用时的额外操作）"
								}
							]
						},
						"parameters": [
							{
								"id": 2572,
								"name": "value",
								"kind": 32768,
								"kindString": "Parameter",
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "boolean"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 2573,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 63,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2574,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "添加事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2575,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2576,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1872,
										"name": "K"
									}
								},
								{
									"id": 2577,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 1872,
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 2563,
											"name": "EventsMap"
										}
									}
								},
								{
									"id": 2578,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2593,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 105,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 2594,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2591,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 104,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 2592,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2579,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 74,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2580,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "移除事件监听"
									}
								]
							},
							"typeParameter": [
								{
									"id": 2581,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 2582,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "监听事件名称"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1878,
										"name": "K"
									}
								},
								{
									"id": 2583,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "回调"
											}
										]
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 1878,
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 2563,
											"name": "EventsMap"
										}
									}
								},
								{
									"id": 2584,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "范围"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2585,
					"name": "setOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 83,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2586,
							"name": "setOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "设置选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2587,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 2559,
										"name": "Options"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 2588,
					"name": "updateOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/utils/helpers/toolBase.ts",
							"line": 96,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2589,
							"name": "updateOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "更新选项"
									}
								]
							},
							"parameters": [
								{
									"id": 2590,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "选项"
											}
										]
									},
									"type": {
										"type": "mapped",
										"parameter": "P",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"name": "P"
											},
											"objectType": {
												"type": "reference",
												"id": 2559,
												"name": "Options"
											}
										},
										"optionalModifier": "+"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2554
					]
				},
				{
					"title": "Properties",
					"children": [
						2568,
						2564,
						2565,
						2567,
						2566
					]
				},
				{
					"title": "Accessors",
					"children": [
						2569
					]
				},
				{
					"title": "Methods",
					"children": [
						2573,
						2593,
						2591,
						2579,
						2585,
						2588
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/helpers/toolBase.ts",
					"line": 20,
					"character": 22
				}
			],
			"typeParameters": [
				{
					"id": 2598,
					"name": "Options",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2595,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/utils/helpers/toolBase.ts",
									"line": 20,
									"character": 43
								}
							],
							"indexSignature": {
								"id": 2596,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 2597,
										"name": "index",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				},
				{
					"id": 2602,
					"name": "EventsMap",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2599,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/utils/helpers/toolBase.ts",
									"line": 20,
									"character": 87
								}
							],
							"indexSignature": {
								"id": 2600,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 2601,
										"name": "index",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1794,
					"name": "OrbitCamera"
				},
				{
					"type": "reference",
					"id": 1914,
					"name": "OrbitCameraInput_Mouse"
				},
				{
					"type": "reference",
					"id": 1977,
					"name": "OrbitCameraInput_TouchScreen"
				},
				{
					"type": "reference",
					"id": 2074,
					"name": "OutlineCamera"
				},
				{
					"type": "reference",
					"id": 2188,
					"name": "MouseInputer"
				},
				{
					"type": "reference",
					"id": 2242,
					"name": "DropGLTFLoader"
				},
				{
					"type": "reference",
					"id": 2296,
					"name": "Selector"
				}
			]
		},
		{
			"id": 1459,
			"name": "Vec2_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1470,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8781,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1471,
							"name": "new Vec2_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new Vec2 instance."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec2(1, 2);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1472,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The x value. Defaults to 0. If x is an array of length 2, the\narray will be used to populate all components."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1473,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The y value. Defaults to 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1459,
								"name": "Vec2_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.constructor"
					}
				},
				{
					"id": 1474,
					"name": "_shaderData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/vec2.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Float32Array",
						"qualifiedName": "Float32Array",
						"package": "typescript"
					}
				},
				{
					"id": 1477,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first component of the vector."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8787,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.x"
					}
				},
				{
					"id": 1478,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The second component of the vector."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8793,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.y"
					}
				},
				{
					"id": 1467,
					"name": "DOWN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [0, -1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8757,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.DOWN"
					}
				},
				{
					"id": 1469,
					"name": "LEFT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [-1, 0]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8771,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.LEFT"
					}
				},
				{
					"id": 1465,
					"name": "ONE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [1, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8743,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.ONE"
					}
				},
				{
					"id": 1468,
					"name": "RIGHT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [1, 0]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8764,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.RIGHT"
					}
				},
				{
					"id": 1466,
					"name": "UP",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [0, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8750,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.UP"
					}
				},
				{
					"id": 1464,
					"name": "ZERO",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [0, 0]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8736,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.ZERO"
					}
				},
				{
					"id": 1475,
					"name": "shaderData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/vec2.ts",
							"line": 21,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1476,
						"name": "shaderData",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "用于传入shader的数据"
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Float32Array",
							"qualifiedName": "Float32Array",
							"package": "typescript"
						}
					}
				},
				{
					"id": 1479,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8808,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1480,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a 2-dimensional vector to another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\n\na.add(b);\n\n// Outputs [30, 30]\nconsole.log(\"The result of the addition is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1481,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to add to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.add"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.add"
					}
				},
				{
					"id": 1482,
					"name": "add2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8825,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1483,
							"name": "add2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds two 2-dimensional vectors together and returns the result."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\nvar r = new pc.Vec2();\n\nr.add2(a, b);\n// Outputs [30, 30]\n\nconsole.log(\"The result of the addition is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1484,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first vector operand for the addition."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								},
								{
									"id": 1485,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second vector operand for the addition."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.add2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.add2"
					}
				},
				{
					"id": 1486,
					"name": "addScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8839,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1487,
							"name": "addScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a number to each element of a vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec2(3, 4);\n\nvec.addScalar(2);\n\n// Outputs [5, 6]\nconsole.log(\"The result of the addition is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1488,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to add."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.addScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.addScalar"
					}
				},
				{
					"id": 1539,
					"name": "ceil",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9073,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1540,
							"name": "ceil",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is rounded up to the next largest integer."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.ceil"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.ceil"
					}
				},
				{
					"id": 1489,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8849,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1490,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an identical copy of the specified 2-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A 2-dimensional vector containing the result of the cloning."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec2(10, 20);\nvar vclone = v.clone();\nconsole.log(\"The result of the cloning is: \" + vclone.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.clone"
					}
				},
				{
					"id": 1491,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8863,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1492,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Copies the contents of a source 2-dimensional vector to a destination 2-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar src = new pc.Vec2(10, 20);\nvar dst = new pc.Vec2();\n\ndst.copy(src);\n\nconsole.log(\"The two vectors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1493,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A vector to copy to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.copy"
					}
				},
				{
					"id": 1494,
					"name": "cross",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8878,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1495,
							"name": "cross",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of a cross product operation performed on the two specified 2-dimensional\nvectors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The cross product of the two vectors."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar right = new pc.Vec2(1, 0);\nvar up = new pc.Vec2(0, 1);\nvar crossProduct = right.cross(up);\n\n// Prints 1\nconsole.log(\"The result of the cross product is: \" + crossProduct);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1496,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second 2-dimensional vector operand of the cross product."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.cross"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.cross"
					}
				},
				{
					"id": 1497,
					"name": "distance",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8890,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1498,
							"name": "distance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the distance between the two specified 2-dimensional vectors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The distance between the two vectors."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v1 = new pc.Vec2(5, 10);\nvar v2 = new pc.Vec2(10, 20);\nvar d = v1.distance(v2);\nconsole.log(\"The distance between v1 and v2 is: \" + d);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1499,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second 2-dimensional vector to test."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.distance"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.distance"
					}
				},
				{
					"id": 1500,
					"name": "div",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8905,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1501,
							"name": "div",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Divides a 2-dimensional vector by another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec2(4, 9);\nvar b = new pc.Vec2(2, 3);\n\na.div(b);\n\n// Outputs [2, 3]\nconsole.log(\"The result of the division is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1502,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to divide the specified vector by."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.div"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.div"
					}
				},
				{
					"id": 1503,
					"name": "div2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8922,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1504,
							"name": "div2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Divides one 2-dimensional vector by another and writes the result to the specified vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec2(4, 9);\nvar b = new pc.Vec2(2, 3);\nvar r = new pc.Vec2();\n\nr.div2(a, b);\n// Outputs [2, 3]\n\nconsole.log(\"The result of the division is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1505,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The dividend vector (the vector being divided)."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								},
								{
									"id": 1506,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The divisor vector (the vector dividing the dividend)."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.div2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.div2"
					}
				},
				{
					"id": 1507,
					"name": "divScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8936,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1508,
							"name": "divScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Divides each element of a vector by a number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec2(3, 6);\n\nvec.divScalar(3);\n\n// Outputs [1, 2]\nconsole.log(\"The result of the division is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1509,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to divide by."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.divScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.divScalar"
					}
				},
				{
					"id": 1510,
					"name": "dot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8949,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1511,
							"name": "dot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of a dot product operation performed on the two specified 2-dimensional\nvectors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The result of the dot product operation."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v1 = new pc.Vec2(5, 10);\nvar v2 = new pc.Vec2(10, 20);\nvar v1dotv2 = v1.dot(v2);\nconsole.log(\"The result of the dot product is: \" + v1dotv2);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1512,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second 2-dimensional vector operand of the dot product."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.dot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.dot"
					}
				},
				{
					"id": 1513,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8960,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1514,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reports whether two vectors are equal."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the vectors are equal and false otherwise."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec2(1, 2);\nvar b = new pc.Vec2(4, 5);\nconsole.log(\"The two vectors are \" + (a.equals(b) ? \"equal\" : \"different\"));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1515,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to compare to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.equals"
					}
				},
				{
					"id": 1537,
					"name": "floor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9067,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1538,
							"name": "floor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is set to the largest integer less than or equal to its value."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.floor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.floor"
					}
				},
				{
					"id": 1516,
					"name": "length",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8971,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1517,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the magnitude of the specified 2-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The magnitude of the specified 2-dimensional vector."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec2(3, 4);\nvar len = vec.length();\n// Outputs 5\nconsole.log(\"The length of the vector is: \" + len);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.length"
					}
				},
				{
					"id": 1518,
					"name": "lengthSq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8982,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1519,
							"name": "lengthSq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the magnitude squared of the specified 2-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The magnitude of the specified 2-dimensional vector."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec2(3, 4);\nvar len = vec.lengthSq();\n// Outputs 25\nconsole.log(\"The length squared of the vector is: \" + len);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.lengthSq"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.lengthSq"
					}
				},
				{
					"id": 1520,
					"name": "lerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9001,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1521,
							"name": "lerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of a linear interpolation between two specified 2-dimensional vectors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec2(0, 0);\nvar b = new pc.Vec2(10, 10);\nvar r = new pc.Vec2();\n\nr.lerp(a, b, 0);   // r is equal to a\nr.lerp(a, b, 0.5); // r is 5, 5\nr.lerp(a, b, 1);   // r is equal to b\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1522,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 2-dimensional to interpolate from."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								},
								{
									"id": 1523,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 2-dimensional to interpolate to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								},
								{
									"id": 1524,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value controlling the point of interpolation. Between 0 and 1,\nthe linear interpolant will occur on a straight line between lhs and rhs. Outside of this\nrange, the linear interpolant will occur on a ray extrapolated from this line."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.lerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.lerp"
					}
				},
				{
					"id": 1546,
					"name": "max",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9093,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1547,
							"name": "max",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is assigned a value from rhs parameter if it is larger."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1548,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 2-dimensional vector used as the source of elements to compare to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.max"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.max"
					}
				},
				{
					"id": 1543,
					"name": "min",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9086,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1544,
							"name": "min",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is assigned a value from rhs parameter if it is smaller."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1545,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 2-dimensional vector used as the source of elements to compare to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.min"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.min"
					}
				},
				{
					"id": 1525,
					"name": "mul",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9016,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1526,
							"name": "mul",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Multiplies a 2-dimensional vector to another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec2(2, 3);\nvar b = new pc.Vec2(4, 5);\n\na.mul(b);\n\n// Outputs 8, 15\nconsole.log(\"The result of the multiplication is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1527,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 2-dimensional vector used as the second multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.mul"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.mul"
					}
				},
				{
					"id": 1528,
					"name": "mul2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9033,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1529,
							"name": "mul2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of multiplying the specified 2-dimensional vectors together."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec2(2, 3);\nvar b = new pc.Vec2(4, 5);\nvar r = new pc.Vec2();\n\nr.mul2(a, b);\n\n// Outputs 8, 15\nconsole.log(\"The result of the multiplication is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1530,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 2-dimensional vector used as the first multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								},
								{
									"id": 1531,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 2-dimensional vector used as the second multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.mul2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.mul2"
					}
				},
				{
					"id": 1532,
					"name": "mulScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9047,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1533,
							"name": "mulScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Multiplies each element of a vector by a number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec2(3, 6);\n\nvec.mulScalar(3);\n\n// Outputs [9, 18]\nconsole.log(\"The result of the multiplication is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1534,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to multiply by."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.mulScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.mulScalar"
					}
				},
				{
					"id": 1535,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9061,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1536,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns this 2-dimensional vector converted to a unit vector in place. If the vector has a\nlength of zero, the vector's elements will be set to zero."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec2(25, 0);\n\nv.normalize();\n\n// Outputs 1, 0\nconsole.log(\"The result of the vector normalization is: \" + v.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.normalize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.normalize"
					}
				},
				{
					"id": 1541,
					"name": "round",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9079,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1542,
							"name": "round",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is rounded up or down to the nearest integer."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.round"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.round"
					}
				},
				{
					"id": 1549,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9107,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1550,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the specified 2-dimensional vector to the supplied numerical values."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec2();\nv.set(5, 10);\n\n// Outputs 5, 10\nconsole.log(\"The result of the vector set is: \" + v.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1551,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to set on the first component of the vector."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1552,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to set on the second component of the vector."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.set"
					}
				},
				{
					"id": 1553,
					"name": "sub",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9122,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1554,
							"name": "sub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subtracts a 2-dimensional vector from another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\n\na.sub(b);\n\n// Outputs [-10, -10]\nconsole.log(\"The result of the subtraction is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1555,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to add to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.sub"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.sub"
					}
				},
				{
					"id": 1556,
					"name": "sub2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9139,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1557,
							"name": "sub2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subtracts two 2-dimensional vectors from one another and returns the result."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\nvar r = new pc.Vec2();\n\nr.sub2(a, b);\n\n// Outputs [-10, -10]\nconsole.log(\"The result of the subtraction is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1558,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first vector operand for the addition."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								},
								{
									"id": 1559,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second vector operand for the addition."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec2",
										"qualifiedName": "Vec2",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.sub2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.sub2"
					}
				},
				{
					"id": 1560,
					"name": "subScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9153,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1561,
							"name": "subScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subtracts a number from each element of a vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec2(3, 4);\n\nvec.subScalar(2);\n\n// Outputs [1, 2]\nconsole.log(\"The result of the subtraction is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1562,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to subtract."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec2",
								"qualifiedName": "Vec2",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.subScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.subScalar"
					}
				},
				{
					"id": 1563,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9163,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1564,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts the vector to string form."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The vector in string form."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec2(20, 10);\n// Outputs [20, 10]\nconsole.log(v.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1470
					]
				},
				{
					"title": "Properties",
					"children": [
						1474,
						1477,
						1478,
						1467,
						1469,
						1465,
						1468,
						1466,
						1464
					]
				},
				{
					"title": "Accessors",
					"children": [
						1475
					]
				},
				{
					"title": "Methods",
					"children": [
						1479,
						1482,
						1486,
						1539,
						1489,
						1491,
						1494,
						1497,
						1500,
						1503,
						1507,
						1510,
						1513,
						1537,
						1516,
						1518,
						1520,
						1546,
						1543,
						1525,
						1528,
						1532,
						1535,
						1541,
						1549,
						1553,
						1556,
						1560,
						1563
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/vec2.ts",
					"line": 14,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Vec2",
					"qualifiedName": "Vec2",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 1565,
			"name": "Vec3_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1574,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3667,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1575,
							"name": "new Vec3_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Vec3 object."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec3(1, 2, 3);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1576,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The x value. Defaults to 0. If x is an array of length 3, the\narray will be used to populate all components."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1577,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The y value. Defaults to 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1578,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The z value. Defaults to 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1565,
								"name": "Vec3_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.constructor"
					}
				},
				{
					"id": 1579,
					"name": "_rotation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/vec3.ts",
							"line": 26,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Quat",
						"qualifiedName": "Quat",
						"package": "playcanvas"
					}
				},
				{
					"id": 1580,
					"name": "_shaderData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/vec3.ts",
							"line": 27,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Float32Array",
						"qualifiedName": "Float32Array",
						"package": "typescript"
					}
				},
				{
					"id": 1602,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first component of the vector."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3673,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.x"
					}
				},
				{
					"id": 1603,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The second component of the vector."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3679,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.y"
					}
				},
				{
					"id": 1604,
					"name": "z",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The third component of the vector."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3685,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.z"
					}
				},
				{
					"id": 1573,
					"name": "BACK",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [0, 0, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3656,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.BACK"
					}
				},
				{
					"id": 1569,
					"name": "DOWN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [0, -1, 0]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3628,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.DOWN"
					}
				},
				{
					"id": 1572,
					"name": "FORWARD",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [0, 0, -1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3649,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.FORWARD"
					}
				},
				{
					"id": 1571,
					"name": "LEFT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [-1, 0, 0]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3642,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.LEFT"
					}
				},
				{
					"id": 1567,
					"name": "ONE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [1, 1, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3614,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.ONE"
					}
				},
				{
					"id": 1570,
					"name": "RIGHT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [1, 0, 0]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3635,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.RIGHT"
					}
				},
				{
					"id": 1568,
					"name": "UP",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [0, 1, 0]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3621,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.UP"
					}
				},
				{
					"id": 1566,
					"name": "ZERO",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [0, 0, 0]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3607,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.ZERO"
					}
				},
				{
					"id": 1581,
					"name": "rotation",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/vec3.ts",
							"line": 32,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1582,
						"name": "rotation",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "获得此3维向量的朝向rotation"
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Quat",
							"qualifiedName": "Quat",
							"package": "playcanvas"
						}
					}
				},
				{
					"id": 1583,
					"name": "shaderData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/vec3.ts",
							"line": 41,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1584,
						"name": "shaderData",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "用于传入shader的数据"
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Float32Array",
							"qualifiedName": "Float32Array",
							"package": "typescript"
						}
					}
				},
				{
					"id": 1605,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3700,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1606,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a 3-dimensional vector to another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec3(10, 10, 10);\nvar b = new pc.Vec3(20, 20, 20);\n\na.add(b);\n\n// Outputs [30, 30, 30]\nconsole.log(\"The result of the addition is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1607,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to add to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.add"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.add"
					}
				},
				{
					"id": 1608,
					"name": "add2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3717,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1609,
							"name": "add2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds two 3-dimensional vectors together and returns the result."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec3(10, 10, 10);\nvar b = new pc.Vec3(20, 20, 20);\nvar r = new pc.Vec3();\n\nr.add2(a, b);\n// Outputs [30, 30, 30]\n\nconsole.log(\"The result of the addition is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1610,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first vector operand for the addition."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1611,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second vector operand for the addition."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.add2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.add2"
					}
				},
				{
					"id": 1612,
					"name": "addScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3731,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1613,
							"name": "addScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a number to each element of a vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec3(3, 4, 5);\n\nvec.addScalar(2);\n\n// Outputs [5, 6, 7]\nconsole.log(\"The result of the addition is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1614,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to add."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.addScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.addScalar"
					}
				},
				{
					"id": 1666,
					"name": "ceil",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3964,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1667,
							"name": "ceil",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is rounded up to the next largest integer."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.ceil"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.ceil"
					}
				},
				{
					"id": 1615,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3741,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1616,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an identical copy of the specified 3-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A 3-dimensional vector containing the result of the cloning."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec3(10, 20, 30);\nvar vclone = v.clone();\nconsole.log(\"The result of the cloning is: \" + vclone.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.clone"
					}
				},
				{
					"id": 1617,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3755,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1618,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Copies the contents of a source 3-dimensional vector to a destination 3-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar src = new pc.Vec3(10, 20, 30);\nvar dst = new pc.Vec3();\n\ndst.copy(src);\n\nconsole.log(\"The two vectors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1619,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A vector to copy to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.copy"
					}
				},
				{
					"id": 1620,
					"name": "cross",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3769,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1621,
							"name": "cross",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of a cross product operation performed on the two specified 3-dimensional\nvectors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar back = new pc.Vec3().cross(pc.Vec3.RIGHT, pc.Vec3.UP);\n\n// Prints the Z axis (i.e. [0, 0, 1])\nconsole.log(\"The result of the cross product is: \" + back.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1622,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first 3-dimensional vector operand of the cross product."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1623,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second 3-dimensional vector operand of the cross product."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.cross"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.cross"
					}
				},
				{
					"id": 1624,
					"name": "distance",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3781,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1625,
							"name": "distance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the distance between the two specified 3-dimensional vectors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The distance between the two vectors."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v1 = new pc.Vec3(5, 10, 20);\nvar v2 = new pc.Vec3(10, 20, 40);\nvar d = v1.distance(v2);\nconsole.log(\"The distance between v1 and v2 is: \" + d);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1626,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second 3-dimensional vector to test."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.distance"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.distance"
					}
				},
				{
					"id": 1627,
					"name": "div",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3796,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1628,
							"name": "div",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Divides a 3-dimensional vector by another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec3(4, 9, 16);\nvar b = new pc.Vec3(2, 3, 4);\n\na.div(b);\n\n// Outputs [2, 3, 4]\nconsole.log(\"The result of the division is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1629,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to divide the specified vector by."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.div"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.div"
					}
				},
				{
					"id": 1630,
					"name": "div2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3813,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1631,
							"name": "div2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Divides one 3-dimensional vector by another and writes the result to the specified vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec3(4, 9, 16);\nvar b = new pc.Vec3(2, 3, 4);\nvar r = new pc.Vec3();\n\nr.div2(a, b);\n// Outputs [2, 3, 4]\n\nconsole.log(\"The result of the division is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1632,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The dividend vector (the vector being divided)."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1633,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The divisor vector (the vector dividing the dividend)."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.div2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.div2"
					}
				},
				{
					"id": 1634,
					"name": "divScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3827,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1635,
							"name": "divScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Divides each element of a vector by a number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec3(3, 6, 9);\n\nvec.divScalar(3);\n\n// Outputs [1, 2, 3]\nconsole.log(\"The result of the division is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1636,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to divide by."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.divScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.divScalar"
					}
				},
				{
					"id": 1637,
					"name": "dot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3840,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1638,
							"name": "dot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of a dot product operation performed on the two specified 3-dimensional\nvectors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The result of the dot product operation."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v1 = new pc.Vec3(5, 10, 20);\nvar v2 = new pc.Vec3(10, 20, 40);\nvar v1dotv2 = v1.dot(v2);\nconsole.log(\"The result of the dot product is: \" + v1dotv2);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1639,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second 3-dimensional vector operand of the dot product."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.dot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.dot"
					}
				},
				{
					"id": 1640,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3851,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1641,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reports whether two vectors are equal."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the vectors are equal and false otherwise."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec3(1, 2, 3);\nvar b = new pc.Vec3(4, 5, 6);\nconsole.log(\"The two vectors are \" + (a.equals(b) ? \"equal\" : \"different\"));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1642,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to compare to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.equals"
					}
				},
				{
					"id": 1664,
					"name": "floor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3958,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1665,
							"name": "floor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is set to the largest integer less than or equal to its value."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.floor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.floor"
					}
				},
				{
					"id": 1585,
					"name": "getGLPos",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/vec3.ts",
							"line": 57,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1586,
							"name": "getGLPos",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "根据3维世界坐标获得标准化gl坐标"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "标准化gl坐标（w为1）"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1587,
									"name": "glPos",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "标准化gl坐标（不传则创建新的向量）"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								},
								{
									"id": 1588,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "当前相机，默认为第一个场景相机"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "CameraComponent",
										"qualifiedName": "CameraComponent",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 1643,
					"name": "length",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3862,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1644,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the magnitude of the specified 3-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The magnitude of the specified 3-dimensional vector."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec3(3, 4, 0);\nvar len = vec.length();\n// Outputs 5\nconsole.log(\"The length of the vector is: \" + len);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.length"
					}
				},
				{
					"id": 1645,
					"name": "lengthSq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3873,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1646,
							"name": "lengthSq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the magnitude squared of the specified 3-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The magnitude of the specified 3-dimensional vector."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec3(3, 4, 0);\nvar len = vec.lengthSq();\n// Outputs 25\nconsole.log(\"The length squared of the vector is: \" + len);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.lengthSq"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.lengthSq"
					}
				},
				{
					"id": 1647,
					"name": "lerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3892,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1648,
							"name": "lerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of a linear interpolation between two specified 3-dimensional vectors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec3(0, 0, 0);\nvar b = new pc.Vec3(10, 10, 10);\nvar r = new pc.Vec3();\n\nr.lerp(a, b, 0);   // r is equal to a\nr.lerp(a, b, 0.5); // r is 5, 5, 5\nr.lerp(a, b, 1);   // r is equal to b\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1649,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 3-dimensional to interpolate from."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1650,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 3-dimensional to interpolate to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1651,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value controlling the point of interpolation. Between 0 and 1,\nthe linear interpolant will occur on a straight line between lhs and rhs. Outside of this\nrange, the linear interpolant will occur on a ray extrapolated from this line."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.lerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.lerp"
					}
				},
				{
					"id": 1673,
					"name": "max",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3984,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1674,
							"name": "max",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is assigned a value from rhs parameter if it is larger."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1675,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 3-dimensional vector used as the source of elements to compare to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.max"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.max"
					}
				},
				{
					"id": 1670,
					"name": "min",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3977,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1671,
							"name": "min",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is assigned a value from rhs parameter if it is smaller."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1672,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 3-dimensional vector used as the source of elements to compare to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.min"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.min"
					}
				},
				{
					"id": 1652,
					"name": "mul",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3907,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1653,
							"name": "mul",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Multiplies a 3-dimensional vector to another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec3(2, 3, 4);\nvar b = new pc.Vec3(4, 5, 6);\n\na.mul(b);\n\n// Outputs 8, 15, 24\nconsole.log(\"The result of the multiplication is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1654,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 3-dimensional vector used as the second multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.mul"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.mul"
					}
				},
				{
					"id": 1655,
					"name": "mul2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3924,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1656,
							"name": "mul2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of multiplying the specified 3-dimensional vectors together."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec3(2, 3, 4);\nvar b = new pc.Vec3(4, 5, 6);\nvar r = new pc.Vec3();\n\nr.mul2(a, b);\n\n// Outputs 8, 15, 24\nconsole.log(\"The result of the multiplication is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1657,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 3-dimensional vector used as the first multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1658,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 3-dimensional vector used as the second multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.mul2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.mul2"
					}
				},
				{
					"id": 1659,
					"name": "mulScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3938,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1660,
							"name": "mulScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Multiplies each element of a vector by a number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec3(3, 6, 9);\n\nvec.mulScalar(3);\n\n// Outputs [9, 18, 27]\nconsole.log(\"The result of the multiplication is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1661,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to multiply by."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.mulScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.mulScalar"
					}
				},
				{
					"id": 1662,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3952,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1663,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns this 3-dimensional vector converted to a unit vector in place. If the vector has a\nlength of zero, the vector's elements will be set to zero."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec3(25, 0, 0);\n\nv.normalize();\n\n// Outputs 1, 0, 0\nconsole.log(\"The result of the vector normalization is: \" + v.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.normalize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.normalize"
					}
				},
				{
					"id": 1676,
					"name": "project",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3999,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1677,
							"name": "project",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Projects this 3-dimensional vector onto the specified vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec3(5, 5, 5);\nvar normal = new pc.Vec3(1, 0, 0);\n\nv.project(normal);\n\n// Outputs 5, 0, 0\nconsole.log(\"The result of the vector projection is: \" + v.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1678,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector onto which the original vector will be projected on."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.project"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.project"
					}
				},
				{
					"id": 1598,
					"name": "rotateAxisAngle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/vec3.ts",
							"line": 124,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1599,
							"name": "rotateAxisAngle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "绕旋转轴旋转向量"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://www.cheapface.top/index.php/archives/57/ 绕任意轴旋转3维向量（活用矢量分解与合成）"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "旋转后的向量"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1600,
									"name": "axis",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "旋转角度"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1601,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "旋转角"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 1589,
					"name": "rotateX",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/vec3.ts",
							"line": 78,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1590,
							"name": "rotateX",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "绕x轴旋转向量"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://www.cheapface.top/index.php/archives/19/ 二维向量的旋转"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "旋转后的向量"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1591,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "旋转角度"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 1592,
					"name": "rotateY",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/vec3.ts",
							"line": 93,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1593,
							"name": "rotateY",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "绕y轴旋转向量"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://www.cheapface.top/index.php/archives/19/ 二维向量的旋转"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "旋转后的向量"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1594,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "旋转角度"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 1595,
					"name": "rotateZ",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/vec3.ts",
							"line": 108,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1596,
							"name": "rotateZ",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "绕z轴旋转向量"
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "https://www.cheapface.top/index.php/archives/19/ 二维向量的旋转"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "旋转后的向量"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1597,
									"name": "angle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "旋转角度"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							}
						}
					]
				},
				{
					"id": 1668,
					"name": "round",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 3970,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1669,
							"name": "round",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is rounded up or down to the nearest integer."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.round"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.round"
					}
				},
				{
					"id": 1679,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4014,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1680,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the specified 3-dimensional vector to the supplied numerical values."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec3();\nv.set(5, 10, 20);\n\n// Outputs 5, 10, 20\nconsole.log(\"The result of the vector set is: \" + v.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1681,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to set on the first component of the vector."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1682,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to set on the second component of the vector."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1683,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to set on the third component of the vector."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.set"
					}
				},
				{
					"id": 1684,
					"name": "sub",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4029,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1685,
							"name": "sub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subtracts a 3-dimensional vector from another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec3(10, 10, 10);\nvar b = new pc.Vec3(20, 20, 20);\n\na.sub(b);\n\n// Outputs [-10, -10, -10]\nconsole.log(\"The result of the subtraction is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1686,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to add to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.sub"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.sub"
					}
				},
				{
					"id": 1687,
					"name": "sub2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4046,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1688,
							"name": "sub2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subtracts two 3-dimensional vectors from one another and returns the result."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec3(10, 10, 10);\nvar b = new pc.Vec3(20, 20, 20);\nvar r = new pc.Vec3();\n\nr.sub2(a, b);\n\n// Outputs [-10, -10, -10]\nconsole.log(\"The result of the subtraction is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1689,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first vector operand for the addition."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								},
								{
									"id": 1690,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second vector operand for the addition."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec3",
										"qualifiedName": "Vec3",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.sub2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.sub2"
					}
				},
				{
					"id": 1691,
					"name": "subScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4060,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1692,
							"name": "subScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subtracts a number from each element of a vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec3(3, 4, 5);\n\nvec.subScalar(2);\n\n// Outputs [1, 2, 3]\nconsole.log(\"The result of the subtraction is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1693,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to subtract."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec3",
								"qualifiedName": "Vec3",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.subScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.subScalar"
					}
				},
				{
					"id": 1694,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4070,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1695,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts the vector to string form."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The vector in string form."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec3(20, 10, 5);\n// Outputs [20, 10, 5]\nconsole.log(v.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec3.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec3.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1574
					]
				},
				{
					"title": "Properties",
					"children": [
						1579,
						1580,
						1602,
						1603,
						1604,
						1573,
						1569,
						1572,
						1571,
						1567,
						1570,
						1568,
						1566
					]
				},
				{
					"title": "Accessors",
					"children": [
						1581,
						1583
					]
				},
				{
					"title": "Methods",
					"children": [
						1605,
						1608,
						1612,
						1666,
						1615,
						1617,
						1620,
						1624,
						1627,
						1630,
						1634,
						1637,
						1640,
						1664,
						1585,
						1643,
						1645,
						1647,
						1673,
						1670,
						1652,
						1655,
						1659,
						1662,
						1676,
						1598,
						1589,
						1592,
						1595,
						1668,
						1679,
						1684,
						1687,
						1691,
						1694
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/vec3.ts",
					"line": 24,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Vec3",
					"qualifiedName": "Vec3",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 1696,
			"name": "Vec4_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 1699,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4493,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1700,
							"name": "new Vec4_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Vec4 object."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec4(1, 2, 3, 4);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1701,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The x value. Defaults to 0. If x is an array of length 4, the\narray will be used to populate all components."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1702,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The y value. Defaults to 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1703,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The z value. Defaults to 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1704,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The w value. Defaults to 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1696,
								"name": "Vec4_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.constructor"
					}
				},
				{
					"id": 1705,
					"name": "_shaderData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/vec4.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "Float32Array",
						"qualifiedName": "Float32Array",
						"package": "typescript"
					}
				},
				{
					"id": 1711,
					"name": "w",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fourth component of the vector."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4517,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.w"
					}
				},
				{
					"id": 1708,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first component of the vector."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4499,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.x"
					}
				},
				{
					"id": 1709,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The second component of the vector."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4505,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.y"
					}
				},
				{
					"id": 1710,
					"name": "z",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The third component of the vector."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4511,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.z"
					}
				},
				{
					"id": 1698,
					"name": "ONE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [1, 1, 1, 1]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4481,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec4",
						"qualifiedName": "Vec4",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.ONE"
					}
				},
				{
					"id": 1697,
					"name": "ZERO",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A constant vector set to [0, 0, 0, 0]."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4474,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec4",
						"qualifiedName": "Vec4",
						"package": "playcanvas"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.ZERO"
					}
				},
				{
					"id": 1706,
					"name": "shaderData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/vec4.ts",
							"line": 21,
							"character": 8
						}
					],
					"getSignature": {
						"id": 1707,
						"name": "shaderData",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "用于传入shader的数据"
								}
							]
						},
						"type": {
							"type": "reference",
							"name": "Float32Array",
							"qualifiedName": "Float32Array",
							"package": "typescript"
						}
					}
				},
				{
					"id": 1712,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4532,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1713,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a 4-dimensional vector to another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec4(10, 10, 10, 10);\nvar b = new pc.Vec4(20, 20, 20, 20);\n\na.add(b);\n\n// Outputs [30, 30, 30]\nconsole.log(\"The result of the addition is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1714,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to add to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.add"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.add"
					}
				},
				{
					"id": 1715,
					"name": "add2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4549,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1716,
							"name": "add2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds two 4-dimensional vectors together and returns the result."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec4(10, 10, 10, 10);\nvar b = new pc.Vec4(20, 20, 20, 20);\nvar r = new pc.Vec4();\n\nr.add2(a, b);\n// Outputs [30, 30, 30]\n\nconsole.log(\"The result of the addition is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1717,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first vector operand for the addition."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								},
								{
									"id": 1718,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second vector operand for the addition."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.add2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.add2"
					}
				},
				{
					"id": 1719,
					"name": "addScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4563,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1720,
							"name": "addScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a number to each element of a vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec4(3, 4, 5, 6);\n\nvec.addScalar(2);\n\n// Outputs [5, 6, 7, 8]\nconsole.log(\"The result of the addition is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1721,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to add."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.addScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.addScalar"
					}
				},
				{
					"id": 1766,
					"name": "ceil",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4770,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1767,
							"name": "ceil",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is rounded up to the next largest integer."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.ceil"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.ceil"
					}
				},
				{
					"id": 1722,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4573,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1723,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an identical copy of the specified 4-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A 4-dimensional vector containing the result of the cloning."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec4(10, 20, 30, 40);\nvar vclone = v.clone();\nconsole.log(\"The result of the cloning is: \" + vclone.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.clone"
					}
				},
				{
					"id": 1724,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4587,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1725,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Copies the contents of a source 4-dimensional vector to a destination 4-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar src = new pc.Vec4(10, 20, 30, 40);\nvar dst = new pc.Vec4();\n\ndst.copy(src);\n\nconsole.log(\"The two vectors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1726,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A vector to copy to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.copy"
					}
				},
				{
					"id": 1727,
					"name": "div",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4602,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1728,
							"name": "div",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Divides a 4-dimensional vector by another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec4(4, 9, 16, 25);\nvar b = new pc.Vec4(2, 3, 4, 5);\n\na.div(b);\n\n// Outputs [2, 3, 4, 5]\nconsole.log(\"The result of the division is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1729,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to divide the specified vector by."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.div"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.div"
					}
				},
				{
					"id": 1730,
					"name": "div2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4619,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1731,
							"name": "div2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Divides one 4-dimensional vector by another and writes the result to the specified vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec4(4, 9, 16, 25);\nvar b = new pc.Vec4(2, 3, 4, 5);\nvar r = new pc.Vec4();\n\nr.div2(a, b);\n// Outputs [2, 3, 4, 5]\n\nconsole.log(\"The result of the division is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1732,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The dividend vector (the vector being divided)."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								},
								{
									"id": 1733,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The divisor vector (the vector dividing the dividend)."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.div2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.div2"
					}
				},
				{
					"id": 1734,
					"name": "divScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4633,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1735,
							"name": "divScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Divides each element of a vector by a number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec4(3, 6, 9, 12);\n\nvec.divScalar(3);\n\n// Outputs [1, 2, 3, 4]\nconsole.log(\"The result of the division is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1736,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to divide by."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.divScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.divScalar"
					}
				},
				{
					"id": 1737,
					"name": "dot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4646,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1738,
							"name": "dot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of a dot product operation performed on the two specified 4-dimensional\nvectors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The result of the dot product operation."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v1 = new pc.Vec4(5, 10, 20, 40);\nvar v2 = new pc.Vec4(10, 20, 40, 80);\nvar v1dotv2 = v1.dot(v2);\nconsole.log(\"The result of the dot product is: \" + v1dotv2);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1739,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second 4-dimensional vector operand of the dot product."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.dot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.dot"
					}
				},
				{
					"id": 1740,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4657,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1741,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reports whether two vectors are equal."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "True if the vectors are equal and false otherwise."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec4(1, 2, 3, 4);\nvar b = new pc.Vec4(5, 6, 7, 8);\nconsole.log(\"The two vectors are \" + (a.equals(b) ? \"equal\" : \"different\"));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1742,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to compare to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.equals"
					}
				},
				{
					"id": 1764,
					"name": "floor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4764,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1765,
							"name": "floor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is set to the largest integer less than or equal to its value."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.floor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.floor"
					}
				},
				{
					"id": 1743,
					"name": "length",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4668,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1744,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the magnitude of the specified 4-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The magnitude of the specified 4-dimensional vector."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec4(3, 4, 0, 0);\nvar len = vec.length();\n// Outputs 5\nconsole.log(\"The length of the vector is: \" + len);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.length"
					}
				},
				{
					"id": 1745,
					"name": "lengthSq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4679,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1746,
							"name": "lengthSq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the magnitude squared of the specified 4-dimensional vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The magnitude of the specified 4-dimensional vector."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec4(3, 4, 0);\nvar len = vec.lengthSq();\n// Outputs 25\nconsole.log(\"The length squared of the vector is: \" + len);\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.lengthSq"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.lengthSq"
					}
				},
				{
					"id": 1747,
					"name": "lerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4698,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1748,
							"name": "lerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of a linear interpolation between two specified 4-dimensional vectors."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec4(0, 0, 0, 0);\nvar b = new pc.Vec4(10, 10, 10, 10);\nvar r = new pc.Vec4();\n\nr.lerp(a, b, 0);   // r is equal to a\nr.lerp(a, b, 0.5); // r is 5, 5, 5, 5\nr.lerp(a, b, 1);   // r is equal to b\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1749,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 4-dimensional to interpolate from."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								},
								{
									"id": 1750,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 4-dimensional to interpolate to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								},
								{
									"id": 1751,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value controlling the point of interpolation. Between 0 and 1,\nthe linear interpolant will occur on a straight line between lhs and rhs. Outside of this\nrange, the linear interpolant will occur on a ray extrapolated from this line."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.lerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.lerp"
					}
				},
				{
					"id": 1773,
					"name": "max",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4790,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1774,
							"name": "max",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is assigned a value from rhs parameter if it is larger."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1775,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 4-dimensional vector used as the source of elements to compare to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.max"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.max"
					}
				},
				{
					"id": 1770,
					"name": "min",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4783,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1771,
							"name": "min",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is assigned a value from rhs parameter if it is smaller."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1772,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 4-dimensional vector used as the source of elements to compare to."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.min"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.min"
					}
				},
				{
					"id": 1752,
					"name": "mul",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4713,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1753,
							"name": "mul",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Multiplies a 4-dimensional vector to another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec4(2, 3, 4, 5);\nvar b = new pc.Vec4(4, 5, 6, 7);\n\na.mul(b);\n\n// Outputs 8, 15, 24, 35\nconsole.log(\"The result of the multiplication is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1754,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 4-dimensional vector used as the second multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.mul"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.mul"
					}
				},
				{
					"id": 1755,
					"name": "mul2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4730,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1756,
							"name": "mul2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the result of multiplying the specified 4-dimensional vectors together."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec4(2, 3, 4, 5);\nvar b = new pc.Vec4(4, 5, 6, 7);\nvar r = new pc.Vec4();\n\nr.mul2(a, b);\n\n// Outputs 8, 15, 24, 35\nconsole.log(\"The result of the multiplication is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1757,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 4-dimensional vector used as the first multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								},
								{
									"id": 1758,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The 4-dimensional vector used as the second multiplicand of the operation."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.mul2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.mul2"
					}
				},
				{
					"id": 1759,
					"name": "mulScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4744,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1760,
							"name": "mulScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Multiplies each element of a vector by a number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec4(3, 6, 9, 12);\n\nvec.mulScalar(3);\n\n// Outputs [9, 18, 27, 36]\nconsole.log(\"The result of the multiplication is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1761,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to multiply by."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.mulScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.mulScalar"
					}
				},
				{
					"id": 1762,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4758,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1763,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns this 4-dimensional vector converted to a unit vector in place. If the vector has a\nlength of zero, the vector's elements will be set to zero."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec4(25, 0, 0, 0);\n\nv.normalize();\n\n// Outputs 1, 0, 0, 0\nconsole.log(\"The result of the vector normalization is: \" + v.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.normalize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.normalize"
					}
				},
				{
					"id": 1768,
					"name": "round",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4776,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1769,
							"name": "round",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Each element is rounded up or down to the nearest integer."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.round"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.round"
					}
				},
				{
					"id": 1776,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4806,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1777,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the specified 4-dimensional vector to the supplied numerical values."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec4();\nv.set(5, 10, 20, 40);\n\n// Outputs 5, 10, 20, 40\nconsole.log(\"The result of the vector set is: \" + v.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1778,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to set on the first component of the vector."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1779,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to set on the second component of the vector."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1780,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to set on the third component of the vector."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1781,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to set on the fourth component of the vector."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.set"
					}
				},
				{
					"id": 1782,
					"name": "sub",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4821,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1783,
							"name": "sub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subtracts a 4-dimensional vector from another in place."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec4(10, 10, 10, 10);\nvar b = new pc.Vec4(20, 20, 20, 20);\n\na.sub(b);\n\n// Outputs [-10, -10, -10, -10]\nconsole.log(\"The result of the subtraction is: \" + a.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1784,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vector to add to the specified vector."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.sub"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.sub"
					}
				},
				{
					"id": 1785,
					"name": "sub2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4838,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1786,
							"name": "sub2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subtracts two 4-dimensional vectors from one another and returns the result."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar a = new pc.Vec4(10, 10, 10, 10);\nvar b = new pc.Vec4(20, 20, 20, 20);\nvar r = new pc.Vec4();\n\nr.sub2(a, b);\n\n// Outputs [-10, -10, -10, -10]\nconsole.log(\"The result of the subtraction is: \" + r.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1787,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first vector operand for the subtraction."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								},
								{
									"id": 1788,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second vector operand for the subtraction."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Vec4",
										"qualifiedName": "Vec4",
										"package": "playcanvas"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.sub2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.sub2"
					}
				},
				{
					"id": 1789,
					"name": "subScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4852,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1790,
							"name": "subScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subtracts a number from each element of a vector."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Self for chaining."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar vec = new pc.Vec4(3, 4, 5, 6);\n\nvec.subScalar(2);\n\n// Outputs [1, 2, 3, 4]\nconsole.log(\"The result of the subtraction is: \" + vec.toString());\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1791,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to subtract."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.subScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.subScalar"
					}
				},
				{
					"id": 1792,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 4862,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1793,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts the vector to string form."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The vector in string form."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nvar v = new pc.Vec4(20, 10, 5, 0);\n// Outputs [20, 10, 5, 0]\nconsole.log(v.toString());\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec4.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec4.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1699
					]
				},
				{
					"title": "Properties",
					"children": [
						1705,
						1711,
						1708,
						1709,
						1710,
						1698,
						1697
					]
				},
				{
					"title": "Accessors",
					"children": [
						1706
					]
				},
				{
					"title": "Methods",
					"children": [
						1712,
						1715,
						1719,
						1766,
						1722,
						1724,
						1727,
						1730,
						1734,
						1737,
						1740,
						1764,
						1743,
						1745,
						1747,
						1773,
						1770,
						1752,
						1755,
						1759,
						1762,
						1768,
						1776,
						1782,
						1785,
						1789,
						1792
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/vec4.ts",
					"line": 14,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Vec4",
					"qualifiedName": "Vec4",
					"package": "playcanvas"
				}
			]
		},
		{
			"id": 2527,
			"name": "ExtendClassName",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "可扩展类型"
					}
				]
			},
			"children": [
				{
					"id": 2528,
					"name": "Application",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Application",
						"qualifiedName": "Application",
						"package": "playcanvas"
					}
				},
				{
					"id": 2529,
					"name": "CameraComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "CameraComponent",
						"qualifiedName": "CameraComponent",
						"package": "playcanvas"
					}
				},
				{
					"id": 2530,
					"name": "Color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					}
				},
				{
					"id": 2531,
					"name": "Curve",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Curve",
						"qualifiedName": "Curve",
						"package": "playcanvas"
					}
				},
				{
					"id": 2532,
					"name": "ElementComponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "ElementComponent",
						"qualifiedName": "ElementComponent",
						"package": "playcanvas"
					}
				},
				{
					"id": 2533,
					"name": "Entity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Entity",
						"qualifiedName": "Entity",
						"package": "playcanvas"
					}
				},
				{
					"id": 2534,
					"name": "MeshInstance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "MeshInstance",
						"qualifiedName": "MeshInstance",
						"package": "playcanvas"
					}
				},
				{
					"id": 2535,
					"name": "Quat",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Quat",
						"qualifiedName": "Quat",
						"package": "playcanvas"
					}
				},
				{
					"id": 2536,
					"name": "Ray",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Ray",
						"qualifiedName": "Ray",
						"package": "playcanvas"
					}
				},
				{
					"id": 2537,
					"name": "Texture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Texture",
						"qualifiedName": "Texture",
						"package": "playcanvas"
					}
				},
				{
					"id": 2538,
					"name": "Vec2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec2",
						"qualifiedName": "Vec2",
						"package": "playcanvas"
					}
				},
				{
					"id": 2539,
					"name": "Vec3",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec3",
						"qualifiedName": "Vec3",
						"package": "playcanvas"
					}
				},
				{
					"id": 2540,
					"name": "Vec4",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils/helpers/extend-decorator.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Vec4",
						"qualifiedName": "Vec4",
						"package": "playcanvas"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2528,
						2529,
						2530,
						2531,
						2532,
						2533,
						2534,
						2535,
						2536,
						2537,
						2538,
						2539,
						2540
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils/helpers/extend-decorator.ts",
					"line": 29,
					"character": 17
				}
			]
		},
		{
			"id": 2132,
			"name": "InputEventsMap",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "输入事件-回调表"
					}
				]
			},
			"children": [
				{
					"id": 2149,
					"name": "click",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L21"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2150,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/input/mouseInput.ts",
									"line": 21,
									"character": 11,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L21"
								}
							],
							"signatures": [
								{
									"id": 2151,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2152,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2153,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2154,
															"name": "x",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 21,
																	"character": 21,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L21"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2155,
															"name": "y",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 21,
																	"character": 32,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L21"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2154,
																2155
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tools/input/mouseInput.ts",
															"line": 21,
															"character": 19,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L21"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 2133,
					"name": "down",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L19"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2134,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/input/mouseInput.ts",
									"line": 19,
									"character": 10,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L19"
								}
							],
							"signatures": [
								{
									"id": 2135,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2136,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2137,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2138,
															"name": "x",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 19,
																	"character": 20,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L19"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2139,
															"name": "y",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 19,
																	"character": 31,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L19"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2138,
																2139
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tools/input/mouseInput.ts",
															"line": 19,
															"character": 18,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L19"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 2181,
					"name": "dragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L25"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2182,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/input/mouseInput.ts",
									"line": 25,
									"character": 13,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L25"
								}
							],
							"signatures": [
								{
									"id": 2183,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2184,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2185,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2186,
															"name": "x",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 25,
																	"character": 23,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L25"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2187,
															"name": "y",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 25,
																	"character": 34,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L25"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2186,
																2187
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tools/input/mouseInput.ts",
															"line": 25,
															"character": 21,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L25"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 2170,
					"name": "dragging",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L24"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2171,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/input/mouseInput.ts",
									"line": 24,
									"character": 14,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L24"
								}
							],
							"signatures": [
								{
									"id": 2172,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2173,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2174,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2177,
															"name": "dx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 24,
																	"character": 46,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L24"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2178,
															"name": "dy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 24,
																	"character": 58,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L24"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2179,
															"name": "ox",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 24,
																	"character": 70,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L24"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2180,
															"name": "oy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 24,
																	"character": 82,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L24"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2175,
															"name": "x",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 24,
																	"character": 24,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L24"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2176,
															"name": "y",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 24,
																	"character": 35,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L24"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2177,
																2178,
																2179,
																2180,
																2175,
																2176
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tools/input/mouseInput.ts",
															"line": 24,
															"character": 22,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L24"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 2140,
					"name": "move",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L20"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2141,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/input/mouseInput.ts",
									"line": 20,
									"character": 10,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L20"
								}
							],
							"signatures": [
								{
									"id": 2142,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2143,
											"name": "evemt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2144,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2147,
															"name": "dx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 20,
																	"character": 42,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L20"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2148,
															"name": "dy",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 20,
																	"character": 54,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L20"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2145,
															"name": "x",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 20,
																	"character": 20,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L20"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2146,
															"name": "y",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 20,
																	"character": 31,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L20"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2147,
																2148,
																2145,
																2146
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tools/input/mouseInput.ts",
															"line": 20,
															"character": 18,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L20"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 2163,
					"name": "pinch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L23"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2164,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/input/mouseInput.ts",
									"line": 23,
									"character": 11,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L23"
								}
							],
							"signatures": [
								{
									"id": 2165,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2166,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2167,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2168,
															"name": "delta",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 23,
																	"character": 21,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L23"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2169,
															"name": "event",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 23,
																	"character": 36,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L23"
																}
															],
															"type": {
																"type": "reference",
																"name": "MouseEvent",
																"qualifiedName": "MouseEvent",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2168,
																2169
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tools/input/mouseInput.ts",
															"line": 23,
															"character": 19,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L23"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 2156,
					"name": "up",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L22"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2157,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/input/mouseInput.ts",
									"line": 22,
									"character": 8,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L22"
								}
							],
							"signatures": [
								{
									"id": 2158,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2159,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2160,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2161,
															"name": "x",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 22,
																	"character": 18,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L22"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2162,
															"name": "y",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "src/tools/input/mouseInput.ts",
																	"line": 22,
																	"character": 29,
																	"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L22"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2161,
																2162
															]
														}
													],
													"sources": [
														{
															"fileName": "src/tools/input/mouseInput.ts",
															"line": 22,
															"character": 16,
															"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L22"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2149,
						2133,
						2181,
						2170,
						2140,
						2163,
						2156
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/input/mouseInput.ts",
					"line": 17,
					"character": 17,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L17"
				}
			]
		},
		{
			"id": 2240,
			"name": "MouseInputOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "鼠标输入选项"
					}
				]
			},
			"children": [
				{
					"id": 2241,
					"name": "clickError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/input/mouseInput.ts",
							"line": 30,
							"character": 37,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2241
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/input/mouseInput.ts",
					"line": 30,
					"character": 17,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/input/mouseInput.ts#L30"
				}
			]
		},
		{
			"id": 1910,
			"name": "OrbitCameraInputOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "观测相机操作选项"
					}
				]
			},
			"children": [
				{
					"id": 1913,
					"name": "distanceSensitivity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1911,
					"name": "orbitCamera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 46,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L46"
						}
					],
					"type": {
						"type": "reference",
						"id": 1794,
						"name": "OrbitCamera"
					}
				},
				{
					"id": 1912,
					"name": "orbitSensitivity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L47"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1913,
						1911,
						1912
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/camera/orbitCamera.ts",
					"line": 44,
					"character": 17,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L44"
				}
			]
		},
		{
			"id": 2052,
			"name": "OrbitCameraOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "观测相机选项"
					}
				]
			},
			"children": [
				{
					"id": 2054,
					"name": "device",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"name": "AvailableDevices"
					}
				},
				{
					"id": 2065,
					"name": "distanceCondition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L37"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2066,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/camera/orbitCamera.ts",
									"line": 37,
									"character": 24,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L37"
								}
							],
							"signatures": [
								{
									"id": 2067,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 2061,
					"name": "distanceMax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2060,
					"name": "distanceMin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 34,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L34"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2056,
					"name": "distanceSensitivity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2057,
					"name": "inertiaFactor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2071,
					"name": "lookCondition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L39"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2072,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/camera/orbitCamera.ts",
									"line": 39,
									"character": 20,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L39"
								}
							],
							"signatures": [
								{
									"id": 2073,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 2053,
					"name": "mainCamra",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"name": "CameraComponent",
						"qualifiedName": "CameraComponent",
						"package": "playcanvas"
					}
				},
				{
					"id": 2055,
					"name": "orbitSensitivity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2068,
					"name": "panCondition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L38"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2069,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/camera/orbitCamera.ts",
									"line": 38,
									"character": 19,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 2070,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 2059,
					"name": "pitchMax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2058,
					"name": "pitchMin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 32,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2062,
					"name": "rotateCondition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/orbitCamera.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L36"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2063,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/camera/orbitCamera.ts",
									"line": 36,
									"character": 22,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L36"
								}
							],
							"signatures": [
								{
									"id": 2064,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2054,
						2065,
						2061,
						2060,
						2056,
						2057,
						2071,
						2053,
						2055,
						2068,
						2059,
						2058,
						2062
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/camera/orbitCamera.ts",
					"line": 25,
					"character": 17,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/orbitCamera.ts#L25"
				}
			]
		},
		{
			"id": 2354,
			"name": "SelectorOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "模型点选选项"
					}
				]
			},
			"children": [
				{
					"id": 2364,
					"name": "excludeLayers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L36"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "Layer",
							"qualifiedName": "Layer",
							"package": "playcanvas"
						}
					}
				},
				{
					"id": 2355,
					"name": "inputHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"id": 2553,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"id": 2132,
								"name": "InputEventsMap"
							}
						],
						"name": "Tool"
					}
				},
				{
					"id": 2357,
					"name": "pickAreaScale",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2356,
					"name": "pickCamera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L30"
						}
					],
					"type": {
						"type": "reference",
						"name": "CameraComponent",
						"qualifiedName": "CameraComponent",
						"package": "playcanvas"
					}
				},
				{
					"id": 2361,
					"name": "pickCondition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L35"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2362,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/tools/selector/selector.ts",
									"line": 35,
									"character": 20,
									"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L35"
								}
							],
							"signatures": [
								{
									"id": 2363,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 2359,
					"name": "pickNull",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2360,
					"name": "pickSame",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 34,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L34"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2358,
					"name": "pickTag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/selector/selector.ts",
							"line": 32,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2364,
						2355,
						2357,
						2356,
						2361,
						2359,
						2360,
						2358
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/selector/selector.ts",
					"line": 27,
					"character": 17,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/selector/selector.ts#L27"
				}
			]
		},
		{
			"id": 2127,
			"name": "outlineCameraOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "外边框相机选项"
					}
				]
			},
			"children": [
				{
					"id": 2128,
					"name": "mainCamra",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"name": "CameraComponent",
						"qualifiedName": "CameraComponent",
						"package": "playcanvas"
					}
				},
				{
					"id": 2130,
					"name": "outlineColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"name": "Color",
						"qualifiedName": "Color",
						"package": "playcanvas"
					}
				},
				{
					"id": 2129,
					"name": "outlineLayerName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2131,
					"name": "outlineThickness",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/tools/camera/outlineCamera.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2128,
						2130,
						2129,
						2131
					]
				}
			],
			"sources": [
				{
					"fileName": "src/tools/camera/outlineCamera.ts",
					"line": 25,
					"character": 17,
					"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/tools/camera/outlineCamera.ts#L25"
				}
			]
		},
		{
			"id": 2442,
			"name": "AttributeParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/create-script-decorator.ts",
					"line": 56,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2443,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 2449,
							"name": "array",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2455,
							"name": "assetType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2457,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2456,
							"name": "curves",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2445,
							"name": "default",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2447,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2458,
							"name": "enum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 71,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						},
						{
							"id": 2452,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 65,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2451,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2448,
							"name": "placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 61,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 2453,
							"name": "precision",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2450,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2454,
							"name": "step",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2446,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2444,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 57,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "boolean"
									},
									{
										"type": "literal",
										"value": "number"
									},
									{
										"type": "literal",
										"value": "string"
									},
									{
										"type": "literal",
										"value": "json"
									},
									{
										"type": "literal",
										"value": "asset"
									},
									{
										"type": "literal",
										"value": "entity"
									},
									{
										"type": "literal",
										"value": "rgb"
									},
									{
										"type": "literal",
										"value": "rgba"
									},
									{
										"type": "literal",
										"value": "vec2"
									},
									{
										"type": "literal",
										"value": "vec3"
									},
									{
										"type": "literal",
										"value": "vec4"
									},
									{
										"type": "literal",
										"value": "curve"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2449,
								2455,
								2457,
								2456,
								2445,
								2447,
								2458,
								2452,
								2451,
								2448,
								2453,
								2450,
								2454,
								2446,
								2444
							]
						}
					],
					"sources": [
						{
							"fileName": "src/utils/helpers/create-script-decorator.ts",
							"line": 56,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 2438,
			"name": "attr",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/create-script-decorator.ts",
					"line": 44,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 2439,
					"name": "attr",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 2440,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2441,
							"name": "params",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2442,
								"name": "AttributeParams"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 2517,
			"name": "cast",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/extend-decorator.ts",
					"line": 51,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 2518,
					"name": "cast",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "转换类型"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "转换类型后的对象"
									}
								]
							}
						]
					},
					"typeParameter": [
						{
							"id": 2519,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2520,
							"name": "obj",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "待转换对象"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 2519,
						"name": "T"
					}
				}
			]
		},
		{
			"id": 2459,
			"name": "createScript",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/create-script-decorator.ts",
					"line": 11,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 2460,
					"name": "createScript",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Class decorator allowing the use of ES6 classes\r\nto define and create PlayCanvas script types.\r\nCaveat is: There is a slight iterative runtime overhead to this. (unlike Haxe which can utilize precompiled-macros)\r\nThe cool thing is that your script (if it uses properties) has an additional property called "
							},
							{
								"kind": "code",
								"text": "`attributesData`"
							},
							{
								"kind": "text",
								"text": " that can facilitate offboard property reflection/runtime-component\r\nproperty GUI creation."
							}
						]
					},
					"parameters": [
						{
							"id": 2461,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2462,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/utils/helpers/create-script-decorator.ts",
									"line": 13,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2463,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2464,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2375,
			"name": "drawScreenQuad",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/func/drawSelectionBox/drawScreenQuad.ts",
					"line": 34,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 2376,
					"name": "drawScreenQuad",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "绘制框选矩形内部"
							}
						]
					},
					"parameters": [
						{
							"id": 2377,
							"name": "rect",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "矩形范围"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"defaultValue": "defaultRect"
						},
						{
							"id": 2378,
							"name": "color",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "颜色"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Color",
								"qualifiedName": "Color",
								"package": "playcanvas"
							},
							"defaultValue": "defaultColor"
						},
						{
							"id": 2379,
							"name": "layer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "layer"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Layer",
								"qualifiedName": "Layer",
								"package": "playcanvas"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 2380,
			"name": "drawScreenRect",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/func/drawSelectionBox/drawScreenRect.ts",
					"line": 34,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 2381,
					"name": "drawScreenRect",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "绘制框选矩形边框"
							}
						]
					},
					"parameters": [
						{
							"id": 2382,
							"name": "rect",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "矩形范围"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Vec4",
								"qualifiedName": "Vec4",
								"package": "playcanvas"
							},
							"defaultValue": "defaultRect"
						},
						{
							"id": 2383,
							"name": "color",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "颜色"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Color",
								"qualifiedName": "Color",
								"package": "playcanvas"
							},
							"defaultValue": "defaultColor"
						},
						{
							"id": 2384,
							"name": "layer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "layer"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Layer",
								"qualifiedName": "Layer",
								"package": "playcanvas"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 2385,
			"name": "drawSelectionBox",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/func/drawSelectionBox/drawSelectionBox.ts",
					"line": 27,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 2386,
					"name": "drawSelectionBox",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "绘制框选矩形"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "框选矩形范围"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 2387,
							"name": "startPoint",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "开始点"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2388,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2389,
											"name": "x",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/func/drawSelectionBox/drawSelectionBox.ts",
													"line": 27,
													"character": 47
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2390,
											"name": "y",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/func/drawSelectionBox/drawSelectionBox.ts",
													"line": 27,
													"character": 58
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2389,
												2390
											]
										}
									],
									"sources": [
										{
											"fileName": "src/utils/func/drawSelectionBox/drawSelectionBox.ts",
											"line": 27,
											"character": 45
										}
									]
								}
							}
						},
						{
							"id": 2391,
							"name": "endPoint",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "移动点"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2392,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2393,
											"name": "x",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/func/drawSelectionBox/drawSelectionBox.ts",
													"line": 27,
													"character": 83
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2394,
											"name": "y",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/utils/func/drawSelectionBox/drawSelectionBox.ts",
													"line": 27,
													"character": 94
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2393,
												2394
											]
										}
									],
									"sources": [
										{
											"fileName": "src/utils/func/drawSelectionBox/drawSelectionBox.ts",
											"line": 27,
											"character": 81
										}
									]
								}
							}
						},
						{
							"id": 2395,
							"name": "boxLayer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Layer",
								"qualifiedName": "Layer",
								"package": "playcanvas"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "pc.Vec4",
						"qualifiedName": "Vec4",
						"package": "playcanvas"
					}
				}
			]
		},
		{
			"id": 2521,
			"name": "extendClass",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/extend-decorator.ts",
					"line": 61,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 2522,
					"name": "extendClass",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "扩展pc类"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "扩展类"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 2523,
							"name": "extendClassName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "扩展类名称"
									}
								]
							},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 2527,
									"name": "ExtendClassName"
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2524,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/utils/helpers/extend-decorator.ts",
									"line": 61,
									"character": 69
								}
							],
							"signatures": [
								{
									"id": 2525,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2526,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2541,
			"name": "frag",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/shaderHelper.ts",
					"line": 11,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 2542,
					"name": "frag",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 2543,
							"name": "x",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "TemplateStringsArray",
								"qualifiedName": "TemplateStringsArray",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 2544,
			"name": "glsl",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/shaderHelper.ts",
					"line": 9,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 2545,
					"name": "glsl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "@ 创建者: FBplus\r\n@ 创建时间: 2022-07-08 14:21:44\r\n@ 修改者: FBplus\r\n@ 修改时间: 2022-07-08 15:07:41\r\n@ 详情: javascript内联glsl帮助函数"
							}
						]
					},
					"parameters": [
						{
							"id": 2546,
							"name": "x",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "TemplateStringsArray",
								"qualifiedName": "TemplateStringsArray",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 2547,
			"name": "glslify",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/shaderHelper.ts",
					"line": 10,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 2548,
					"name": "glslify",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 2549,
							"name": "x",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "TemplateStringsArray",
								"qualifiedName": "TemplateStringsArray",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 2603,
			"name": "use",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/useToolHelper.ts",
					"line": 68,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 2604,
					"name": "use",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "使用工具"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "工具实例"
									}
								]
							}
						]
					},
					"typeParameter": [
						{
							"id": 2605,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"name": "ToolOptions"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 2606,
							"name": "toolName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "工具名称"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 2605,
								"name": "K"
							}
						},
						{
							"id": 2607,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "工具设置"
									}
								]
							},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"id": 2605,
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"name": "ToolOptions"
								}
							}
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"id": 2605,
							"name": "K"
						},
						"objectType": {
							"type": "reference",
							"name": "ToolName"
						}
					}
				}
			]
		},
		{
			"id": 2608,
			"name": "useGlobal",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/useToolHelper.ts",
					"line": 87,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 2609,
					"name": "useGlobal",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "全局使用工具"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "工具实例"
									}
								]
							}
						]
					},
					"typeParameter": [
						{
							"id": 2610,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"name": "ToolOptions"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 2611,
							"name": "toolName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "工具名称"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 2610,
								"name": "K"
							}
						},
						{
							"id": 2612,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "工具设置"
									}
								]
							},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"id": 2610,
									"name": "K"
								},
								"objectType": {
									"type": "reference",
									"name": "ToolOptions"
								}
							}
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"id": 2610,
							"name": "K"
						},
						"objectType": {
							"type": "reference",
							"name": "ToolName"
						}
					}
				}
			]
		},
		{
			"id": 2550,
			"name": "vert",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/utils/helpers/shaderHelper.ts",
					"line": 12,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 2551,
					"name": "vert",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 2552,
							"name": "x",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "TemplateStringsArray",
								"qualifiedName": "TemplateStringsArray",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				1,
				245,
				293,
				2365,
				2242,
				333,
				798,
				2396,
				1045,
				2188,
				1794,
				1914,
				1977,
				2074,
				2613,
				1185,
				1263,
				2465,
				2296,
				1281,
				2553,
				1459,
				1565,
				1696
			]
		},
		{
			"title": "Interfaces",
			"children": [
				2527,
				2132,
				2240,
				1910,
				2052,
				2354,
				2127
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				2442
			]
		},
		{
			"title": "Functions",
			"children": [
				2438,
				2517,
				2459,
				2375,
				2380,
				2385,
				2521,
				2541,
				2544,
				2547,
				2603,
				2608,
				2550
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 2,
			"character": 0,
			"url": "https://github.com/TheFBplus/pc-ex/blob/0f53486/src/index.ts#L2"
		}
	]
}