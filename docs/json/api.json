{
	"id": 0,
	"name": "pc-ex",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 317,
			"name": "CameraComponent_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extendClass",
					"type": {
						"type": "reference",
						"id": 184,
						"name": "extendClass"
					},
					"arguments": {
						"extendClassName": "\"CameraComponent\""
					}
				}
			],
			"children": [
				{
					"id": 322,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 323,
							"name": "new CameraComponent_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new CameraComponent instance."
							},
							"parameters": [
								{
									"id": 324,
									"name": "system",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ComponentSystem that created this Component."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CameraComponentSystem",
										"package": "playcanvas",
										"name": "CameraComponentSystem"
									}
								},
								{
									"id": 325,
									"name": "entity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The Entity that this Component is attached to.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Entity",
										"package": "playcanvas",
										"name": "Entity"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 317,
								"name": "CameraComponent_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.constructor"
					}
				},
				{
					"id": 391,
					"name": "_camera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28204,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Camera",
						"package": "playcanvas",
						"name": "Camera"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._camera"
					}
				},
				{
					"id": 393,
					"name": "_disablePostEffectsLayer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28206,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._disablePostEffectsLayer"
					}
				},
				{
					"id": 394,
					"name": "_postEffects",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28207,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "PostEffectQueue",
						"package": "playcanvas",
						"name": "PostEffectQueue"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._postEffects"
					}
				},
				{
					"id": 392,
					"name": "_priority",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28205,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._priority"
					}
				},
				{
					"id": 472,
					"name": "aspectRatio",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28357,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.aspectRatio"
					}
				},
				{
					"id": 390,
					"name": "onPostRender",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Custom function that is called after the camera renders the scene."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28203,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Function",
						"package": "typescript",
						"name": "Function"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onPostRender"
					}
				},
				{
					"id": 389,
					"name": "onPreRender",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Custom function that is called before the camera renders the scene."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28197,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Function",
						"package": "typescript",
						"name": "Function"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onPreRender"
					}
				},
				{
					"id": 473,
					"name": "vrDisplay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28424,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.vrDisplay"
					}
				},
				{
					"id": 333,
					"name": "aspectRatioMode",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28143,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 334,
							"name": "aspectRatioMode",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.aspectRatioMode"
							}
						}
					],
					"setSignature": [
						{
							"id": 335,
							"name": "aspectRatioMode",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 336,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.aspectRatioMode"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.aspectRatioMode"
					}
				},
				{
					"id": 337,
					"name": "calculateProjection",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28146,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 338,
							"name": "calculateProjection",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "CalculateMatrixCallback",
								"package": "playcanvas",
								"name": "CalculateMatrixCallback"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateProjection"
							}
						}
					],
					"setSignature": [
						{
							"id": 339,
							"name": "calculateProjection",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 340,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CalculateMatrixCallback",
										"package": "playcanvas",
										"name": "CalculateMatrixCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateProjection"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.calculateProjection"
					}
				},
				{
					"id": 341,
					"name": "calculateTransform",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28149,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 342,
							"name": "calculateTransform",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "CalculateMatrixCallback",
								"package": "playcanvas",
								"name": "CalculateMatrixCallback"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateTransform"
							}
						}
					],
					"setSignature": [
						{
							"id": 343,
							"name": "calculateTransform",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 344,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CalculateMatrixCallback",
										"package": "playcanvas",
										"name": "CalculateMatrixCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateTransform"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.calculateTransform"
					}
				},
				{
					"id": 395,
					"name": "camera",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPrivate": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28214,
							"character": 16
						}
					],
					"getSignature": [
						{
							"id": 396,
							"name": "camera",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isPrivate": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Queries the camera component's underlying Camera instance."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.camera"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.camera"
					}
				},
				{
					"id": 345,
					"name": "clearColor",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28152,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 346,
							"name": "clearColor",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearColor"
							}
						}
					],
					"setSignature": [
						{
							"id": 347,
							"name": "clearColor",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 348,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearColor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearColor"
					}
				},
				{
					"id": 397,
					"name": "clearColorBuffer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28220,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 398,
							"name": "clearColorBuffer",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the color buffer to the color set in clearColor. Defaults to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearColorBuffer"
							}
						}
					],
					"setSignature": [
						{
							"id": 399,
							"name": "clearColorBuffer",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the color buffer to the color set in clearColor. Defaults to true."
							},
							"parameters": [
								{
									"id": 400,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearColorBuffer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearColorBuffer"
					}
				},
				{
					"id": 401,
					"name": "clearDepthBuffer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28227,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 402,
							"name": "clearDepthBuffer",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the depth buffer. Defaults to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearDepthBuffer"
							}
						}
					],
					"setSignature": [
						{
							"id": 403,
							"name": "clearDepthBuffer",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the depth buffer. Defaults to true."
							},
							"parameters": [
								{
									"id": 404,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearDepthBuffer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearDepthBuffer"
					}
				},
				{
					"id": 405,
					"name": "clearStencilBuffer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28234,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 406,
							"name": "clearStencilBuffer",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the stencil buffer. Defaults to true."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearStencilBuffer"
							}
						}
					],
					"setSignature": [
						{
							"id": 407,
							"name": "clearStencilBuffer",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "If true the camera will clear the stencil buffer. Defaults to true."
							},
							"parameters": [
								{
									"id": 408,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.clearStencilBuffer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.clearStencilBuffer"
					}
				},
				{
					"id": 349,
					"name": "cullFaces",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28155,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 350,
							"name": "cullFaces",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.cullFaces"
							}
						}
					],
					"setSignature": [
						{
							"id": 351,
							"name": "cullFaces",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 352,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.cullFaces"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.cullFaces"
					}
				},
				{
					"id": 409,
					"name": "disablePostEffectsLayer",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28244,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 410,
							"name": "disablePostEffectsLayer",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Layer ID of a layer on which the postprocessing of the camera stops being applied to.\nDefaults to LAYERID_UI, which causes post processing to not be applied to UI layer and any\nfollowing layers for the camera. Set to undefined for post-processing to be applied to all\nlayers of the camera."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.disablePostEffectsLayer"
							}
						}
					],
					"setSignature": [
						{
							"id": 411,
							"name": "disablePostEffectsLayer",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Layer ID of a layer on which the postprocessing of the camera stops being applied to.\nDefaults to LAYERID_UI, which causes post processing to not be applied to UI layer and any\nfollowing layers for the camera. Set to undefined for post-processing to be applied to all\nlayers of the camera."
							},
							"parameters": [
								{
									"id": 412,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.disablePostEffectsLayer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.disablePostEffectsLayer"
					}
				},
				{
					"id": 494,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9560,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 495,
							"name": "enabled",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.enabled"
							}
						}
					],
					"setSignature": [
						{
							"id": 496,
							"name": "enabled",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 497,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.enabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.enabled"
					}
				},
				{
					"id": 353,
					"name": "farClip",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28158,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 354,
							"name": "farClip",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.farClip"
							}
						}
					],
					"setSignature": [
						{
							"id": 355,
							"name": "farClip",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 356,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.farClip"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.farClip"
					}
				},
				{
					"id": 357,
					"name": "flipFaces",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28161,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 358,
							"name": "flipFaces",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.flipFaces"
							}
						}
					],
					"setSignature": [
						{
							"id": 359,
							"name": "flipFaces",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 360,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.flipFaces"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.flipFaces"
					}
				},
				{
					"id": 361,
					"name": "fov",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28164,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 362,
							"name": "fov",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.fov"
							}
						}
					],
					"setSignature": [
						{
							"id": 363,
							"name": "fov",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 364,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.fov"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.fov"
					}
				},
				{
					"id": 413,
					"name": "frustum",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28251,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 414,
							"name": "frustum",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Queries the camera's frustum shape."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Frustum",
								"package": "playcanvas",
								"name": "Frustum"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.frustum"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.frustum"
					}
				},
				{
					"id": 365,
					"name": "frustumCulling",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28167,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 366,
							"name": "frustumCulling",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.frustumCulling"
							}
						}
					],
					"setSignature": [
						{
							"id": 367,
							"name": "frustumCulling",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 368,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.frustumCulling"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.frustumCulling"
					}
				},
				{
					"id": 369,
					"name": "horizontalFov",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28170,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 370,
							"name": "horizontalFov",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.horizontalFov"
							}
						}
					],
					"setSignature": [
						{
							"id": 371,
							"name": "horizontalFov",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 372,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.horizontalFov"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.horizontalFov"
					}
				},
				{
					"id": 415,
					"name": "layers",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28259,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 416,
							"name": "layers",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "An array of layer IDs ({@link Layer#id}) to which this camera should belong. Don't push,\npop, splice or modify this array, if you want to change it, set a new one instead. Defaults\nto [LAYERID_WORLD, LAYERID_DEPTH, LAYERID_SKYBOX, LAYERID_UI, LAYERID_IMMEDIATE]."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.layers"
							}
						}
					],
					"setSignature": [
						{
							"id": 417,
							"name": "layers",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "An array of layer IDs ({@link Layer#id}) to which this camera should belong. Don't push,\npop, splice or modify this array, if you want to change it, set a new one instead. Defaults\nto [LAYERID_WORLD, LAYERID_DEPTH, LAYERID_SKYBOX, LAYERID_UI, LAYERID_IMMEDIATE]."
							},
							"parameters": [
								{
									"id": 418,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.layers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.layers"
					}
				},
				{
					"id": 373,
					"name": "nearClip",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28173,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 374,
							"name": "nearClip",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.nearClip"
							}
						}
					],
					"setSignature": [
						{
							"id": 375,
							"name": "nearClip",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 376,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.nearClip"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.nearClip"
					}
				},
				{
					"id": 377,
					"name": "orthoHeight",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28176,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 378,
							"name": "orthoHeight",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.orthoHeight"
							}
						}
					],
					"setSignature": [
						{
							"id": 379,
							"name": "orthoHeight",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 380,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.orthoHeight"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.orthoHeight"
					}
				},
				{
					"id": 421,
					"name": "postEffects",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28267,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 422,
							"name": "postEffects",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "PostEffectQueue",
								"package": "playcanvas",
								"name": "PostEffectQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.postEffects"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.postEffects"
					}
				},
				{
					"id": 419,
					"name": "postEffectsEnabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28266,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 420,
							"name": "postEffectsEnabled",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The post effects queue for this camera. Use this to add or remove post effects from the camera."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "PostEffectQueue",
								"package": "playcanvas",
								"name": "PostEffectQueue"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.postEffectsEnabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.postEffectsEnabled"
					}
				},
				{
					"id": 423,
					"name": "priority",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28274,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 424,
							"name": "priority",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Controls the order in which cameras are rendered. Cameras with smaller values for priority\nare rendered first. Defaults to 0."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.priority"
							}
						}
					],
					"setSignature": [
						{
							"id": 425,
							"name": "priority",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Controls the order in which cameras are rendered. Cameras with smaller values for priority\nare rendered first. Defaults to 0."
							},
							"parameters": [
								{
									"id": 426,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.priority"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.priority"
					}
				},
				{
					"id": 381,
					"name": "projection",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28179,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 382,
							"name": "projection",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.projection"
							}
						}
					],
					"setSignature": [
						{
							"id": 383,
							"name": "projection",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 384,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.projection"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.projection"
					}
				},
				{
					"id": 427,
					"name": "projectionMatrix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28281,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 428,
							"name": "projectionMatrix",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Queries the camera's projection matrix."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Mat4",
								"package": "playcanvas",
								"name": "Mat4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.projectionMatrix"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.projectionMatrix"
					}
				},
				{
					"id": 429,
					"name": "rect",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28288,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 430,
							"name": "rect",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Controls where on the screen the camera will be rendered in normalized screen coordinates.\nDefaults to [0, 0, 1, 1]."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.rect"
							}
						}
					],
					"setSignature": [
						{
							"id": 431,
							"name": "rect",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Controls where on the screen the camera will be rendered in normalized screen coordinates.\nDefaults to [0, 0, 1, 1]."
							},
							"parameters": [
								{
									"id": 432,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.rect"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.rect"
					}
				},
				{
					"id": 433,
					"name": "renderTarget",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28296,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 434,
							"name": "renderTarget",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Render target to which rendering of the cameras is performed. If not set, it will render\nsimply to the screen."
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.renderTarget"
							}
						}
					],
					"setSignature": [
						{
							"id": 435,
							"name": "renderTarget",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Render target to which rendering of the cameras is performed. If not set, it will render\nsimply to the screen."
							},
							"parameters": [
								{
									"id": 436,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.renderTarget"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.renderTarget"
					}
				},
				{
					"id": 385,
					"name": "scissorRect",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28182,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 386,
							"name": "scissorRect",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec4",
								"package": "playcanvas",
								"name": "Vec4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.scissorRect"
							}
						}
					],
					"setSignature": [
						{
							"id": 387,
							"name": "scissorRect",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 388,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.scissorRect"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.scissorRect"
					}
				},
				{
					"id": 437,
					"name": "viewMatrix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28303,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 438,
							"name": "viewMatrix",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Queries the camera's view matrix."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Mat4",
								"package": "playcanvas",
								"name": "Mat4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.viewMatrix"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.viewMatrix"
					}
				},
				{
					"id": 453,
					"name": "addCameraToLayers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28336,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 454,
							"name": "addCameraToLayers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.addCameraToLayers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.addCameraToLayers"
					}
				},
				{
					"id": 500,
					"name": "buildAccessors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9577,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 501,
							"name": "buildAccessors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 502,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.buildAccessors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.buildAccessors"
					}
				},
				{
					"id": 469,
					"name": "calculateAspectRatio",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28348,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 470,
							"name": "calculateAspectRatio",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Calculates aspect ratio value for a given render target.",
								"returns": "The aspect ratio of the render target (or backbuffer).\n"
							},
							"parameters": [
								{
									"id": 471,
									"name": "rt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas",
										"name": "RenderTarget"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.calculateAspectRatio"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.calculateAspectRatio"
					}
				},
				{
					"id": 491,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28505,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 492,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 493,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.copy"
					}
				},
				{
					"id": 439,
					"name": "dirtyLayerCompositionCameras",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28304,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 440,
							"name": "dirtyLayerCompositionCameras",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.dirtyLayerCompositionCameras"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.dirtyLayerCompositionCameras"
					}
				},
				{
					"id": 488,
					"name": "endXr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28504,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 489,
							"name": "endXr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attempt to end XR session of this camera.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// On an entity with a camera component\nthis.entity.camera.endXr(function (err) {\n    // not anymore in XR\n});\n"
									}
								]
							},
							"parameters": [
								{
									"id": 490,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "XrErrorCallback",
										"package": "playcanvas",
										"name": "XrErrorCallback"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.endXr"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.endXr"
					}
				},
				{
					"id": 526,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 527,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Fire an event, all additional arguments are passed on to the event listener.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.fire('test', 'This is the message');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 528,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of event to fire."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 529,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 530,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 531,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 532,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 533,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 534,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 535,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 536,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.fire"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.fire"
					}
				},
				{
					"id": 542,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 130,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 543,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Test if there are any handlers bound to an event name.",
								"returns": "True if the object has handlers bound to the specified event name.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.on('test', function () { }); // bind an event to 'test'\nobj.hasEvent('test'); // returns true\nobj.hasEvent('hello'); // returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 544,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the event to test."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.hasEvent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.hasEvent"
					}
				},
				{
					"id": 521,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 522,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Detach an event handler from an event. If callback is not provided then all callbacks are\nunbound from the event, if scope is not provided then all events with the callback will be\nunbound.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar handler = function () {\n};\nobj.on('test', handler);\n\nobj.off(); // Removes all events\nobj.off('test'); // Removes all events called 'test'\nobj.off('test', handler); // Removes all handler functions, called 'test'\nobj.off('test', handler, this); // Removes all handler functions, called 'test' with scope this\n"
									}
								]
							},
							"parameters": [
								{
									"id": 523,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 524,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 525,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.off"
					}
				},
				{
					"id": 516,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 517,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attach an event handler to an event.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.on('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\n"
									}
								]
							},
							"parameters": [
								{
									"id": 518,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 519,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 520,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.on"
					}
				},
				{
					"id": 451,
					"name": "onAppPrerender",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28335,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 452,
							"name": "onAppPrerender",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onAppPrerender"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onAppPrerender"
					}
				},
				{
					"id": 510,
					"name": "onDisable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9580,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 511,
							"name": "onDisable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onDisable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onDisable"
					}
				},
				{
					"id": 508,
					"name": "onEnable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9579,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 509,
							"name": "onEnable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onEnable"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onEnable"
					}
				},
				{
					"id": 461,
					"name": "onLayerAdded",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28339,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 462,
							"name": "onLayerAdded",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 463,
									"name": "layer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onLayerAdded"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onLayerAdded"
					}
				},
				{
					"id": 464,
					"name": "onLayerRemoved",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28340,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 465,
							"name": "onLayerRemoved",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 466,
									"name": "layer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onLayerRemoved"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onLayerRemoved"
					}
				},
				{
					"id": 457,
					"name": "onLayersChanged",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28338,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 458,
							"name": "onLayersChanged",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 459,
									"name": "oldComp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 460,
									"name": "newComp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onLayersChanged"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onLayersChanged"
					}
				},
				{
					"id": 512,
					"name": "onPostStateChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9581,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 513,
							"name": "onPostStateChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onPostStateChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onPostStateChange"
					}
				},
				{
					"id": 467,
					"name": "onRemove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28341,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 468,
							"name": "onRemove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onRemove"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onRemove"
					}
				},
				{
					"id": 503,
					"name": "onSetEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9578,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 504,
							"name": "onSetEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 505,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 506,
									"name": "oldValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 507,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.onSetEnabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.onSetEnabled"
					}
				},
				{
					"id": 537,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 119,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 538,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attach an event handler to an event. This handler will be removed after being fired once.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.once('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\nobj.fire('test', 1, 2); // not going to get handled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 539,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 540,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 541,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.once"
					}
				},
				{
					"id": 329,
					"name": "raycastMeshInstances",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/cameraComponent.ts",
							"line": 56,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 330,
							"name": "raycastMeshInstances",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "从此相机发射射线，检测一系列mesh的交点",
								"returns": "交点集合\n"
							},
							"parameters": [
								{
									"id": 331,
									"name": "ray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "要检测的射线"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Ray",
										"package": "playcanvas",
										"name": "Ray"
									}
								},
								{
									"id": 332,
									"name": "meshInstances",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "要检测的meshInstance集合"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "MeshInstance",
											"package": "playcanvas",
											"name": "MeshInstance"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "intersect"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.CameraComponent.raycastMeshInstances"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.CameraComponent.raycastMeshInstances"
					}
				},
				{
					"id": 455,
					"name": "removeCameraFromLayers",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28337,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 456,
							"name": "removeCameraFromLayers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.removeCameraFromLayers"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.removeCameraFromLayers"
					}
				},
				{
					"id": 441,
					"name": "screenToWorld",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28326,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 442,
							"name": "screenToWorld",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Convert a point from 2D screen space to 3D world space.",
								"returns": "The world space coordinate.\n",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Get the start and end points of a 3D ray fired from a screen click position\nvar start = entity.camera.screenToWorld(clickX, clickY, entity.camera.nearClip);\nvar end = entity.camera.screenToWorld(clickX, clickY, entity.camera.farClip);\n\n// Use the ray coordinates to perform a raycast\napp.systems.rigidbody.raycastFirst(start, end, function (result) {\n    console.log(\"Entity \" + result.entity.name + \" was selected\");\n});"
									}
								]
							},
							"parameters": [
								{
									"id": 443,
									"name": "screenx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "X coordinate on PlayCanvas' canvas element. Should be in the range\n0 to `canvas.offsetWidth` of the application's canvas element."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 444,
									"name": "screeny",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Y coordinate on PlayCanvas' canvas element. Should be in the range\n0 to `canvas.offsetHeight` of the application's canvas element."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 445,
									"name": "cameraz",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The distance from the camera in world space to create the new\npoint."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 446,
									"name": "worldCoord",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.screenToWorld"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.screenToWorld"
					}
				},
				{
					"id": 474,
					"name": "startXr",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28483,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 475,
							"name": "startXr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attempt to start XR session with this camera.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// On an entity with a camera component\nthis.entity.camera.startXr(pc.XRTYPE_VR, pc.XRSPACE_LOCAL, {\n    callback: function (err) {\n        if (err) {\n            // failed to start XR session\n        } else {\n            // in XR\n        }\n    }\n});\n"
									}
								]
							},
							"parameters": [
								{
									"id": 476,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The type of session. Can be one of the following:\n\n- {@link XRTYPE_INLINE}: Inline - always available type of session. It has limited feature\navailability and is rendered into HTML element.\n- {@link XRTYPE_VR}: Immersive VR - session that provides exclusive access to the VR device\nwith the best available tracking features.\n- {@link XRTYPE_AR}: Immersive AR - session that provides exclusive access to the VR/AR\ndevice that is intended to be blended with the real-world environment.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 477,
									"name": "spaceType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Reference space type. Can be one of the following:\n\n- {@link XRSPACE_VIEWER}: Viewer - always supported space with some basic tracking\ncapabilities.\n- {@link XRSPACE_LOCAL}: Local - represents a tracking space with a native origin near the\nviewer at the time of creation. It is meant for seated or basic local XR sessions.\n- {@link XRSPACE_LOCALFLOOR}: Local Floor - represents a tracking space with a native origin\nat the floor in a safe position for the user to stand. The y-axis equals 0 at floor level.\nFloor level value might be estimated by the underlying platform. It is meant for seated or\nbasic local XR sessions.\n- {@link XRSPACE_BOUNDEDFLOOR}: Bounded Floor - represents a tracking space with its native\norigin at the floor, where the user is expected to move within a pre-established boundary.\n- {@link XRSPACE_UNBOUNDED}: Unbounded - represents a tracking space where the user is\nexpected to move freely around their environment, potentially long distances from their\nstarting point.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 478,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 479,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 483,
													"name": "callback",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 28487,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"qualifiedName": "XrErrorCallback",
														"package": "playcanvas",
														"name": "XrErrorCallback"
													}
												},
												{
													"id": 484,
													"name": "depthSensing",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 28488,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 485,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {
																"isExternal": true
															},
															"children": [
																{
																	"id": 487,
																	"name": "dataFormatPreference",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
																			"line": 28490,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 486,
																	"name": "usagePreference",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
																			"line": 28489,
																			"character": 12
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		487,
																		486
																	]
																}
															]
														}
													}
												},
												{
													"id": 481,
													"name": "imageTracking",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 28485,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 480,
													"name": "optionalFeatures",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 28484,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 482,
													"name": "planeDetection",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
															"line": 28486,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														483,
														484,
														481,
														480,
														482
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.startXr"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.startXr"
					}
				},
				{
					"id": 326,
					"name": "syncCamera",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/cameraComponent.ts",
							"line": 34,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 327,
							"name": "syncCamera",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "让两个相机同步"
							},
							"parameters": [
								{
									"id": 328,
									"name": "camera",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "要同步的相机\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "CameraComponent",
										"package": "playcanvas",
										"name": "CameraComponent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.CameraComponent.syncCamera"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.CameraComponent.syncCamera"
					}
				},
				{
					"id": 447,
					"name": "worldToScreen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 28334,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 448,
							"name": "worldToScreen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Convert a point from 3D world space to 2D screen space.",
								"returns": "The screen space coordinate.\n"
							},
							"parameters": [
								{
									"id": 449,
									"name": "worldCoord",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The world space coordinate."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 450,
									"name": "screenCoord",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent.worldToScreen"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent.worldToScreen"
					}
				},
				{
					"id": 318,
					"name": "_buildAccessors",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 9551,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 319,
							"name": "_buildAccessors",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 320,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 321,
									"name": "schema",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.CameraComponent._buildAccessors"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.CameraComponent._buildAccessors"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						322
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						391,
						393,
						394,
						392,
						472,
						390,
						389,
						473
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						333,
						337,
						341,
						395,
						345,
						397,
						401,
						405,
						349,
						409,
						494,
						353,
						357,
						361,
						413,
						365,
						369,
						415,
						373,
						377,
						421,
						419,
						423,
						381,
						427,
						429,
						433,
						385,
						437
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						453,
						500,
						469,
						491,
						439,
						488,
						526,
						542,
						521,
						516,
						451,
						510,
						508,
						461,
						464,
						457,
						512,
						467,
						503,
						537,
						329,
						455,
						441,
						474,
						326,
						447,
						318
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/extendClasses/cameraComponent.ts",
					"line": 28,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "CameraComponent",
					"package": "playcanvas",
					"name": "CameraComponent"
				}
			]
		},
		{
			"id": 545,
			"name": "Color_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extendClass",
					"type": {
						"type": "reference",
						"id": 184,
						"name": "extendClass"
					},
					"arguments": {
						"extendClassName": "\"Color\""
					}
				}
			],
			"children": [
				{
					"id": 555,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 556,
							"name": "new Color_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Color object."
							},
							"parameters": [
								{
									"id": 557,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 558,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 559,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 560,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 545,
								"name": "Color_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.constructor"
					}
				},
				{
					"id": 561,
					"name": "_shaderData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/color.ts",
							"line": 18,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Float32Array",
						"package": "typescript",
						"name": "Float32Array"
					}
				},
				{
					"id": 567,
					"name": "a",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The alpha component of the color."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10644,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.a"
					}
				},
				{
					"id": 566,
					"name": "b",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The blue component of the color."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10638,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.b"
					}
				},
				{
					"id": 565,
					"name": "g",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The green component of the color."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10632,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.g"
					}
				},
				{
					"id": 564,
					"name": "r",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The red component of the color."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10626,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.r"
					}
				},
				{
					"id": 546,
					"name": "BLACK",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to black [0, 0, 0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10554,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.BLACK"
					}
				},
				{
					"id": 547,
					"name": "BLUE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to blue [0, 0, 1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10561,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.BLUE"
					}
				},
				{
					"id": 548,
					"name": "CYAN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to cyan [0, 1, 1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10568,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.CYAN"
					}
				},
				{
					"id": 549,
					"name": "GRAY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to gray [0.5, 0.5, 0.5, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10575,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.GRAY"
					}
				},
				{
					"id": 550,
					"name": "GREEN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to green [0, 1, 0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10582,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.GREEN"
					}
				},
				{
					"id": 551,
					"name": "MAGENTA",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to magenta [1, 0, 1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10589,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.MAGENTA"
					}
				},
				{
					"id": 552,
					"name": "RED",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to red [1, 0, 0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10596,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.RED"
					}
				},
				{
					"id": 553,
					"name": "WHITE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to white [1, 1, 1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10603,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.WHITE"
					}
				},
				{
					"id": 554,
					"name": "YELLOW",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant color set to yellow [1, 1, 0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10610,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Color",
						"package": "playcanvas",
						"name": "Color"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.YELLOW"
					}
				},
				{
					"id": 562,
					"name": "shaderData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/color.ts",
							"line": 20,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 563,
							"name": "shaderData",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"qualifiedName": "Float32Array",
								"package": "typescript",
								"name": "Float32Array"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Color.shaderData"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.Color.shaderData"
					}
				},
				{
					"id": 568,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10650,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 569,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a clone of the specified color.",
								"returns": "A duplicate color object.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.clone"
					}
				},
				{
					"id": 570,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10664,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 571,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Copies the contents of a source color to a destination color.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar src = new pc.Color(1, 0, 0, 1);\nvar dst = new pc.Color();\n\ndst.copy(src);\n\nconsole.log(\"The two colors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 572,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A color to copy to the specified color."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.copy"
					}
				},
				{
					"id": 573,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10675,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 574,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Reports whether two colors are equal.",
								"returns": "True if the colors are equal and false otherwise.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Color(1, 0, 0, 1);\nvar b = new pc.Color(1, 1, 0, 1);\nconsole.log(\"The two colors are \" + (a.equals(b) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 575,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The color to compare to the specified color."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.equals"
					}
				},
				{
					"id": 587,
					"name": "fromString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10713,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 588,
							"name": "fromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Set the values of the color from a string representation '#11223344' or '#112233'.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 589,
									"name": "hex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A string representation in the format '#RRGGBBAA' or '#RRGGBB'. Where\nRR, GG, BB, AA are red, green, blue and alpha values. This is the same format used in\nHTML/CSS."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.fromString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.fromString"
					}
				},
				{
					"id": 582,
					"name": "lerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10704,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 583,
							"name": "lerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a linear interpolation between two specified colors.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Color(0, 0, 0);\nvar b = new pc.Color(1, 1, 0.5);\nvar r = new pc.Color();\n\nr.lerp(a, b, 0);   // r is equal to a\nr.lerp(a, b, 0.5); // r is 0.5, 0.5, 0.25\nr.lerp(a, b, 1);   // r is equal to b\n"
									}
								]
							},
							"parameters": [
								{
									"id": 584,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The color to interpolate from."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								},
								{
									"id": 585,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The color to interpolate to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								},
								{
									"id": 586,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value controlling the point of interpolation. Between 0 and 1,\nthe linear interpolant will occur on a straight line between lhs and rhs. Outside of this\nrange, the linear interpolant will occur on a ray extrapolated from this line."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.lerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.lerp"
					}
				},
				{
					"id": 576,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10685,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 577,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Assign values to the color components, including alpha.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 578,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value for red (0-1)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 579,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value for blue (0-1)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 580,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value for green (0-1)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 581,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Color",
								"package": "playcanvas",
								"name": "Color"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.set"
					}
				},
				{
					"id": 590,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10726,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 591,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Converts the color to string form. The format is '#RRGGBBAA', where RR, GG, BB, AA are the\nred, green, blue and alpha values. When the alpha value is not included (the default), this\nis the same format as used in HTML/CSS.",
								"returns": "The color in string form.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar c = new pc.Color(1, 1, 1);\n// Outputs #ffffffff\nconsole.log(c.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 592,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "If true, the output string will include the alpha value."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Color.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Color.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						555
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						561,
						567,
						566,
						565,
						564,
						546,
						547,
						548,
						549,
						550,
						551,
						552,
						553,
						554
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						562
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						568,
						570,
						573,
						587,
						582,
						576,
						590
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/extendClasses/color.ts",
					"line": 16,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Color",
					"package": "playcanvas",
					"name": "Color"
				}
			]
		},
		{
			"id": 593,
			"name": "Curve_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extendClass",
					"type": {
						"type": "reference",
						"id": 184,
						"name": "extendClass"
					},
					"arguments": {
						"extendClassName": "\"Curve\""
					}
				}
			],
			"children": [
				{
					"id": 594,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 595,
							"name": "new Curve_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new Curve instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar curve = new pc.Curve([\n    0, 0,        // At 0 time, value of 0\n    0.33, 2,     // At 0.33 time, value of 2\n    0.66, 2.6,   // At 0.66 time, value of 2.6\n    1, 3         // At 1 time, value of 3\n]);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 596,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 593,
								"name": "Curve_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.constructor"
					}
				},
				{
					"id": 603,
					"name": "keys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17196,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.keys"
					}
				},
				{
					"id": 605,
					"name": "tension",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Controls how {@link CURVE_SPLINE} tangents are calculated. Valid range is between 0 and\n1 where 0 results in a non-smooth curve (equivalent to linear interpolation) and 1\nresults in a very smooth curve. Use 0.5 for a Catmull-rom spline."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17217,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.tension"
					}
				},
				{
					"id": 604,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The curve interpolation scheme. Can be:",
						"text": "- {@link CURVE_LINEAR}\n- {@link CURVE_SMOOTHSTEP}\n- {@link CURVE_SPLINE}\n- {@link CURVE_STEP}\n\nDefaults to {@link CURVE_SMOOTHSTEP}.\n"
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17209,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.type"
					}
				},
				{
					"id": 606,
					"name": "length",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17228,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 607,
							"name": "length",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the number of keys in the curve."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.length"
					}
				},
				{
					"id": 608,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17236,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 609,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Add a new key to the curve.",
								"returns": "[time, value] pair.\n"
							},
							"parameters": [
								{
									"id": 610,
									"name": "time",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Time to add new key."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 611,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Value of new key."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.add"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.add"
					}
				},
				{
					"id": 623,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17261,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 624,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a clone of the specified curve object.",
								"returns": "A clone of the specified curve.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Curve",
								"package": "playcanvas",
								"name": "Curve"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.clone"
					}
				},
				{
					"id": 620,
					"name": "closest",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17255,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 621,
							"name": "closest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 622,
									"name": "time",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.closest"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.closest"
					}
				},
				{
					"id": 612,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17243,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 613,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Return a specific key.",
								"returns": "The key at the specified index.\n"
							},
							"parameters": [
								{
									"id": 614,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The index of the key to return."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.get"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.get"
					}
				},
				{
					"id": 600,
					"name": "getNormal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/curve.ts",
							"line": 31,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 601,
							"name": "getNormal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 602,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Curve.getNormal"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.Curve.getNormal"
					}
				},
				{
					"id": 597,
					"name": "getTangent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/curve.ts",
							"line": 22,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 598,
							"name": "getTangent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 599,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Curve.getTangent"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.Curve.getTangent"
					}
				},
				{
					"id": 615,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17247,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 616,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sort keys by time."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.sort"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.sort"
					}
				},
				{
					"id": 617,
					"name": "value",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 17254,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 618,
							"name": "value",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the interpolated value of the curve at specified time.",
								"returns": "The interpolated value.\n"
							},
							"parameters": [
								{
									"id": 619,
									"name": "time",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The time at which to calculate the value."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Curve.value"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Curve.value"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						594
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						603,
						605,
						604
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						606
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						608,
						623,
						620,
						612,
						600,
						597,
						615,
						617
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/extendClasses/curve.ts",
					"line": 19,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Curve",
					"package": "playcanvas",
					"name": "Curve"
				}
			]
		},
		{
			"id": 1065,
			"name": "DebugLine",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "newUtil",
					"type": {
						"type": "reference",
						"id": 199,
						"name": "newUtil"
					}
				}
			],
			"children": [
				{
					"id": 1073,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 1074,
							"name": "new DebugLine",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1065,
								"name": "DebugLine"
							}
						}
					]
				},
				{
					"id": 1071,
					"name": "clearLines",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newUtils/debugLine.ts",
							"line": 30,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1072,
							"name": "clearLines",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1066,
					"name": "drawLine",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newUtils/debugLine.ts",
							"line": 19,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1067,
							"name": "drawLine",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1068,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1069,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec3",
										"package": "playcanvas",
										"name": "Vec3"
									}
								},
								{
									"id": 1070,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Color",
										"package": "playcanvas",
										"name": "Color"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1073
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1071,
						1066
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/newUtils/debugLine.ts",
					"line": 17,
					"character": 13
				}
			]
		},
		{
			"id": 633,
			"name": "Entity_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extendClass",
					"type": {
						"type": "reference",
						"id": 184,
						"name": "extendClass"
					},
					"arguments": {
						"extendClassName": "\"Entity\""
					}
				}
			],
			"children": [
				{
					"id": 634,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 635,
							"name": "new Entity_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Entity.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar entity = new pc.Entity();\n\n// Add a Component to the Entity\nentity.addComponent(\"camera\", {\n    fov: 45,\n    nearClip: 1,\n    farClip: 10000\n});\n\n// Add the Entity into the scene graph\napp.root.addChild(entity);\n\n// Move the entity\nentity.translate(10, 0, 0);\n\n// Or translate it by setting its position directly\nvar p = entity.getPosition();\nentity.setPosition(p.x + 10, p.y, p.z);\n\n// Change the entity's rotation in local space\nvar e = entity.getLocalEulerAngles();\nentity.setLocalEulerAngles(e.x, e.y + 90, e.z);\n\n// Or use rotateLocal\nentity.rotateLocal(0, 90, 0);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 636,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 637,
									"name": "app",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Application",
										"package": "playcanvas",
										"name": "Application"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 633,
								"name": "Entity_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.constructor"
					}
				},
				{
					"id": 642,
					"name": "_changeFlag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"decorators": [
						{
							"name": "prpt",
							"type": {
								"type": "reference",
								"id": 190,
								"name": "prpt"
							},
							"arguments": {
								"data": "{ default: false }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 61,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 640,
					"name": "_ignoreMeshes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"decorators": [
						{
							"name": "prpt",
							"type": {
								"type": "reference",
								"id": 190,
								"name": "prpt"
							},
							"arguments": {
								"data": "{ default: [] }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 55,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 639,
					"name": "_meshesToRaycast",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"decorators": [
						{
							"name": "prpt",
							"type": {
								"type": "reference",
								"id": 190,
								"name": "prpt"
							},
							"arguments": {
								"data": "{ default: [] }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 52,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "MeshInstance",
							"package": "playcanvas",
							"name": "MeshInstance"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 641,
					"name": "_resultNodeDepth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"decorators": [
						{
							"name": "prpt",
							"type": {
								"type": "reference",
								"id": 190,
								"name": "prpt"
							},
							"arguments": {}
						}
					],
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 58,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 638,
					"name": "_useInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"decorators": [
						{
							"name": "prpt",
							"type": {
								"type": "reference",
								"id": 190,
								"name": "prpt"
							},
							"arguments": {
								"data": "{ default: false }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 49,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 664,
					"name": "anim",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link AnimComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21093,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AnimComponent",
						"package": "playcanvas",
						"name": "AnimComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.anim"
					}
				},
				{
					"id": 665,
					"name": "animation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link AnimationComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21100,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AnimationComponent",
						"package": "playcanvas",
						"name": "AnimationComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.animation"
					}
				},
				{
					"id": 666,
					"name": "audiolistener",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link AudioListenerComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21107,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "AudioListenerComponent",
						"package": "playcanvas",
						"name": "AudioListenerComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.audiolistener"
					}
				},
				{
					"id": 667,
					"name": "button",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ButtonComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21114,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ButtonComponent",
						"package": "playcanvas",
						"name": "ButtonComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.button"
					}
				},
				{
					"id": 668,
					"name": "camera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link CameraComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21121,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "CameraComponent",
						"package": "playcanvas",
						"name": "CameraComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.camera"
					}
				},
				{
					"id": 669,
					"name": "collision",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link CollisionComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21128,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "CollisionComponent",
						"package": "playcanvas",
						"name": "CollisionComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.collision"
					}
				},
				{
					"id": 670,
					"name": "element",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ElementComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21135,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ElementComponent",
						"package": "playcanvas",
						"name": "ElementComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.element"
					}
				},
				{
					"id": 671,
					"name": "layoutchild",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link LayoutChildComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21142,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "LayoutChildComponent",
						"package": "playcanvas",
						"name": "LayoutChildComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.layoutchild"
					}
				},
				{
					"id": 672,
					"name": "layoutgroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link LayoutGroupComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21149,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "LayoutGroupComponent",
						"package": "playcanvas",
						"name": "LayoutGroupComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.layoutgroup"
					}
				},
				{
					"id": 673,
					"name": "light",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link LightComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21156,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "LightComponent",
						"package": "playcanvas",
						"name": "LightComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.light"
					}
				},
				{
					"id": 674,
					"name": "model",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ModelComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21163,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ModelComponent",
						"package": "playcanvas",
						"name": "ModelComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.model"
					}
				},
				{
					"id": 713,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The non-unique name of a graph node. Defaults to 'Untitled'."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7244,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.name"
					}
				},
				{
					"id": 675,
					"name": "particlesystem",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ParticleSystemComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21170,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ParticleSystemComponent",
						"package": "playcanvas",
						"name": "ParticleSystemComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.particlesystem"
					}
				},
				{
					"id": 676,
					"name": "render",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link RenderComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21177,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "RenderComponent",
						"package": "playcanvas",
						"name": "RenderComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.render"
					}
				},
				{
					"id": 677,
					"name": "rigidbody",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link RigidBodyComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21184,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "RigidBodyComponent",
						"package": "playcanvas",
						"name": "RigidBodyComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.rigidbody"
					}
				},
				{
					"id": 678,
					"name": "screen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ScreenComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21191,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ScreenComponent",
						"package": "playcanvas",
						"name": "ScreenComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.screen"
					}
				},
				{
					"id": 679,
					"name": "script",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ScriptComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21198,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ScriptComponent",
						"package": "playcanvas",
						"name": "ScriptComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.script"
					}
				},
				{
					"id": 680,
					"name": "scrollbar",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ScrollbarComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21205,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ScrollbarComponent",
						"package": "playcanvas",
						"name": "ScrollbarComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.scrollbar"
					}
				},
				{
					"id": 681,
					"name": "scrollview",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link ScrollViewComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21212,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ScrollViewComponent",
						"package": "playcanvas",
						"name": "ScrollViewComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.scrollview"
					}
				},
				{
					"id": 682,
					"name": "sound",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link SoundComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21219,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "SoundComponent",
						"package": "playcanvas",
						"name": "SoundComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.sound"
					}
				},
				{
					"id": 683,
					"name": "sprite",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "Gets the {@link SpriteComponent} attached to this entity.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21226,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "SpriteComponent",
						"package": "playcanvas",
						"name": "SpriteComponent"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.sprite"
					}
				},
				{
					"id": 714,
					"name": "tags",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Interface for tagging graph nodes. Tag based searches can be performed using the\n{@link GraphNode#findByTag} function."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7251,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Tags",
						"package": "playcanvas",
						"name": "Tags"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.tags"
					}
				},
				{
					"id": 657,
					"name": "changeFlag",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 118,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 658,
							"name": "changeFlag",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Entity.changeFlag"
							}
						}
					],
					"setSignature": [
						{
							"id": 659,
							"name": "changeFlag",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 660,
									"name": "flag",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Entity.changeFlag"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.Entity.changeFlag"
					}
				},
				{
					"id": 732,
					"name": "children",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7439,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 733,
							"name": "children",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A read-only property to get the children of this graph node."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "GraphNode",
									"package": "playcanvas",
									"name": "GraphNode"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.children"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.children"
					}
				},
				{
					"id": 722,
					"name": "enabled",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7414,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 723,
							"name": "enabled",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Enable or disable a GraphNode. If one of the GraphNode's parents is disabled there will be\nno other side effects. If all the parents are enabled then the new value will activate or\ndeactivate all the enabled children of the GraphNode."
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.enabled"
							}
						}
					],
					"setSignature": [
						{
							"id": 724,
							"name": "enabled",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Enable or disable a GraphNode. If one of the GraphNode's parents is disabled there will be\nno other side effects. If all the parents are enabled then the new value will activate or\ndeactivate all the enabled children of the GraphNode."
							},
							"parameters": [
								{
									"id": 725,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.enabled"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.enabled"
					}
				},
				{
					"id": 720,
					"name": "forward",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7406,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 721,
							"name": "forward",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The normalized local space negative Z-axis vector of the graph node in world space."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.forward"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.forward"
					}
				},
				{
					"id": 734,
					"name": "graphDepth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7447,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 735,
							"name": "graphDepth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A read-only property to get the depth of this child within the graph. Note that for\nperformance reasons this is only recalculated when a node is added to a new parent, i.e. It\nis not recalculated when a node is simply removed from the graph."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.graphDepth"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.graphDepth"
					}
				},
				{
					"id": 649,
					"name": "ignoreMeshes",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 91,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 650,
							"name": "ignoreMeshes",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Entity.ignoreMeshes"
							}
						}
					],
					"setSignature": [
						{
							"id": 651,
							"name": "ignoreMeshes",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 652,
									"name": "ignoreNames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Entity.ignoreMeshes"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.Entity.ignoreMeshes"
					}
				},
				{
					"id": 647,
					"name": "meshesToRaycast",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 79,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 648,
							"name": "meshesToRaycast",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "MeshInstance",
									"package": "playcanvas",
									"name": "MeshInstance"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Entity.meshesToRaycast"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.Entity.meshesToRaycast"
					}
				},
				{
					"id": 726,
					"name": "parent",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7421,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 727,
							"name": "parent",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A read-only property to get a parent graph node."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.parent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.parent"
					}
				},
				{
					"id": 728,
					"name": "path",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7427,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 729,
							"name": "path",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A read-only property to get the path of the graph node relative to the root of the hierarchy."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.path"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.path"
					}
				},
				{
					"id": 653,
					"name": "resultNodeDepth",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 108,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 654,
							"name": "resultNodeDepth",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Entity.resultNodeDepth"
							}
						}
					],
					"setSignature": [
						{
							"id": 655,
							"name": "resultNodeDepth",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 656,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Entity.resultNodeDepth"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.Entity.resultNodeDepth"
					}
				},
				{
					"id": 716,
					"name": "right",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7394,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 717,
							"name": "right",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The normalized local space X-axis vector of the graph node in world space."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.right"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.right"
					}
				},
				{
					"id": 730,
					"name": "root",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7433,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 731,
							"name": "root",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A read-only property to get highest graph node from current node."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.root"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.root"
					}
				},
				{
					"id": 718,
					"name": "up",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7400,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 719,
							"name": "up",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "The normalized local space Y-axis vector of the graph node in world space."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.up"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.up"
					}
				},
				{
					"id": 643,
					"name": "useInput",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 64,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 644,
							"name": "useInput",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Entity.useInput"
							}
						}
					],
					"setSignature": [
						{
							"id": 645,
							"name": "useInput",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 646,
									"name": "use",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Entity.useInput"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.Entity.useInput"
					}
				},
				{
					"id": 842,
					"name": "_sync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7934,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 843,
							"name": "_sync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity._sync"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity._sync"
					}
				},
				{
					"id": 829,
					"name": "addChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7874,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 830,
							"name": "addChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Add a new child to the child list and update the parent value of the child node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar e = new pc.Entity(app);\nthis.entity.addChild(e);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 831,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The new child to add."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.addChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.addChild"
					}
				},
				{
					"id": 690,
					"name": "addComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21304,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 691,
							"name": "addComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Create a new component and add it to the entity. Use this to add functionality to the entity\nlike rendering a model, playing sounds and so on.",
								"returns": "The new Component that was attached to the entity or null if there\nwas an error.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar entity = new pc.Entity();\n\n// Add a light component with default properties\nentity.addComponent(\"light\");\n\n// Add a camera component with some specified properties\nentity.addComponent(\"camera\", {\n    fov: 45,\n    clearColor: new pc.Color(1, 0, 0)\n});\n"
									}
								]
							},
							"parameters": [
								{
									"id": 692,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the component to add. Valid strings are:\n\n- \"anim\" - see {@link AnimComponent}\n- \"animation\" - see {@link AnimationComponent}\n- \"audiolistener\" - see {@link AudioListenerComponent}\n- \"button\" - see {@link ButtonComponent}\n- \"camera\" - see {@link CameraComponent}\n- \"collision\" - see {@link CollisionComponent}\n- \"element\" - see {@link ElementComponent}\n- \"layoutchild\" - see {@link LayoutChildComponent}\n- \"layoutgroup\" - see {@link LayoutGroupComponent}\n- \"light\" - see {@link LightComponent}\n- \"model\" - see {@link ModelComponent}\n- \"particlesystem\" - see {@link ParticleSystemComponent}\n- \"render\" - see {@link RenderComponent}\n- \"rigidbody\" - see {@link RigidBodyComponent}\n- \"screen\" - see {@link ScreenComponent}\n- \"script\" - see {@link ScriptComponent}\n- \"scrollbar\" - see {@link ScrollbarComponent}\n- \"scrollview\" - see {@link ScrollViewComponent}\n- \"sound\" - see {@link SoundComponent}\n- \"sprite\" - see {@link SpriteComponent}\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 693,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Component",
								"package": "playcanvas",
								"name": "Component"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.addComponent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.addComponent"
					}
				},
				{
					"id": 736,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7471,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 737,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Clone a graph node.",
								"returns": "A clone of the specified graph node.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.clone"
					}
				},
				{
					"id": 711,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21370,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 712,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Remove all components from the Entity and detach it from the Entity hierarchy. Then\nrecursively destroy all ancestor Entities.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar firstChild = this.entity.children[0];\nfirstChild.destroy(); // delete child, all components and remove from hierarchy\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.destroy"
					}
				},
				{
					"id": 741,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7503,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 742,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Search the graph node and all of its descendants for the nodes that satisfy some search\ncriteria.",
								"returns": "The array of graph nodes that match the search criteria.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Finds all nodes that have a model component and have `door` in their lower-cased name\nvar doors = house.find(function (node) {\n    return node.model && node.name.toLowerCase().indexOf('door') !== -1;\n});"
									},
									{
										"tag": "example",
										"text": "\n// Finds all nodes that have the name property set to 'Test'\nvar entities = parent.find('name', 'Test');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 743,
									"name": "attr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "This can either be a function or a string. If it's a\nfunction, it is executed for each descendant node to test if node satisfies the search\nlogic. Returning true from the function will include the node into the results. If it's a\nstring then it represents the name of a field or a method of the node. If this is the name\nof a field then the value passed as the second argument will be checked for equality. If\nthis is the name of a function then the return value of the function will be checked for\nequality against the valued passed as the second argument to this function."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"qualifiedName": "FindNodeCallback",
												"package": "playcanvas",
												"name": "FindNodeCallback"
											}
										]
									}
								},
								{
									"id": 744,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "GraphNode",
									"package": "playcanvas",
									"name": "GraphNode"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.find"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.find"
					}
				},
				{
					"id": 708,
					"name": "findByGuid",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21361,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 709,
							"name": "findByGuid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Find a descendant of this entity with the GUID.",
								"returns": "The entity with the matching GUID or null if no entity is found.\n"
							},
							"parameters": [
								{
									"id": 710,
									"name": "guid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The GUID to search for."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Entity",
								"package": "playcanvas",
								"name": "Entity"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByGuid"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByGuid"
					}
				},
				{
					"id": 752,
					"name": "findByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7558,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 753,
							"name": "findByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the first node found in the graph with the name. The search is depth first.",
								"returns": "The first node to be found matching the supplied name. Returns\nnull if no node is found.\n"
							},
							"parameters": [
								{
									"id": 754,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the graph."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByName"
					}
				},
				{
					"id": 755,
					"name": "findByPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7574,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 756,
							"name": "findByPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the first node found in the graph by its full path in the graph. The full path has this\nform 'parent/child/sub-child'. The search is depth first.",
								"returns": "The first node to be found matching the supplied path. Returns\nnull if no node is found.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// String form\nvar grandchild = this.entity.findByPath('child/grandchild');"
									},
									{
										"tag": "example",
										"text": "\n// Array form\nvar grandchild = this.entity.findByPath(['child', 'grandchild']);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 757,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The full path of the {@link GraphNode} as either a string or\narray of {@link GraphNode} names."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByPath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByPath"
					}
				},
				{
					"id": 749,
					"name": "findByTag",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7550,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 750,
							"name": "findByTag",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Return all graph nodes that satisfy the search query. Query can be simply a string, or comma\nseparated strings, to have inclusive results of assets that match at least one query. A\nquery that consists of an array of tags can be used to match graph nodes that have each tag\nof array.",
								"returns": "A list of all graph nodes that match the query.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Return all graph nodes that tagged by `animal`\nvar animals = node.findByTag(\"animal\");"
									},
									{
										"tag": "example",
										"text": "\n// Return all graph nodes that tagged by `bird` OR `mammal`\nvar birdsAndMammals = node.findByTag(\"bird\", \"mammal\");"
									},
									{
										"tag": "example",
										"text": "\n// Return all assets that tagged by `carnivore` AND `mammal`\nvar meatEatingMammals = node.findByTag([\"carnivore\", \"mammal\"]);"
									},
									{
										"tag": "example",
										"text": "\n// Return all assets that tagged by (`carnivore` AND `mammal`) OR (`carnivore` AND `reptile`)\nvar meatEatingMammalsAndReptiles = node.findByTag([\"carnivore\", \"mammal\"], [\"carnivore\", \"reptile\"]);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 751,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "GraphNode",
									"package": "playcanvas",
									"name": "GraphNode"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findByTag"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findByTag"
					}
				},
				{
					"id": 697,
					"name": "findComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21326,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 698,
							"name": "findComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Search the entity and all of its descendants for the first component of specified type.",
								"returns": "A component of specified type, if the entity or any of its descendants\nhas one. Returns undefined otherwise.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Get the first found light component in the hierarchy tree that starts with this entity\nvar light = entity.findComponent(\"light\");\n"
									}
								]
							},
							"parameters": [
								{
									"id": 699,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the component type to retrieve."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Component",
								"package": "playcanvas",
								"name": "Component"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findComponent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findComponent"
					}
				},
				{
					"id": 700,
					"name": "findComponents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21337,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 701,
							"name": "findComponents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Search the entity and all of its descendants for all components of specified type.",
								"returns": "All components of specified type in the entity or any of its\ndescendants. Returns empty array if none found.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Get all light components in the hierarchy tree that starts with this entity\nvar lights = entity.findComponents(\"light\");\n"
									}
								]
							},
							"parameters": [
								{
									"id": 702,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the component type to retrieve."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Component",
									"package": "playcanvas",
									"name": "Component"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findComponents"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findComponents"
					}
				},
				{
					"id": 745,
					"name": "findOne",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7528,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 746,
							"name": "findOne",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Search the graph node and all of its descendants for the first node that satisfies some\nsearch criteria.",
								"returns": "A graph node that match the search criteria. Returns null if no\nnode is found.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Find the first node that is called `head` and has a model component\nvar head = player.findOne(function (node) {\n    return node.model && node.name === 'head';\n});"
									},
									{
										"tag": "example",
										"text": "\n// Finds the first node that has the name property set to 'Test'\nvar node = parent.findOne('name', 'Test');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 747,
									"name": "attr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "This can either be a function or a string. If it's a\nfunction, it is executed for each descendant node to test if node satisfies the search\nlogic. Returning true from the function will result in that node being returned from\nfindOne. If it's a string then it represents the name of a field or a method of the node. If\nthis is the name of a field then the value passed as the second argument will be checked for\nequality. If this is the name of a function then the return value of the function will be\nchecked for equality against the valued passed as the second argument to this function."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"qualifiedName": "FindNodeCallback",
												"package": "playcanvas",
												"name": "FindNodeCallback"
											}
										]
									}
								},
								{
									"id": 748,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.findOne"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.findOne"
					}
				},
				{
					"id": 884,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 885,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Fire an event, all additional arguments are passed on to the event listener.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.fire('test', 'This is the message');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 886,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of event to fire."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 887,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 888,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 889,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 890,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 891,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 892,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 893,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 894,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.fire"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.fire"
					}
				},
				{
					"id": 758,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7587,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 759,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Executes a provided function once on this graph node and all of its descendants.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Log the path and name of each node in descendant tree starting with \"parent\"\nparent.forEach(function (node) {\n    console.log(node.path + \"/\" + node.name);\n});\n"
									}
								]
							},
							"parameters": [
								{
									"id": 760,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The function to execute on the graph node and each\ndescendant."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "ForEachNodeCallback",
										"package": "playcanvas",
										"name": "ForEachNodeCallback"
									}
								},
								{
									"id": 761,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.forEach"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.forEach"
					}
				},
				{
					"id": 768,
					"name": "getEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7622,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 769,
							"name": "getEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the world space rotation for the specified GraphNode in Euler angle form. The rotation\nis returned as euler angles in a {@link Vec3}. The value returned by this function should be\nconsidered read-only. In order to set the world-space rotation of the graph node, use\n{@link GraphNode#setEulerAngles}.",
								"returns": "The world space rotation of the graph node in Euler angle form.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar angles = this.entity.getEulerAngles();\nangles.y = 180; // rotate the entity around Y by 180 degrees\nthis.entity.setEulerAngles(angles);\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getEulerAngles"
					}
				},
				{
					"id": 770,
					"name": "getLocalEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7634,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 771,
							"name": "getLocalEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the rotation in local space for the specified GraphNode. The rotation is returned as\neuler angles in a {@link Vec3}. The returned vector should be considered read-only. To\nupdate the local rotation, use {@link GraphNode#setLocalEulerAngles}.",
								"returns": "The local space rotation of the graph node as euler angles in XYZ order.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar angles = this.entity.getLocalEulerAngles();\nangles.y = 180;\nthis.entity.setLocalEulerAngles(angles);\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalEulerAngles"
					}
				},
				{
					"id": 772,
					"name": "getLocalPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7646,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 773,
							"name": "getLocalPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the position in local space for the specified GraphNode. The position is returned as a\n{@link Vec3}. The returned vector should be considered read-only. To update the local\nposition, use {@link GraphNode#setLocalPosition}.",
								"returns": "The local space position of the graph node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar position = this.entity.getLocalPosition();\nposition.x += 1; // move the entity 1 unit along x.\nthis.entity.setLocalPosition(position);\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalPosition"
					}
				},
				{
					"id": 774,
					"name": "getLocalRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7656,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 775,
							"name": "getLocalRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the rotation in local space for the specified GraphNode. The rotation is returned as a\n{@link Quat}. The returned quaternion should be considered read-only. To update the local\nrotation, use {@link GraphNode#setLocalRotation}.",
								"returns": "The local space rotation of the graph node as a quaternion.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar rotation = this.entity.getLocalRotation();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalRotation"
					}
				},
				{
					"id": 776,
					"name": "getLocalScale",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7668,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 777,
							"name": "getLocalScale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the scale in local space for the specified GraphNode. The scale is returned as a\n{@link Vec3}. The returned vector should be considered read-only. To update the local scale,\nuse {@link GraphNode#setLocalScale}.",
								"returns": "The local space scale of the graph node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar scale = this.entity.getLocalScale();\nscale.x = 100;\nthis.entity.setLocalScale(scale);\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalScale"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalScale"
					}
				},
				{
					"id": 778,
					"name": "getLocalTransform",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7677,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 779,
							"name": "getLocalTransform",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the local transform matrix for this graph node. This matrix is the transform relative to\nthe node's parent's world transformation matrix.",
								"returns": "The node's local transformation matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar transform = this.entity.getLocalTransform();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Mat4",
								"package": "playcanvas",
								"name": "Mat4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getLocalTransform"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getLocalTransform"
					}
				},
				{
					"id": 780,
					"name": "getPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7689,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 781,
							"name": "getPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the world space position for the specified GraphNode. The position is returned as a\n{@link Vec3}. The value returned by this function should be considered read-only. In order\nto set the world-space position of the graph node, use {@link GraphNode#setPosition}.",
								"returns": "The world space position of the graph node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar position = this.entity.getPosition();\nposition.x = 10;\nthis.entity.setPosition(position);\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getPosition"
					}
				},
				{
					"id": 782,
					"name": "getRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7699,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 783,
							"name": "getRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the world space rotation for the specified GraphNode. The rotation is returned as a\n{@link Quat}. The value returned by this function should be considered read-only. In order\nto set the world-space rotation of the graph node, use {@link GraphNode#setRotation}.",
								"returns": "The world space rotation of the graph node as a quaternion.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar rotation = this.entity.getRotation();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getRotation"
					}
				},
				{
					"id": 786,
					"name": "getWorldTransform",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7721,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 787,
							"name": "getWorldTransform",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Get the world transformation matrix for this graph node.",
								"returns": "The node's world transformation matrix.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar transform = this.entity.getWorldTransform();\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Mat4",
								"package": "playcanvas",
								"name": "Mat4"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.getWorldTransform"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.getWorldTransform"
					}
				},
				{
					"id": 900,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 130,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 901,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Test if there are any handlers bound to an event name.",
								"returns": "True if the object has handlers bound to the specified event name.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.on('test', function () { }); // bind an event to 'test'\nobj.hasEvent('test'); // returns true\nobj.hasEvent('hello'); // returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 902,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the event to test."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.hasEvent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.hasEvent"
					}
				},
				{
					"id": 835,
					"name": "insertChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7896,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 836,
							"name": "insertChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Insert a new child to the child list at the specified index and update the parent value of\nthe child node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar e = new pc.Entity(app);\nthis.entity.insertChild(e, 1);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 837,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The new child to insert."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								},
								{
									"id": 838,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The index in the child list of the parent where the new node will be\ninserted."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.insertChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.insertChild"
					}
				},
				{
					"id": 765,
					"name": "isAncestorOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7609,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 766,
							"name": "isAncestorOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Check if node is ancestor for another node.",
								"returns": "If node is ancestor for another node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nif (body.isAncestorOf(foot)) {\n    // foot is within body's hierarchy\n}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 767,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Potential descendant of node."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.isAncestorOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.isAncestorOf"
					}
				},
				{
					"id": 762,
					"name": "isDescendantOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7598,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 763,
							"name": "isDescendantOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Check if node is descendant of another node.",
								"returns": "If node is descendant of another node.",
								"tags": [
									{
										"tag": "example",
										"text": "\nif (roof.isDescendantOf(house)) {\n    // roof is descendant of house entity\n}\n"
									}
								]
							},
							"parameters": [
								{
									"id": 764,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Potential ancestor of node."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.isDescendantOf"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.isDescendantOf"
					}
				},
				{
					"id": 846,
					"name": "lookAt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7969,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 847,
							"name": "lookAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Reorients the graph node so that the negative z-axis points towards the target. This\nfunction has two valid signatures. Either pass 3D vectors for the look at coordinate and up\nvector, or pass numbers to represent the vectors.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Look at another entity, using the (default) positive y-axis for up\nvar position = otherEntity.getPosition();\nthis.entity.lookAt(position);"
									},
									{
										"tag": "example",
										"text": "\n// Look at another entity, using the negative world y-axis for up\nvar position = otherEntity.getPosition();\nthis.entity.lookAt(position, pc.Vec3.DOWN);"
									},
									{
										"tag": "example",
										"text": "\n// Look at the world space origin, using the (default) positive y-axis for up\nthis.entity.lookAt(0, 0, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Look at world-space coordinate [10, 10, 10], using the negative world y-axis for up\nthis.entity.lookAt(10, 10, 10, 0, -1, 0);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 848,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "If passing a 3D vector, this is the world-space coordinate to look at.\nOtherwise, it is the x-component of the world-space coordinate to look at."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 849,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 850,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 851,
									"name": "ux",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 852,
									"name": "uy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 853,
									"name": "uz",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.lookAt"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.lookAt"
					}
				},
				{
					"id": 879,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 880,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Detach an event handler from an event. If callback is not provided then all callbacks are\nunbound from the event, if scope is not provided then all events with the callback will be\nunbound.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar handler = function () {\n};\nobj.on('test', handler);\n\nobj.off(); // Removes all events\nobj.off('test'); // Removes all events called 'test'\nobj.off('test', handler); // Removes all handler functions, called 'test'\nobj.off('test', handler, this); // Removes all handler functions, called 'test' with scope this\n"
									}
								]
							},
							"parameters": [
								{
									"id": 881,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 882,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 883,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.off"
					}
				},
				{
					"id": 874,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 875,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attach an event handler to an event.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.on('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\n"
									}
								]
							},
							"parameters": [
								{
									"id": 876,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 877,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 878,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.on"
					}
				},
				{
					"id": 895,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 119,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 896,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Attach an event handler to an event. This handler will be removed after being fired once.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nobj.once('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\nobj.fire('test', 1, 2); // not going to get handled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 897,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 898,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Function that is called when event is fired. Note\nthe callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 899,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.once"
					}
				},
				{
					"id": 839,
					"name": "removeChild",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7933,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 840,
							"name": "removeChild",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Remove the node from the child list and update the parent value of the child.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar child = this.entity.children[0];\nthis.entity.removeChild(child);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 841,
									"name": "child",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The node to remove."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.removeChild"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.removeChild"
					}
				},
				{
					"id": 694,
					"name": "removeComponent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 21315,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 695,
							"name": "removeComponent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Remove a component from the Entity.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar entity = new pc.Entity();\nentity.addComponent(\"light\"); // add new light component\n\nentity.removeComponent(\"light\"); // remove light component\n"
									}
								]
							},
							"parameters": [
								{
									"id": 696,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the Component type."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.removeComponent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.removeComponent"
					}
				},
				{
					"id": 788,
					"name": "reparent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7728,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 789,
							"name": "reparent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Remove graph node from current parent and add as child to new parent."
							},
							"parameters": [
								{
									"id": 790,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "New parent to attach graph node to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								},
								{
									"id": 791,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.reparent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.reparent"
					}
				},
				{
					"id": 661,
					"name": "reparentAndKeepTransform",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/entity.ts",
							"line": 131,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 662,
							"name": "reparentAndKeepTransform",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "description:",
										"text": "改变父节点并保持物体的transform"
									}
								]
							},
							"parameters": [
								{
									"id": 663,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "父节点\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Entity",
										"package": "playcanvas",
										"name": "Entity"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Entity.reparentAndKeepTransform"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.Entity.reparentAndKeepTransform"
					}
				},
				{
					"id": 864,
					"name": "rotate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8023,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 865,
							"name": "rotate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Rotates the graph node in world-space by the specified Euler angles. Eulers are specified in\ndegrees in XYZ order. This function has two valid signatures: you can either pass a 3D\nvector or 3 numbers to specify the world-space rotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Rotate via 3 numbers\nthis.entity.rotate(0, 90, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Rotate via vector\nvar r = new pc.Vec3(0, 90, 0);\nthis.entity.rotate(r);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 866,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding world-space rotation or\nrotation around world-space x-axis in degrees."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 867,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 868,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.rotate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.rotate"
					}
				},
				{
					"id": 869,
					"name": "rotateLocal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8041,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 870,
							"name": "rotateLocal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Rotates the graph node in local-space by the specified Euler angles. Eulers are specified in\ndegrees in XYZ order. This function has two valid signatures: you can either pass a 3D\nvector or 3 numbers to specify the local-space rotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Rotate via 3 numbers\nthis.entity.rotateLocal(0, 90, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Rotate via vector\nvar r = new pc.Vec3(0, 90, 0);\nthis.entity.rotateLocal(r);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 871,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding local-space rotation or\nrotation around local-space x-axis in degrees."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 872,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 873,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.rotateLocal"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.rotateLocal"
					}
				},
				{
					"id": 824,
					"name": "setEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7865,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 825,
							"name": "setEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the world-space rotation of the specified graph node using euler angles. Eulers are\ninterpreted in XYZ order. Eulers must be specified in degrees. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the world-space euler\nrotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set rotation of 90 degrees around world-space y-axis via 3 numbers\nthis.entity.setEulerAngles(0, 90, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Set rotation of 90 degrees around world-space y-axis via a vector\nvar angles = new pc.Vec3(0, 90, 0);\nthis.entity.setEulerAngles(angles);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 826,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding eulers or rotation around world-space\nx-axis in degrees."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 827,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 828,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setEulerAngles"
					}
				},
				{
					"id": 792,
					"name": "setLocalEulerAngles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7747,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 793,
							"name": "setLocalEulerAngles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the local-space rotation of the specified graph node using euler angles. Eulers are\ninterpreted in XYZ order. Eulers must be specified in degrees. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the local-space euler\nrotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set rotation of 90 degrees around y-axis via 3 numbers\nthis.entity.setLocalEulerAngles(0, 90, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Set rotation of 90 degrees around y-axis via a vector\nvar angles = new pc.Vec3(0, 90, 0);\nthis.entity.setLocalEulerAngles(angles);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 794,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding eulers or rotation around local-space\nx-axis in degrees."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 795,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 796,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalEulerAngles"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalEulerAngles"
					}
				},
				{
					"id": 797,
					"name": "setLocalPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7765,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 798,
							"name": "setLocalPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the local-space position of the specified graph node. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the local-space\nposition.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set via 3 numbers\nthis.entity.setLocalPosition(0, 10, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Set via vector\nvar pos = new pc.Vec3(0, 10, 0);\nthis.entity.setLocalPosition(pos);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 799,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding local-space position or\nx-coordinate of local-space position."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 800,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 801,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalPosition"
					}
				},
				{
					"id": 802,
					"name": "setLocalRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7784,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 803,
							"name": "setLocalRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the local-space rotation of the specified graph node. This function has two valid\nsignatures: you can either pass a quaternion or 3 numbers to specify the local-space\nrotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set via 4 numbers\nthis.entity.setLocalRotation(0, 0, 0, 1);"
									},
									{
										"tag": "example",
										"text": "\n// Set via quaternion\nvar q = pc.Quat();\nthis.entity.setLocalRotation(q);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 804,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Quaternion holding local-space rotation or x-component of\nlocal-space quaternion rotation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Quat",
												"package": "playcanvas",
												"name": "Quat"
											}
										]
									}
								},
								{
									"id": 805,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 806,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 807,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalRotation"
					}
				},
				{
					"id": 808,
					"name": "setLocalScale",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7801,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 809,
							"name": "setLocalScale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the local-space scale factor of the specified graph node. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the local-space scale.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set via 3 numbers\nthis.entity.setLocalScale(10, 10, 10);"
									},
									{
										"tag": "example",
										"text": "\n// Set via vector\nvar scale = new pc.Vec3(10, 10, 10);\nthis.entity.setLocalScale(scale);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 810,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding local-space scale or x-coordinate\nof local-space scale."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 811,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 812,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setLocalScale"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setLocalScale"
					}
				},
				{
					"id": 813,
					"name": "setPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7827,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 814,
							"name": "setPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the world-space position of the specified graph node. This function has two valid\nsignatures: you can either pass a 3D vector or 3 numbers to specify the world-space\nposition.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set via 3 numbers\nthis.entity.setPosition(0, 10, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Set via vector\nvar position = new pc.Vec3(0, 10, 0);\nthis.entity.setPosition(position);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 815,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding world-space position or\nx-coordinate of world-space position."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 816,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 817,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setPosition"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setPosition"
					}
				},
				{
					"id": 818,
					"name": "setRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7846,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 819,
							"name": "setRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the world-space rotation of the specified graph node. This function has two valid\nsignatures: you can either pass a quaternion or 3 numbers to specify the world-space\nrotation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Set via 4 numbers\nthis.entity.setRotation(0, 0, 0, 1);"
									},
									{
										"tag": "example",
										"text": "\n// Set via quaternion\nvar q = pc.Quat();\nthis.entity.setRotation(q);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 820,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Quaternion holding world-space rotation or x-component of\nworld-space quaternion rotation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Quat",
												"package": "playcanvas",
												"name": "Quat"
											}
										]
									}
								},
								{
									"id": 821,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 822,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 823,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.setRotation"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.setRotation"
					}
				},
				{
					"id": 854,
					"name": "translate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7987,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 855,
							"name": "translate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Translates the graph node in world-space by the specified translation vector. This function\nhas two valid signatures: you can either pass a 3D vector or 3 numbers to specify the\nworld-space translation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Translate via 3 numbers\nthis.entity.translate(10, 0, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Translate via vector\nvar t = new pc.Vec3(10, 0, 0);\nthis.entity.translate(t);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 856,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding world-space translation or\nx-coordinate of world-space translation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 857,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 858,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.translate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.translate"
					}
				},
				{
					"id": 859,
					"name": "translateLocal",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 8005,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 860,
							"name": "translateLocal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Translates the graph node in local-space by the specified translation vector. This function\nhas two valid signatures: you can either pass a 3D vector or 3 numbers to specify the\nlocal-space translation.",
								"tags": [
									{
										"tag": "example",
										"text": "\n// Translate via 3 numbers\nthis.entity.translateLocal(10, 0, 0);"
									},
									{
										"tag": "example",
										"text": "\n// Translate via vector\nvar t = new pc.Vec3(10, 0, 0);\nthis.entity.translateLocal(t);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 861,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "3-dimensional vector holding local-space translation or\nx-coordinate of local-space translation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"qualifiedName": "Vec3",
												"package": "playcanvas",
												"name": "Vec3"
											}
										]
									}
								},
								{
									"id": 862,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 863,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Entity.translateLocal"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Entity.translateLocal"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						634
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						642,
						640,
						639,
						641,
						638,
						664,
						665,
						666,
						667,
						668,
						669,
						670,
						671,
						672,
						673,
						674,
						713,
						675,
						676,
						677,
						678,
						679,
						680,
						681,
						682,
						683,
						714
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						657,
						732,
						722,
						720,
						734,
						649,
						647,
						726,
						728,
						653,
						716,
						730,
						718,
						643
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						842,
						829,
						690,
						736,
						711,
						741,
						708,
						752,
						755,
						749,
						697,
						700,
						745,
						884,
						758,
						768,
						770,
						772,
						774,
						776,
						778,
						780,
						782,
						786,
						900,
						835,
						765,
						762,
						846,
						879,
						874,
						895,
						839,
						694,
						788,
						661,
						864,
						869,
						824,
						792,
						797,
						802,
						808,
						813,
						818,
						854,
						859
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/extendClasses/entity.ts",
					"line": 45,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Entity",
					"package": "playcanvas",
					"name": "Entity"
				}
			]
		},
		{
			"id": 211,
			"name": "Filter",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 215,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 49,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "new Filter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 217,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 218,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 219,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 220,
														"name": "paraName",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 211,
								"name": "Filter"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.PostEffect.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.PostEffect.constructor"
					}
				},
				{
					"id": 221,
					"name": "args",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 32,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 222,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 223,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 224,
										"name": "paraName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				},
				{
					"id": 225,
					"name": "binbMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 33,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Map",
						"package": "typescript",
						"name": "Map"
					}
				},
				{
					"id": 272,
					"name": "depthMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7165,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.PostEffect.depthMap"
					}
				},
				{
					"id": 268,
					"name": "device",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The graphics device of the application."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7144,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "GraphicsDevice",
						"package": "playcanvas",
						"name": "GraphicsDevice"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.PostEffect.device"
					}
				},
				{
					"id": 271,
					"name": "needsDepthBuffer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The property that should to be set to `true` (by the custom post effect) if a depth map\nis necessary (default is false)."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7164,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.PostEffect.needsDepthBuffer"
					}
				},
				{
					"id": 227,
					"name": "passes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 36,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "IfilterPass"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 226,
					"name": "rtCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 34,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "RenderTarget",
							"package": "playcanvas",
							"name": "RenderTarget"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 269,
					"name": "shader",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The shader definition for the fullscreen quad. Needs to be set by the custom post effect\n(default is null). Used when calling {@link drawFullscreenQuad}."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7151,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Shader",
						"package": "playcanvas",
						"name": "Shader"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.PostEffect.shader"
					}
				},
				{
					"id": 228,
					"name": "shaders",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 37,
							"character": 12
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "Shader",
							"package": "playcanvas",
							"name": "Shader"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 270,
					"name": "vertexBuffer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The vertex buffer for the fullscreen quad. Used when calling {@link drawFullscreenQuad}."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7157,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "VertexBuffer",
						"package": "playcanvas",
						"name": "VertexBuffer"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.PostEffect.vertexBuffer"
					}
				},
				{
					"id": 258,
					"name": "addBinder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 190,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 259,
							"name": "addBinder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 260,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 261,
									"name": "binder",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IattributesBinder"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 229,
					"name": "addPasses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 75,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 230,
							"name": "addPasses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 231,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IfilterPass"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 240,
					"name": "cache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 130,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 241,
							"name": "cache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 242,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 243,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 244,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 245,
													"name": "scale",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/classes/utils/filter.ts",
															"line": 130,
															"character": 46
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														245
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ICacheOption"
							}
						}
					]
				},
				{
					"id": 246,
					"name": "createTargetCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 138,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 247,
							"name": "createTargetCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 248,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 249,
									"name": "scale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 250,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 251,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RenderTarget",
								"package": "playcanvas",
								"name": "RenderTarget"
							}
						}
					]
				},
				{
					"id": 252,
					"name": "getTargetCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 169,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 253,
							"name": "getTargetCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 254,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 255,
									"name": "scale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RenderTarget",
								"package": "playcanvas",
								"name": "RenderTarget"
							}
						}
					]
				},
				{
					"id": 262,
					"name": "instanceOfBinder",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 196,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 263,
							"name": "instanceOfBinder",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 264,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "object",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "IattributesBinder"
								}
							}
						}
					]
				},
				{
					"id": 265,
					"name": "instanceOfCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 201,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 266,
							"name": "instanceOfCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 267,
									"name": "object",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "object",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "ICacheOption"
								}
							}
						}
					]
				},
				{
					"id": 256,
					"name": "refreshTargets",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 174,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 257,
							"name": "refreshTargets",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 235,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 90,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 236,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 237,
									"name": "inputTarget",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas",
										"name": "RenderTarget"
									}
								},
								{
									"id": 238,
									"name": "outputTarget",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas",
										"name": "RenderTarget"
									}
								},
								{
									"id": 239,
									"name": "rect",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.PostEffect.render"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.PostEffect.render"
					}
				},
				{
					"id": 232,
					"name": "value",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 85,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 233,
							"name": "value",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 234,
									"name": "para",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 212,
					"name": "parseValueToShader",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 39,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 213,
							"name": "parseValueToShader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 214,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						215
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						221,
						225,
						272,
						268,
						271,
						227,
						226,
						269,
						228,
						270
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						258,
						229,
						240,
						246,
						252,
						262,
						265,
						256,
						235,
						232,
						212
					]
				}
			],
			"sources": [
				{
					"fileName": "src/classes/utils/filter.ts",
					"line": 30,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "PostEffect$1",
					"package": "playcanvas",
					"name": "PostEffect$1"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 1,
					"name": "Filter_Bloom"
				},
				{
					"type": "reference",
					"id": 58,
					"name": "Filter_Empty"
				}
			]
		},
		{
			"id": 1,
			"name": "Filter_Bloom",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 5,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/classes/filters/filter_bloom.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 6,
							"name": "new Filter_Bloom",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 7,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Ioption_Filter_Bloom"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "Filter_Bloom"
							},
							"overwrites": {
								"type": "reference",
								"id": 216,
								"name": "Filter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 215,
						"name": "Filter.constructor"
					}
				},
				{
					"id": 24,
					"name": "args",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 32,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 25,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 26,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 27,
										"name": "paraName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 221,
						"name": "Filter.args"
					}
				},
				{
					"id": 28,
					"name": "binbMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 33,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Map",
						"package": "typescript",
						"name": "Map"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 225,
						"name": "Filter.binbMap"
					}
				},
				{
					"id": 57,
					"name": "depthMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7165,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 272,
						"name": "Filter.depthMap"
					}
				},
				{
					"id": 53,
					"name": "device",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The graphics device of the application."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7144,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "GraphicsDevice",
						"package": "playcanvas",
						"name": "GraphicsDevice"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 268,
						"name": "Filter.device"
					}
				},
				{
					"id": 56,
					"name": "needsDepthBuffer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The property that should to be set to `true` (by the custom post effect) if a depth map\nis necessary (default is false)."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7164,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 271,
						"name": "Filter.needsDepthBuffer"
					}
				},
				{
					"id": 29,
					"name": "rtCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 34,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "RenderTarget",
							"package": "playcanvas",
							"name": "RenderTarget"
						}
					},
					"defaultValue": "[]",
					"inheritedFrom": {
						"type": "reference",
						"id": 226,
						"name": "Filter.rtCache"
					}
				},
				{
					"id": 8,
					"name": "sampleCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/filters/filter_bloom.ts",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "15"
				},
				{
					"id": 10,
					"name": "sampleOffsets",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/filters/filter_bloom.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Float32Array",
						"package": "typescript",
						"name": "Float32Array"
					},
					"defaultValue": "..."
				},
				{
					"id": 9,
					"name": "sampleWeights",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/filters/filter_bloom.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Float32Array",
						"package": "typescript",
						"name": "Float32Array"
					},
					"defaultValue": "..."
				},
				{
					"id": 54,
					"name": "shader",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The shader definition for the fullscreen quad. Needs to be set by the custom post effect\n(default is null). Used when calling {@link drawFullscreenQuad}."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7151,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Shader",
						"package": "playcanvas",
						"name": "Shader"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 269,
						"name": "Filter.shader"
					}
				},
				{
					"id": 55,
					"name": "vertexBuffer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The vertex buffer for the fullscreen quad. Used when calling {@link drawFullscreenQuad}."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7157,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "VertexBuffer",
						"package": "playcanvas",
						"name": "VertexBuffer"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 270,
						"name": "Filter.vertexBuffer"
					}
				},
				{
					"id": 30,
					"name": "addPasses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 75,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 31,
							"name": "addPasses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 32,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IfilterPass"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 230,
								"name": "Filter.addPasses"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 229,
						"name": "Filter.addPasses"
					}
				},
				{
					"id": 41,
					"name": "cache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 130,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 42,
							"name": "cache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 43,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 44,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 45,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 46,
													"name": "scale",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/classes/utils/filter.ts",
															"line": 130,
															"character": 46
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														46
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ICacheOption"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 241,
								"name": "Filter.cache"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "Filter.cache"
					}
				},
				{
					"id": 17,
					"name": "calculateBlurValues",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/filters/filter_bloom.ts",
							"line": 141,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 18,
							"name": "calculateBlurValues",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 19,
									"name": "sampleWeights",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Float32Array",
										"package": "typescript",
										"name": "Float32Array"
									}
								},
								{
									"id": 20,
									"name": "sampleOffsets",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Float32Array",
										"package": "typescript",
										"name": "Float32Array"
									}
								},
								{
									"id": 21,
									"name": "dx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 22,
									"name": "dy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 23,
									"name": "blurAmount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 13,
					"name": "computeGaussian",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/filters/filter_bloom.ts",
							"line": 136,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 14,
							"name": "computeGaussian",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 15,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 16,
									"name": "theta",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 47,
					"name": "createTargetCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 138,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 48,
							"name": "createTargetCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 49,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 50,
									"name": "scale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 51,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 52,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RenderTarget",
								"package": "playcanvas",
								"name": "RenderTarget"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 247,
								"name": "Filter.createTargetCache"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 246,
						"name": "Filter.createTargetCache"
					}
				},
				{
					"id": 11,
					"name": "initPasses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/filters/filter_bloom.ts",
							"line": 31,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 12,
							"name": "initPasses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IfilterPass"
								}
							}
						}
					]
				},
				{
					"id": 36,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 90,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 37,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 38,
									"name": "inputTarget",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas",
										"name": "RenderTarget"
									}
								},
								{
									"id": 39,
									"name": "outputTarget",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas",
										"name": "RenderTarget"
									}
								},
								{
									"id": 40,
									"name": "rect",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 236,
								"name": "Filter.render"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 235,
						"name": "Filter.render"
					}
				},
				{
					"id": 33,
					"name": "value",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 85,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "value",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 35,
									"name": "para",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 233,
								"name": "Filter.value"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "Filter.value"
					}
				},
				{
					"id": 2,
					"name": "parseValueToShader",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 39,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "parseValueToShader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 213,
								"name": "Filter.parseValueToShader"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 212,
						"name": "Filter.parseValueToShader"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						5
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						24,
						28,
						57,
						53,
						56,
						29,
						8,
						10,
						9,
						54,
						55
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						30,
						41,
						17,
						13,
						47,
						11,
						36,
						33,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/classes/filters/filter_bloom.ts",
					"line": 10,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 211,
					"name": "Filter"
				}
			]
		},
		{
			"id": 58,
			"name": "Filter_Empty",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 62,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/classes/filters/filter_empty.ts",
							"line": 10,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 63,
							"name": "new Filter_Empty",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 64,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Ioption_Filter_Empty"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 58,
								"name": "Filter_Empty"
							},
							"overwrites": {
								"type": "reference",
								"id": 216,
								"name": "Filter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 215,
						"name": "Filter.constructor"
					}
				},
				{
					"id": 65,
					"name": "args",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 32,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 66,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 67,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 68,
										"name": "paraName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 221,
						"name": "Filter.args"
					}
				},
				{
					"id": 69,
					"name": "binbMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 33,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Map",
						"package": "typescript",
						"name": "Map"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 225,
						"name": "Filter.binbMap"
					}
				},
				{
					"id": 98,
					"name": "depthMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7165,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 272,
						"name": "Filter.depthMap"
					}
				},
				{
					"id": 94,
					"name": "device",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The graphics device of the application."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7144,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "GraphicsDevice",
						"package": "playcanvas",
						"name": "GraphicsDevice"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 268,
						"name": "Filter.device"
					}
				},
				{
					"id": 97,
					"name": "needsDepthBuffer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The property that should to be set to `true` (by the custom post effect) if a depth map\nis necessary (default is false)."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7164,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 271,
						"name": "Filter.needsDepthBuffer"
					}
				},
				{
					"id": 70,
					"name": "rtCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 34,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "RenderTarget",
							"package": "playcanvas",
							"name": "RenderTarget"
						}
					},
					"defaultValue": "[]",
					"inheritedFrom": {
						"type": "reference",
						"id": 226,
						"name": "Filter.rtCache"
					}
				},
				{
					"id": 95,
					"name": "shader",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The shader definition for the fullscreen quad. Needs to be set by the custom post effect\n(default is null). Used when calling {@link drawFullscreenQuad}."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7151,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Shader",
						"package": "playcanvas",
						"name": "Shader"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 269,
						"name": "Filter.shader"
					}
				},
				{
					"id": 96,
					"name": "vertexBuffer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The vertex buffer for the fullscreen quad. Used when calling {@link drawFullscreenQuad}."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 7157,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "VertexBuffer",
						"package": "playcanvas",
						"name": "VertexBuffer"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 270,
						"name": "Filter.vertexBuffer"
					}
				},
				{
					"id": 71,
					"name": "addPasses",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 75,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 72,
							"name": "addPasses",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 73,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IfilterPass"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 230,
								"name": "Filter.addPasses"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 229,
						"name": "Filter.addPasses"
					}
				},
				{
					"id": 82,
					"name": "cache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 130,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 83,
							"name": "cache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 84,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 85,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 86,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 87,
													"name": "scale",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/classes/utils/filter.ts",
															"line": 130,
															"character": 46
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														87
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ICacheOption"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 241,
								"name": "Filter.cache"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "Filter.cache"
					}
				},
				{
					"id": 88,
					"name": "createTargetCache",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 138,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "createTargetCache",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 90,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 91,
									"name": "scale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 92,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 93,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RenderTarget",
								"package": "playcanvas",
								"name": "RenderTarget"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 247,
								"name": "Filter.createTargetCache"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 246,
						"name": "Filter.createTargetCache"
					}
				},
				{
					"id": 77,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 90,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 78,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 79,
									"name": "inputTarget",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas",
										"name": "RenderTarget"
									}
								},
								{
									"id": 80,
									"name": "outputTarget",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RenderTarget",
										"package": "playcanvas",
										"name": "RenderTarget"
									}
								},
								{
									"id": 81,
									"name": "rect",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec4",
										"package": "playcanvas",
										"name": "Vec4"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 236,
								"name": "Filter.render"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 235,
						"name": "Filter.render"
					}
				},
				{
					"id": 74,
					"name": "value",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 85,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 75,
							"name": "value",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 76,
									"name": "para",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 233,
								"name": "Filter.value"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "Filter.value"
					}
				},
				{
					"id": 59,
					"name": "parseValueToShader",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/filter.ts",
							"line": 39,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60,
							"name": "parseValueToShader",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 61,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 213,
								"name": "Filter.parseValueToShader"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 212,
						"name": "Filter.parseValueToShader"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						62
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						65,
						69,
						98,
						94,
						97,
						70,
						95,
						96
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						71,
						82,
						88,
						77,
						74,
						59
					]
				}
			],
			"sources": [
				{
					"fileName": "src/classes/filters/filter_empty.ts",
					"line": 8,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 211,
					"name": "Filter"
				}
			]
		},
		{
			"id": 273,
			"name": "MeshesRaycaster",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 277,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 278,
							"name": "new MeshesRaycaster",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 273,
								"name": "MeshesRaycaster"
							}
						}
					]
				},
				{
					"id": 280,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Application",
						"package": "playcanvas",
						"name": "Application"
					}
				},
				{
					"id": 284,
					"name": "defaultCamera",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "CameraComponent",
						"package": "playcanvas",
						"name": "CameraComponent"
					}
				},
				{
					"id": 282,
					"name": "hasListener",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 281,
					"name": "hasMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 283,
					"name": "nodeToRaycast",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 12,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							}
						],
						"qualifiedName": "Set",
						"package": "typescript",
						"name": "Set"
					}
				},
				{
					"id": 279,
					"name": "ray",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Ray",
						"package": "playcanvas",
						"name": "Ray"
					}
				},
				{
					"id": 274,
					"name": "instance",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 6,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"id": 273,
						"name": "MeshesRaycaster"
					}
				},
				{
					"id": 309,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 153,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 310,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 285,
					"name": "addNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 38,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 286,
							"name": "addNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 287,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 313,
					"name": "getNodeOfDepth",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 184,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 314,
							"name": "getNodeOfDepth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 315,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								},
								{
									"id": 316,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "GraphNode",
								"package": "playcanvas",
								"name": "GraphNode"
							}
						}
					]
				},
				{
					"id": 291,
					"name": "onMouseDown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 57,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 292,
							"name": "onMouseDown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 293,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 294,
					"name": "onMouseMove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 77,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 295,
							"name": "onMouseMove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 296,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 297,
					"name": "onMouseUp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 82,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "onMouseUp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 299,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 306,
					"name": "onTouchEnd",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 130,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 307,
							"name": "onTouchEnd",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 308,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 303,
					"name": "onTouchMove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 125,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 304,
							"name": "onTouchMove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 305,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 300,
					"name": "onTouchStart",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 104,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 301,
							"name": "onTouchStart",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 302,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 311,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 168,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 312,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 288,
					"name": "removeNode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 48,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 289,
							"name": "removeNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 290,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "GraphNode",
										"package": "playcanvas",
										"name": "GraphNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 275,
					"name": "getInstance",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/meshesRaycaster.ts",
							"line": 29,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 276,
							"name": "getInstance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 273,
								"name": "MeshesRaycaster"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						277
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						280,
						284,
						282,
						281,
						283,
						279,
						274
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						309,
						285,
						313,
						291,
						294,
						297,
						306,
						303,
						300,
						311,
						288,
						275
					]
				}
			],
			"sources": [
				{
					"fileName": "src/classes/utils/meshesRaycaster.ts",
					"line": 3,
					"character": 13
				}
			]
		},
		{
			"id": 1017,
			"name": "PathCurve",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "extendClass",
					"type": {
						"type": "reference",
						"id": 184,
						"name": "extendClass"
					},
					"arguments": {}
				}
			],
			"children": [
				{
					"id": 1018,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1019,
							"name": "new PathCurve",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 1020,
									"name": "parent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "Entity",
										"package": "playcanvas",
										"name": "Entity"
									}
								},
								{
									"id": 1021,
									"name": "curveMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1017,
								"name": "PathCurve"
							}
						}
					]
				},
				{
					"id": 1024,
					"name": "curveMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 33,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1037,
					"name": "distanceBetween",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 49,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1035,
					"name": "forward",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 47,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1031,
					"name": "lx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 42,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1032,
					"name": "ly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 43,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1033,
					"name": "lz",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 44,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1025,
					"name": "nodePercent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 35,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 1023,
					"name": "nodes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 32,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "Entity",
							"package": "playcanvas",
							"name": "Entity"
						}
					}
				},
				{
					"id": 1022,
					"name": "parent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 31,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Entity",
						"package": "playcanvas",
						"name": "Entity"
					}
				},
				{
					"id": 1026,
					"name": "pathLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 36,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1027,
					"name": "percentPreUnit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 37,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1034,
					"name": "position",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 46,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1039,
					"name": "precision",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 52,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1028,
					"name": "px",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 39,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1029,
					"name": "py",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 40,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1030,
					"name": "pz",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 41,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Curve",
						"package": "playcanvas",
						"name": "Curve"
					}
				},
				{
					"id": 1038,
					"name": "rotation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 50,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Quat",
						"package": "playcanvas",
						"name": "Quat"
					}
				},
				{
					"id": 1040,
					"name": "step",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 53,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1036,
					"name": "up",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 48,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec3",
						"package": "playcanvas",
						"name": "Vec3"
					}
				},
				{
					"id": 1049,
					"name": "cancelDraw",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 183,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1050,
							"name": "cancelDraw",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1043,
					"name": "draw",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 136,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1044,
							"name": "draw",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1045,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1046,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 1047,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 1048,
														"name": "paraName",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1059,
					"name": "getCurrentPath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 218,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1060,
							"name": "getCurrentPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1061,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1051,
					"name": "getPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 189,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1052,
							"name": "getPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1053,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						}
					]
				},
				{
					"id": 1054,
					"name": "getRotation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 196,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1055,
							"name": "getRotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1056,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1057,
									"name": "nodeRotation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1058,
									"name": "inverse",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Quat",
								"package": "playcanvas",
								"name": "Quat"
							}
						}
					]
				},
				{
					"id": 1062,
					"name": "getTangent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 228,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1063,
							"name": "getTangent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1064,
									"name": "percent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec3",
								"package": "playcanvas",
								"name": "Vec3"
							}
						}
					]
				},
				{
					"id": 1041,
					"name": "updateNodes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/extensions/newClasses/pathCurve.ts",
							"line": 95,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 1042,
							"name": "updateNodes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						1018
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1024,
						1037,
						1035,
						1031,
						1032,
						1033,
						1025,
						1023,
						1022,
						1026,
						1027,
						1034,
						1039,
						1028,
						1029,
						1030,
						1038,
						1040,
						1036
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1049,
						1043,
						1059,
						1051,
						1054,
						1062,
						1041
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/newClasses/pathCurve.ts",
					"line": 29,
					"character": 13
				}
			]
		},
		{
			"id": 126,
			"name": "ScriptTypeBase",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Base dummy duplicated pc.ScriptType class to be extended when defining.\nAll parameters and useful event-based methods made optional to avoid inadvertedly extending them or having to define them.\nCaveat is: tsconfig.json needs to be set to: \"strictNullChecks\": false",
				"tags": [
					{
						"tag": "export",
						"text": ""
					}
				]
			},
			"children": [
				{
					"id": 127,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 128,
							"name": "new ScriptTypeBase",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 126,
								"name": "ScriptTypeBase"
							}
						}
					]
				},
				{
					"id": 175,
					"name": "app",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The {@link pc.Application} that the instance of this type\nbelongs to."
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 240,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Application",
						"package": "playcanvas",
						"name": "Application"
					}
				},
				{
					"id": 145,
					"name": "attributes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"tags": [
							{
								"tag": "function",
								"text": ""
							},
							{
								"tag": "name",
								"text": "pc.EventHandler#on"
							},
							{
								"tag": "description",
								"text": "Attach an event handler to an event."
							},
							{
								"tag": "param",
								"text": "Name of the event to bind the callback to.",
								"param": "name"
							},
							{
								"tag": "param",
								"text": "Function that is called when event is fired. Note the callback is limited to 8 arguments.",
								"param": "callback"
							},
							{
								"tag": "param",
								"text": "Object to use as 'this' when the event is fired, defaults to current this.",
								"param": "[scope]"
							},
							{
								"tag": "returns",
								"text": "Self for chaining."
							},
							{
								"tag": "example",
								"text": "\nobj.on('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 141,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ScriptAttributes",
						"package": "playcanvas",
						"name": "ScriptAttributes"
					}
				},
				{
					"id": 129,
					"name": "attributesData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 86,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 130,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 131,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 132,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 109,
									"name": "AttributeParams"
								}
							}
						}
					}
				},
				{
					"id": 177,
					"name": "enabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "True if the instance of this type is in running state. False\nwhen script is not running, because the Entity or any of its parents are disabled or the\nScript Component is disabled or the Script Instance is disabled. When disabled no update\nmethods will be called on each tick. initialize and postInitialize methods will run once\nwhen the script instance is in `enabled` state during app tick."
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 252,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 176,
					"name": "entity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The {@link pc.Entity} that the instance of this type belongs to."
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 244,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Entity",
						"package": "playcanvas",
						"name": "Entity"
					}
				},
				{
					"id": 178,
					"name": "addFilters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 258,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 179,
							"name": "addFilters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "description:",
										"text": "给这个脚本挂载的相机添加滤镜"
									}
								]
							},
							"parameters": [
								{
									"id": 180,
									"name": "filter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "滤镜\n"
									},
									"type": {
										"type": "reference",
										"id": 211,
										"name": "Filter"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 181,
					"name": "bindAttribute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 294,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "bindAttribute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "description:",
										"text": "绑定此脚本属性到滤镜并根据属性实时更新"
									}
								]
							},
							"parameters": [
								{
									"id": 183,
									"name": "attrName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "要绑定的属性名\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "IattributesBinder"
							}
						}
					]
				},
				{
					"id": 156,
					"name": "fire",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 206,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 157,
							"name": "fire",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.EventHandler#fire"
									},
									{
										"tag": "description",
										"text": "Fire an event, all additional arguments are passed on to the event listener."
									},
									{
										"tag": "example",
										"text": "\nobj.fire('test', 'This is the message');\n"
									}
								]
							},
							"parameters": [
								{
									"id": 158,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Name of event to fire."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 159,
									"name": "arg1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 160,
									"name": "arg2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 161,
									"name": "arg3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 162,
									"name": "arg4",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 163,
									"name": "arg5",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 164,
									"name": "arg6",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 165,
									"name": "arg7",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 166,
									"name": "arg8",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							}
						}
					]
				},
				{
					"id": 172,
					"name": "hasEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 234,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 173,
							"name": "hasEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "True if the object has handlers bound to the specified event name.",
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.EventHandler#hasEvent"
									},
									{
										"tag": "description",
										"text": "Test if there are any handlers bound to an event name."
									},
									{
										"tag": "example",
										"text": "\nobj.on('test', function () { }); // bind an event to 'test'\nobj.hasEvent('test'); // returns true\nobj.hasEvent('hello'); // returns false\n"
									}
								]
							},
							"parameters": [
								{
									"id": 174,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The name of the event to test."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 133,
					"name": "initialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 96,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 134,
							"name": "initialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[initialize]"
									},
									{
										"tag": "description",
										"text": "Called when script is about to run for the first time.\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 151,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 188,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 152,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.EventHandler#off"
									},
									{
										"tag": "description",
										"text": "Detach an event handler from an event. If callback is not provided then all callbacks are unbound from the event,\nif scope is not provided then all events with the callback will be unbound."
									},
									{
										"tag": "example",
										"text": "\nvar handler = function () {\n};\nobj.on('test', handler);\n\nobj.off(); // Removes all events\nobj.off('test'); // Removes all events called 'test'\nobj.off('test', handler); // Removes all handler functions, called 'test'\nobj.off('test', handler, this); // Removes all hander functions, called 'test' with scope this\n"
									}
								]
							},
							"parameters": [
								{
									"id": 153,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 154,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 155,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							}
						}
					]
				},
				{
					"id": 146,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 168,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 147,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[initialize]"
									},
									{
										"tag": "description",
										"text": "Called when script is about to run for the first time.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 148,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 149,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 150,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							}
						}
					]
				},
				{
					"id": 167,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 222,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 168,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.EventHandler#once"
									},
									{
										"tag": "description",
										"text": "Attach an event handler to an event. This handler will be removed after being fired once."
									},
									{
										"tag": "example",
										"text": "\nobj.once('test', function (a, b) {\n    console.log(a + b);\n});\nobj.fire('test', 1, 2); // prints 3 to the console\nobj.fire('test', 1, 2); // not going to get handled\n"
									}
								]
							},
							"parameters": [
								{
									"id": 169,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Name of the event to bind the callback to."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 170,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Function that is called when event is fired. Note the callback is limited to 8 arguments."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "HandleEventCallback",
										"package": "playcanvas",
										"name": "HandleEventCallback"
									}
								},
								{
									"id": 171,
									"name": "scope",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "EventHandler",
								"package": "playcanvas",
								"name": "EventHandler"
							}
						}
					]
				},
				{
					"id": 135,
					"name": "postInitialize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 136,
							"name": "postInitialize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[postInitialize]"
									},
									{
										"tag": "description",
										"text": "Called after all initialize methods are executed in the same tick or enabling chain of actions.\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 140,
					"name": "postUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 116,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 141,
							"name": "postUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[postUpdate]"
									},
									{
										"tag": "description",
										"text": "Called for enabled (running state) scripts on each tick, after update."
									}
								]
							},
							"parameters": [
								{
									"id": 142,
									"name": "dt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The delta time in seconds since the last frame.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 143,
					"name": "swap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 124,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 144,
							"name": "swap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[swap]"
									},
									{
										"tag": "description",
										"text": "Called when a ScriptType that already exists in the registry\ngets redefined. If the new ScriptType has a `swap` method in its prototype,\nthen it will be executed to perform hot-reload at runtime.\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 137,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 109,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 138,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "function",
										"text": ""
									},
									{
										"tag": "name",
										"text": "pc.ScriptType#[update]"
									},
									{
										"tag": "description",
										"text": "Called for enabled (running state) scripts on each tick."
									}
								]
							},
							"parameters": [
								{
									"id": 139,
									"name": "dt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The delta time in seconds since the last frame.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						127
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						175,
						145,
						129,
						177,
						176
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						178,
						181,
						156,
						172,
						133,
						151,
						146,
						167,
						135,
						140,
						143,
						137
					]
				}
			],
			"sources": [
				{
					"fileName": "src/classes/utils/create-script-decorator.ts",
					"line": 83,
					"character": 13
				}
			]
		},
		{
			"id": 911,
			"name": "Vec2_EX",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 922,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 923,
							"name": "new Vec2_EX",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new Vec2 instance.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec2(1, 2);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 924,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 925,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 911,
								"name": "Vec2_EX"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.constructor"
					}
				},
				{
					"id": 926,
					"name": "_shaderData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true
					},
					"decorators": [
						{
							"name": "prpt",
							"type": {
								"type": "reference",
								"id": 190,
								"name": "prpt"
							},
							"arguments": {
								"data": "{ default: new Float32Array(2) }"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/vec2.ts",
							"line": 18,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Float32Array",
						"package": "typescript",
						"name": "Float32Array"
					}
				},
				{
					"id": 929,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The first component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10799,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.x"
					}
				},
				{
					"id": 930,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "The second component of the vector."
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10805,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.y"
					}
				},
				{
					"id": 919,
					"name": "DOWN",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, -1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10769,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.DOWN"
					}
				},
				{
					"id": 921,
					"name": "LEFT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [-1, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10783,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.LEFT"
					}
				},
				{
					"id": 917,
					"name": "ONE",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [1, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10755,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.ONE"
					}
				},
				{
					"id": 920,
					"name": "RIGHT",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [1, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10776,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.RIGHT"
					}
				},
				{
					"id": 918,
					"name": "UP",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, 1].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10762,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.UP"
					}
				},
				{
					"id": 916,
					"name": "ZERO",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "A constant vector set to [0, 0].",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10748,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Vec2",
						"package": "playcanvas",
						"name": "Vec2"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.ZERO"
					}
				},
				{
					"id": 927,
					"name": "shaderData",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/extensions/extendClasses/vec2.ts",
							"line": 23,
							"character": 8
						}
					],
					"getSignature": [
						{
							"id": 928,
							"name": "shaderData",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"tags": [
									{
										"tag": "description:",
										"text": "此二维向量对应的可传入shader的数据\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Float32Array",
								"package": "typescript",
								"name": "Float32Array"
							},
							"overwrites": {
								"type": "reference",
								"name": "pc.Vec2.shaderData"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "pc.Vec2.shaderData"
					}
				},
				{
					"id": 931,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10820,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 932,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a 2-dimensional vector to another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\n\na.add(b);\n\n// Outputs [30, 30]\nconsole.log(\"The result of the addition is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 933,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to add to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.add"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.add"
					}
				},
				{
					"id": 934,
					"name": "add2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10837,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 935,
							"name": "add2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds two 2-dimensional vectors together and returns the result.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\nvar r = new pc.Vec2();\n\nr.add2(a, b);\n// Outputs [30, 30]\n\nconsole.log(\"The result of the addition is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 936,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The first vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 937,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.add2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.add2"
					}
				},
				{
					"id": 938,
					"name": "addScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10851,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 939,
							"name": "addScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a number to each element of a vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 4);\n\nvec.addScalar(2);\n\n// Outputs [5, 6]\nconsole.log(\"The result of the addition is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 940,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to add."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.addScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.addScalar"
					}
				},
				{
					"id": 991,
					"name": "ceil",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11085,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 992,
							"name": "ceil",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is rounded up to the next largest integer.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.ceil"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.ceil"
					}
				},
				{
					"id": 941,
					"name": "clone",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10861,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 942,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns an identical copy of the specified 2-dimensional vector.",
								"returns": "A 2-dimensional vector containing the result of the cloning.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec2(10, 20);\nvar vclone = v.clone();\nconsole.log(\"The result of the cloning is: \" + vclone.toString());\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.clone"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.clone"
					}
				},
				{
					"id": 943,
					"name": "copy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10875,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 944,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Copies the contents of a source 2-dimensional vector to a destination 2-dimensional vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar src = new pc.Vec2(10, 20);\nvar dst = new pc.Vec2();\n\ndst.copy(src);\n\nconsole.log(\"The two vectors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 945,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "A vector to copy to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.copy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.copy"
					}
				},
				{
					"id": 946,
					"name": "cross",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10890,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 947,
							"name": "cross",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a cross product operation performed on the two specified 2-dimensional\nvectors.",
								"returns": "The cross product of the two vectors.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar right = new pc.Vec2(1, 0);\nvar up = new pc.Vec2(0, 1);\nvar crossProduct = right.cross(up);\n\n// Prints 1\nconsole.log(\"The result of the cross product is: \" + crossProduct);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 948,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second 2-dimensional vector operand of the cross product."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.cross"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.cross"
					}
				},
				{
					"id": 949,
					"name": "distance",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10902,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 950,
							"name": "distance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the distance between the two specified 2-dimensional vectors.",
								"returns": "The distance between the two vectors.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v1 = new pc.Vec2(5, 10);\nvar v2 = new pc.Vec2(10, 20);\nvar d = v1.distance(v2);\nconsole.log(\"The distance between v1 and v2 is: \" + d);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 951,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second 2-dimensional vector to test."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.distance"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.distance"
					}
				},
				{
					"id": 952,
					"name": "div",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10917,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 953,
							"name": "div",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides a 2-dimensional vector by another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(4, 9);\nvar b = new pc.Vec2(2, 3);\n\na.div(b);\n\n// Outputs [2, 3]\nconsole.log(\"The result of the division is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 954,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to divide the specified vector by."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.div"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.div"
					}
				},
				{
					"id": 955,
					"name": "div2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10934,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 956,
							"name": "div2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides one 2-dimensional vector by another and writes the result to the specified vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(4, 9);\nvar b = new pc.Vec2(2, 3);\nvar r = new pc.Vec2();\n\nr.div2(a, b);\n// Outputs [2, 3]\n\nconsole.log(\"The result of the division is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 957,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The dividend vector (the vector being divided)."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 958,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The divisor vector (the vector dividing the dividend)."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.div2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.div2"
					}
				},
				{
					"id": 959,
					"name": "divScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10948,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 960,
							"name": "divScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Divides each element of a vector by a number.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 6);\n\nvec.divScalar(3);\n\n// Outputs [1, 2]\nconsole.log(\"The result of the division is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 961,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to divide by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.divScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.divScalar"
					}
				},
				{
					"id": 962,
					"name": "dot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10961,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 963,
							"name": "dot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a dot product operation performed on the two specified 2-dimensional\nvectors.",
								"returns": "The result of the dot product operation.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v1 = new pc.Vec2(5, 10);\nvar v2 = new pc.Vec2(10, 20);\nvar v1dotv2 = v1.dot(v2);\nconsole.log(\"The result of the dot product is: \" + v1dotv2);\n"
									}
								]
							},
							"parameters": [
								{
									"id": 964,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second 2-dimensional vector operand of the dot product."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.dot"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.dot"
					}
				},
				{
					"id": 965,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10972,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 966,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Reports whether two vectors are equal.",
								"returns": "True if the vectors are equal and false otherwise.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(1, 2);\nvar b = new pc.Vec2(4, 5);\nconsole.log(\"The two vectors are \" + (a.equals(b) ? \"equal\" : \"different\"));\n"
									}
								]
							},
							"parameters": [
								{
									"id": 967,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to compare to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.equals"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.equals"
					}
				},
				{
					"id": 989,
					"name": "floor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11079,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 990,
							"name": "floor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is set to the largest integer less than or equal to its value.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.floor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.floor"
					}
				},
				{
					"id": 968,
					"name": "length",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10983,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 969,
							"name": "length",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the magnitude of the specified 2-dimensional vector.",
								"returns": "The magnitude of the specified 2-dimensional vector.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 4);\nvar len = vec.length();\n// Outputs 5\nconsole.log(\"The length of the vector is: \" + len);\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.length"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.length"
					}
				},
				{
					"id": 970,
					"name": "lengthSq",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 10994,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 971,
							"name": "lengthSq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the magnitude squared of the specified 2-dimensional vector.",
								"returns": "The magnitude of the specified 2-dimensional vector.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 4);\nvar len = vec.lengthSq();\n// Outputs 25\nconsole.log(\"The length squared of the vector is: \" + len);\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.lengthSq"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.lengthSq"
					}
				},
				{
					"id": 972,
					"name": "lerp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11013,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 973,
							"name": "lerp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of a linear interpolation between two specified 2-dimensional vectors.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(0, 0);\nvar b = new pc.Vec2(10, 10);\nvar r = new pc.Vec2();\n\nr.lerp(a, b, 0);   // r is equal to a\nr.lerp(a, b, 0.5); // r is 5, 5\nr.lerp(a, b, 1);   // r is equal to b\n"
									}
								]
							},
							"parameters": [
								{
									"id": 974,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional to interpolate from."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 975,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional to interpolate to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 976,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value controlling the point of interpolation. Between 0 and 1,\nthe linear interpolant will occur on a straight line between lhs and rhs. Outside of this\nrange, the linear interpolant will occur on a ray extrapolated from this line."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.lerp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.lerp"
					}
				},
				{
					"id": 998,
					"name": "max",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11105,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 999,
							"name": "max",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is assigned a value from rhs parameter if it is larger.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 1000,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional vector used as the source of elements to compare to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.max"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.max"
					}
				},
				{
					"id": 995,
					"name": "min",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11098,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 996,
							"name": "min",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is assigned a value from rhs parameter if it is smaller.",
								"returns": "Self for chaining.\n"
							},
							"parameters": [
								{
									"id": 997,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional vector used as the source of elements to compare to."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.min"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.min"
					}
				},
				{
					"id": 977,
					"name": "mul",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11028,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 978,
							"name": "mul",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Multiplies a 2-dimensional vector to another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(2, 3);\nvar b = new pc.Vec2(4, 5);\n\na.mul(b);\n\n// Outputs 8, 15\nconsole.log(\"The result of the multiplication is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 979,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional vector used as the second multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.mul"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.mul"
					}
				},
				{
					"id": 980,
					"name": "mul2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11045,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 981,
							"name": "mul2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the result of multiplying the specified 2-dimensional vectors together.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(2, 3);\nvar b = new pc.Vec2(4, 5);\nvar r = new pc.Vec2();\n\nr.mul2(a, b);\n\n// Outputs 8, 15\nconsole.log(\"The result of the multiplication is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 982,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional vector used as the first multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 983,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The 2-dimensional vector used as the second multiplicand of the operation."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.mul2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.mul2"
					}
				},
				{
					"id": 984,
					"name": "mulScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11059,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 985,
							"name": "mulScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Multiplies each element of a vector by a number.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 6);\n\nvec.mulScalar(3);\n\n// Outputs [9, 18]\nconsole.log(\"The result of the multiplication is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 986,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to multiply by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.mulScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.mulScalar"
					}
				},
				{
					"id": 987,
					"name": "normalize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11073,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 988,
							"name": "normalize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns this 2-dimensional vector converted to a unit vector in place. If the vector has a\nlength of zero, the vector's elements will be set to zero.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec2(25, 0);\n\nv.normalize();\n\n// Outputs 1, 0\nconsole.log(\"The result of the vector normalization is: \" + v.toString());\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.normalize"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.normalize"
					}
				},
				{
					"id": 993,
					"name": "round",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11091,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 994,
							"name": "round",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Each element is rounded up or down to the nearest integer.",
								"returns": "Self for chaining.\n"
							},
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.round"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.round"
					}
				},
				{
					"id": 1001,
					"name": "set",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11119,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1002,
							"name": "set",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Sets the specified 2-dimensional vector to the supplied numerical values.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec2();\nv.set(5, 10);\n\n// Outputs 5, 10\nconsole.log(\"The result of the vector set is: \" + v.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1003,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the first component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1004,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The value to set on the second component of the vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.set"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.set"
					}
				},
				{
					"id": 1005,
					"name": "sub",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11134,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1006,
							"name": "sub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts a 2-dimensional vector from another in place.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\n\na.sub(b);\n\n// Outputs [-10, -10]\nconsole.log(\"The result of the subtraction is: \" + a.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1007,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The vector to add to the specified vector."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.sub"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.sub"
					}
				},
				{
					"id": 1008,
					"name": "sub2",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11151,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1009,
							"name": "sub2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts two 2-dimensional vectors from one another and returns the result.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar a = new pc.Vec2(10, 10);\nvar b = new pc.Vec2(20, 20);\nvar r = new pc.Vec2();\n\nr.sub2(a, b);\n\n// Outputs [-10, -10]\nconsole.log(\"The result of the subtraction is: \" + r.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1010,
									"name": "lhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The first vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								},
								{
									"id": 1011,
									"name": "rhs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The second vector operand for the addition."
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Vec2",
										"package": "playcanvas",
										"name": "Vec2"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.sub2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.sub2"
					}
				},
				{
					"id": 1012,
					"name": "subScalar",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11165,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1013,
							"name": "subScalar",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Subtracts a number from each element of a vector.",
								"returns": "Self for chaining.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar vec = new pc.Vec2(3, 4);\n\nvec.subScalar(2);\n\n// Outputs [1, 2]\nconsole.log(\"The result of the subtraction is: \" + vec.toString());\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1014,
									"name": "scalar",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The number to subtract."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Vec2",
								"package": "playcanvas",
								"name": "Vec2"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.subScalar"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.subScalar"
					}
				},
				{
					"id": 1015,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/playcanvas/build/playcanvas.d.ts",
							"line": 11175,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1016,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Converts the vector to string form.",
								"returns": "The vector in string form.",
								"tags": [
									{
										"tag": "example",
										"text": "\nvar v = new pc.Vec2(20, 10);\n// Outputs [20, 10]\nconsole.log(v.toString());\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "pc.Vec2.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "pc.Vec2.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						922
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						926,
						929,
						930,
						919,
						921,
						917,
						920,
						918,
						916
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						927
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						931,
						934,
						938,
						991,
						941,
						943,
						946,
						949,
						952,
						955,
						959,
						962,
						965,
						989,
						968,
						970,
						972,
						998,
						995,
						977,
						980,
						984,
						987,
						993,
						1001,
						1005,
						1008,
						1012,
						1015
					]
				}
			],
			"sources": [
				{
					"fileName": "src/extensions/extendClasses/vec2.ts",
					"line": 15,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Vec2",
					"package": "playcanvas",
					"name": "Vec2"
				}
			]
		},
		{
			"id": 109,
			"name": "AttributeParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/classes/utils/create-script-decorator.ts",
					"line": 58,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 110,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 116,
							"name": "array",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 122,
							"name": "assetType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 124,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 123,
							"name": "curves",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 71,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 112,
							"name": "default",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 114,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 125,
							"name": "enum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						},
						{
							"id": 119,
							"name": "max",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 118,
							"name": "min",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 115,
							"name": "placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 120,
							"name": "precision",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 117,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 65,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 121,
							"name": "step",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 113,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 61,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 111,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/classes/utils/create-script-decorator.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "boolean"
									},
									{
										"type": "literal",
										"value": "number"
									},
									{
										"type": "literal",
										"value": "string"
									},
									{
										"type": "literal",
										"value": "json"
									},
									{
										"type": "literal",
										"value": "asset"
									},
									{
										"type": "literal",
										"value": "entity"
									},
									{
										"type": "literal",
										"value": "rgb"
									},
									{
										"type": "literal",
										"value": "rgba"
									},
									{
										"type": "literal",
										"value": "vec2"
									},
									{
										"type": "literal",
										"value": "vec3"
									},
									{
										"type": "literal",
										"value": "vec4"
									},
									{
										"type": "literal",
										"value": "curve"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								116,
								122,
								124,
								123,
								112,
								114,
								125,
								119,
								118,
								115,
								120,
								117,
								121,
								113,
								111
							]
						}
					],
					"sources": [
						{
							"fileName": "src/classes/utils/create-script-decorator.ts",
							"line": 58,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 105,
			"name": "attr",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/classes/utils/create-script-decorator.ts",
					"line": 46,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 106,
					"name": "attr",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 107,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 108,
							"name": "params",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 109,
								"name": "AttributeParams"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 99,
			"name": "createScript",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/classes/utils/create-script-decorator.ts",
					"line": 13,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 100,
					"name": "createScript",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Class decorator allowing the use of ES6 classes\nto define and create PlayCanvas script types.\nCaveat is: There is a slight iterative runtime overhead to this. (unlike Haxe which can utilize precompiled-macros)\nThe cool thing is that your script (if it uses properties) has an additional property called `attributesData` that can facilitate offboard property reflection/runtime-component\nproperty GUI creation."
					},
					"parameters": [
						{
							"id": 101,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 102,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 103,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 104,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 184,
			"name": "extendClass",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"decorates": [
				{
					"type": "reference",
					"id": 317,
					"name": "CameraComponent_EX"
				},
				{
					"type": "reference",
					"id": 545,
					"name": "Color_EX"
				},
				{
					"type": "reference",
					"id": 593,
					"name": "Curve_EX"
				},
				{
					"type": "reference",
					"id": 633,
					"name": "Entity_EX"
				},
				{
					"type": "reference",
					"id": 1017,
					"name": "PathCurve"
				}
			],
			"sources": [
				{
					"fileName": "src/classes/utils/extend-decorator.ts",
					"line": 15,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 185,
					"name": "extendClass",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 186,
							"name": "extendClassName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "null"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 187,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 188,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 189,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 199,
			"name": "newUtil",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"decorates": [
				{
					"type": "reference",
					"id": 1065,
					"name": "DebugLine"
				}
			],
			"sources": [
				{
					"fileName": "src/classes/utils/extend-decorator.ts",
					"line": 78,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 200,
					"name": "newUtil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 201,
							"name": "target",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 190,
			"name": "prpt",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"decorates": [
				{
					"type": "reference",
					"id": 638,
					"name": "_useInput"
				},
				{
					"type": "reference",
					"id": 639,
					"name": "_meshesToRaycast"
				},
				{
					"type": "reference",
					"id": 640,
					"name": "_ignoreMeshes"
				},
				{
					"type": "reference",
					"id": 641,
					"name": "_resultNodeDepth"
				},
				{
					"type": "reference",
					"id": 642,
					"name": "_changeFlag"
				},
				{
					"type": "reference",
					"id": 926,
					"name": "_shaderData"
				}
			],
			"sources": [
				{
					"fileName": "src/classes/utils/extend-decorator.ts",
					"line": 68,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 191,
					"name": "prpt",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 192,
							"name": "data",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 193,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 194,
											"name": "default",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/classes/utils/extend-decorator.ts",
													"line": 68,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												194
											]
										}
									]
								}
							},
							"defaultValue": "null"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 195,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 196,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 197,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 198,
											"name": "propertyKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				317,
				545,
				593,
				1065,
				633,
				211,
				1,
				58,
				273,
				1017,
				126,
				911
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				109
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				105,
				99,
				184,
				199,
				190
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}